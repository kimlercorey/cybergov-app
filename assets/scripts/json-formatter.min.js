"use strict";angular.module("jsonFormatter",["RecursionHelper"]).provider("JSONFormatterConfig",function(){var hoverPreviewEnabled=!1,hoverPreviewArrayCount=100,hoverPreviewFieldCount=5;return{get hoverPreviewEnabled(){return hoverPreviewEnabled},set hoverPreviewEnabled(value){hoverPreviewEnabled=!!value},get hoverPreviewArrayCount(){return hoverPreviewArrayCount},set hoverPreviewArrayCount(value){hoverPreviewArrayCount=parseInt(value,10)},get hoverPreviewFieldCount(){return hoverPreviewFieldCount},set hoverPreviewFieldCount(value){hoverPreviewFieldCount=parseInt(value,10)},$get:function(){return{hoverPreviewEnabled:hoverPreviewEnabled,hoverPreviewArrayCount:hoverPreviewArrayCount,hoverPreviewFieldCount:hoverPreviewFieldCount}}}}).directive("jsonFormatter",["RecursionHelper","JSONFormatterConfig",function(RecursionHelper,JSONFormatterConfig){function escapeString(str){return str.replace('"','"')}function getObjectName(object){if(void 0===object)return"";if(null===object)return"Object";if("object"==typeof object&&!object.constructor)return"Object";var funcNameRegex=/function (.{1,})\(/,results=funcNameRegex.exec(object.constructor.toString());return results&&results.length>1?results[1]:""}function getType(object){return null===object?"null":typeof object}function getValuePreview(object,value){var type=getType(object);return"null"===type||"undefined"===type?type:("string"===type&&(value='"'+escapeString(value)+'"'),"function"===type?object.toString().replace(/[\r\n]/g,"").replace(/\{.*\}/,"")+"{…}":value)}function getPreview(object){var value="";return angular.isObject(object)?(value=getObjectName(object),angular.isArray(object)&&(value+="["+object.length+"]")):value=getValuePreview(object,object),value}function link(scope){scope.isArray=function(){return angular.isArray(scope.json)},scope.isObject=function(){return angular.isObject(scope.json)},scope.getKeys=function(){if(scope.isObject())return Object.keys(scope.json).map(function(key){return""===key?'""':key})},scope.type=getType(scope.json),scope.hasKey="undefined"!=typeof scope.key,scope.getConstructorName=function(){return getObjectName(scope.json)},"string"===scope.type&&("Invalid Date"!==new Date(scope.json).toString()&&(scope.isDate=!0),0===scope.json.indexOf("http")&&(scope.isUrl=!0)),scope.isEmptyObject=function(){return scope.getKeys()&&!scope.getKeys().length&&scope.isOpen&&!scope.isArray()},scope.isOpen=!!scope.open,scope.toggleOpen=function(){scope.isOpen=!scope.isOpen},scope.childrenOpen=function(){return scope.open>1?scope.open-1:0},scope.openLink=function(isUrl){isUrl&&(window.location.href=scope.json)},scope.parseValue=function(value){return getValuePreview(scope.json,value)},scope.showThumbnail=function(){return!!JSONFormatterConfig.hoverPreviewEnabled&&scope.isObject()&&!scope.isOpen},scope.getThumbnail=function(){if(scope.isArray())return scope.json.length>JSONFormatterConfig.hoverPreviewArrayCount?"Array["+scope.json.length+"]":"["+scope.json.map(getPreview).join(", ")+"]";var keys=scope.getKeys(),narrowKeys=keys.slice(0,JSONFormatterConfig.hoverPreviewFieldCount),kvs=narrowKeys.map(function(key){return key+":"+getPreview(scope.json[key])}),ellipsis=keys.length>=5?"…":"";return"{"+kvs.join(", ")+ellipsis+"}"}}return{templateUrl:"json-formatter.html",restrict:"E",replace:!0,scope:{json:"=",key:"=",open:"="},compile:function(element){return RecursionHelper.compile(element,link)}}}]),"object"==typeof module&&(module.exports="jsonFormatter"),angular.module("RecursionHelper",[]).factory("RecursionHelper",["$compile",function($compile){return{compile:function(element,link){angular.isFunction(link)&&(link={post:link});var compiledContents,contents=element.contents().remove();return{pre:link&&link.pre?link.pre:null,post:function(scope,element){compiledContents||(compiledContents=$compile(contents)),compiledContents(scope,function(clone){element.append(clone)}),link&&link.post&&link.post.apply(null,arguments)}}}}}]),angular.module("jsonFormatter").run(["$templateCache",function($templateCache){$templateCache.put("json-formatter.html",'<div ng-init="isOpen = open && open > 0" class="json-formatter-row"><a ng-click="toggleOpen()"><span class="toggler {{isOpen ? \'open\' : \'\'}}" ng-if="isObject()"></span> <span class="key" ng-if="hasKey"><span class="key-text">{{key}}</span><span class="colon">:</span></span> <span class="value"><span ng-if="isObject()"><span class="constructor-name">{{getConstructorName(json)}}</span> <span ng-if="isArray()"><span class="bracket">[</span><span class="number">{{json.length}}</span><span class="bracket">]</span></span></span> <span ng-if="!isObject()" ng-click="openLink(isUrl)" class="{{type}}" ng-class="{date: isDate, url: isUrl}">{{parseValue(json)}}</span></span> <span ng-if="showThumbnail()" class="thumbnail-text">{{getThumbnail()}}</span></a><div class="children" ng-if="getKeys().length && isOpen"><json-formatter ng-repeat="key in getKeys() track by $index" json="json[key]" key="key" open="childrenOpen()"></json-formatter></div><div class="children empty object" ng-if="isEmptyObject()"></div><div class="children empty array" ng-if="getKeys() && !getKeys().length && isOpen && isArray()"></div></div>')}]);
//# sourceMappingURL=json-formatter.min.js.map
