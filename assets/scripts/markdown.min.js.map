{"version":3,"sources":["markdown.min.js"],"names":["angular","module","provider","opts","config","newOpts","$get","showdown","Converter","directive","$sanitize","markdownConverter","restrict","link","scope","element","attrs","btfMarkdown","$watch","newVal","html","makeHtml","text"],"mappings":"AAMA,YAEAA,SAAQC,OAAO,mBAAoB,eACjCC,SAAS,oBAAqB,WAC5B,GAAIC,QACJ,QACEC,OAAQ,SAAUC,SAChBF,KAAOE,SAETC,KAAM,WACJ,MAAO,IAAIC,UAASC,UAAUL,UAIpCM,UAAU,eAAgB,YAAa,oBAAqB,SAAUC,UAAWC,mBAC/E,OACEC,SAAU,KACVC,KAAM,SAAUC,MAAOC,QAASC,OAC9B,GAAIA,MAAMC,YACRH,MAAMI,OAAOF,MAAMC,YAAa,SAAUE,QACxC,GAAIC,MAAOD,OAAST,UAAUC,kBAAkBU,SAASF,SAAW,EACpEJ,SAAQK,KAAKA,YAEV,CACL,GAAIA,MAAOV,UAAUC,kBAAkBU,SAASN,QAAQO,QACxDP,SAAQK,KAAKA","file":"markdown.min.js","sourcesContent":["/*\n * angular-markdown-directive v0.3.1\n * (c) 2013-2014 Brian Ford http://briantford.com\n * License: MIT\n */\n\n'use strict';\n\nangular.module('btford.markdown', ['ngSanitize']).\n  provider('markdownConverter', function () {\n    var opts = {};\n    return {\n      config: function (newOpts) {\n        opts = newOpts;\n      },\n      $get: function () {\n        return new showdown.Converter(opts);\n      }\n    };\n  }).\n  directive('btfMarkdown', ['$sanitize', 'markdownConverter', function ($sanitize, markdownConverter) {\n    return {\n      restrict: 'AE',\n      link: function (scope, element, attrs) {\n        if (attrs.btfMarkdown) {\n          scope.$watch(attrs.btfMarkdown, function (newVal) {\n            var html = newVal ? $sanitize(markdownConverter.makeHtml(newVal)) : '';\n            element.html(html);\n          });\n        } else {\n          var html = $sanitize(markdownConverter.makeHtml(element.text()));\n          element.html(html);\n        }\n      }\n    };\n  }]);\n"]}