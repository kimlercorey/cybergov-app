{"version":3,"sources":["utilities/liquidFillGauge.js","datatables.js","directives/bar-chart.js","directives/bullet-chart.js","directives/collection-members.js","directives/donut-chart.js","directives/fill-chart.js","directives/item-block.js","directives/multiple-timeline.js","directives/needle-chart.js","directives/pie-chart-label.js","directives/pie-chart.js","directives/progress-meter.js","directives/section-header.js","directives/stacked-barchart.js","directives/timeseries-barplot.js","directives/trend-chart.js","directives/us-map.js","filters/apply-filter-from-string.js","filters/capitilize.js","filters/percentage.js","filters/significantDigits.js","filters/titlecase.js"],"names":["liquidFillGaugeDefaultSettings","minValue","maxValue","circleThickness","circleFillGap","circleColor","waveHeight","waveCount","waveRiseTime","waveAnimateTime","waveRise","waveHeightScaling","waveAnimate","waveColor","waveOffset","textVertPosition","textSize","valueCountUp","displayPercent","textColor","waveTextColor","loadLiquidFillGauge","elementId","value","config","animateWave","wave","attr","waveAnimateScale","transition","duration","ease","each","GaugeUpdater","this","update","newFinalValue","parseFloat","toFixed","textRounderUpdater","Math","round","textTween","i","d3","interpolate","textContent","t","percentText","text1","tween","text2","newClipArea","fillPercent","max","min","fillCircleRadius","waveHeightScale","waveRiseScale","scale","linear","range","fillCircleMargin","domain","newHeight","waveScaleX","waveClipWidth","waveScaleY","svg","area","x","d","y0","sin","PI","y","y1","clipArea","newWavePosition","waveGroup","waveGroupXPosition","undefined","gauge","select","radius","parseInt","style","locationX","locationY","console","log","textPixels","textFinalValue","textStartValue","waveLength","waveClipCount","textRounder","data","push","gaugeCircleX","gaugeCircleY","textRiseScaleY","gaugeGroup","append","gaugeCircleArc","arc","startAngle","endAngle","outerRadius","innerRadius","text","datum","fillCircleGroup","h","define","amd","D","window","document","exports","module","I","require","jQuery","k","X","a","b","c","e","match","indexOf","replace","toLowerCase","_hungarianMap","K","charAt","extend","Da","m","defaults","oLanguage","sZeroRecords","sEmptyTable","E","sLoadingRecords","sInfoThousands","sThousands","sDecimal","db","eb","A","sScrollX","scrollX","aoSearchCols","length","models","oSearch","fb","aDataSort","isArray","gb","__browser","css","position","top","left","height","width","overflow","appendTo","children","barWidth","offsetWidth","clientWidth","bScrollOversize","bScrollbarLeft","offset","bBounding","getBoundingClientRect","remove","oBrowser","oScroll","iBarWidth","hb","f","g","j","hasOwnProperty","Ea","column","aoColumns","oColumn","nTh","createElement","sTitle","innerHTML","mData","idx","aoPreSearchCols","ja","oClasses","sWidthOrig","mDataProp","sType","_sManualType","className","sClass","iDataSort","Q","mRender","_bAttrSrc","isPlainObject","sort","type","filter","_setter","fnGetData","fnSetData","R","_rowReadObject","oFeatures","bSort","bSortable","addClass","sSortableNone","inArray","asSorting","sSortingClass","sSortableAsc","sSortingClassJUI","sSortJUIAscAllowed","sSortableDesc","sSortJUIDescAllowed","sSortable","sSortJUI","Y","bAutoWidth","Fa","sWidth","sY","sX","ka","u","Z","la","$","aa","bVisible","map","Ga","l","q","aoData","ext","detect","B","ib","n","targets","aTargets","hasClass","N","oRow","src","_aData","aiDisplayMaster","rowIdFn","aIds","bDeferRender","Ha","ma","Ia","cells","iDraw","sDefaultContent","settings","row","col","iDrawError","L","call","jb","Ja","_","ba","U","splice","join","substring","slice","Ka","G","na","aiDisplay","oa","ca","childNodes","removeChild","firstChild","anCells","_aSortData","_aFilterData","La","getAttribute","S","trim","nodeName","toUpperCase","nextSibling","nTr","rowId","_DT_RowIndex","sCellType","_DT_CellIndex","appendChild","parentNode","fnCreatedCell","oInstance","setAttribute","id","DT_RowClass","split","__rowc","pa","concat","removeClass","DT_RowAttr","DT_RowData","kb","nTHead","nTFoot","iTabIndex","sTableId","Ma","html","Na","da","aoHeader","find","sHeaderTH","sFooterTH","aoFooter","nTf","cell","ea","O","C","asStripeClasses","iInitDisplayStart","bDrawing","_iDisplayStart","fnRecordsDisplay","fnDisplayEnd","bDeferLoading","bDestroying","lb","_sRowStripe","fnRecordsTotal","class","valign","colSpan","sRowEmpty","nTBody","detach","bSorted","bFiltered","T","bFilter","mb","fa","oPreviousSearch","_drawHold","nb","nTable","insertBefore","sWrapper","sNoFooter","nHolding","nTableWrapper","nTableReinsertBefore","sDom","sJUIHeader","sJUIFooter","substr","parent","bPaginate","bLengthChange","ob","pb","bProcessing","qb","rb","bInfo","sb","tb","feature","cFeature","fnInit","aanFeatures","replaceWith","unique","qa","bSortCellsTop","ra","name","ajax","jqXHR","isFunction","success","error","sError","json","dataType","cache","sServerMethod","readyState","oAjaxData","fnServerData","sAjaxSource","url","bAjaxDataGet","ub","vb","V","_iDisplayLength","draw","columns","order","start","search","sSearch","regex","bRegex","sName","searchable","bSearchable","orderable","dir","legacy","sa","sEcho","iTotalRecords","recordsTotal","iTotalDisplayRecords","recordsFiltered","_iRecordsTotal","_iRecordsDisplay","_bInitComplete","ta","dataSrc","sAjaxDataProp","aaData","sFilterInput","sFilter","bSmart","bCaseInsensitive","searchDelay","val","sSearchPlaceholder","bind","Oa","keyCode","on","activeElement","wb","bEscapeRegex","xb","yb","merge","Pa","test","zb","_sFilterRow","Qa","RegExp","toString","ua","Zb","innerText","Ab","smart","caseInsensitive","Bb","sInfo","aoDrawCallback","fn","Cb","sInfoEmpty","sInfoFiltered","sInfoPostFix","Db","fnInfoCallback","fnFormatNumber","ceil","ga","bInitialised","setTimeout","oInit","Ra","Sa","aLengthMenu","aria-controls","sLengthSelect","Option","sLength","sLengthMenu","outerHTML","sPaginationType","pager","sPaging","p","fnUpdate","Ta","floor","r","sProcessing","_captionSide","cloneNode","sScrollWrapper","sScrollHead","border","sScrollHeadInner","box-sizing","sXInner","removeAttr","sScrollBody","sScrollFoot","sScrollFootInner","scrollLeft","bCollapse","nScrollHead","nScrollBody","nScrollFoot","P","v","w","o","F","Eb","Ua","s","z","paddingTop","paddingBottom","borderTopWidth","borderBottomWidth","scrollHeight","clientHeight","scrollBarVis","clone","prependTo","J","outerWidth","offsetHeight","scroll","scrollTop","nodeType","Fb","eq","margin","padding","Gb","sContentPadding","right","_reszEvt","sInstance","body","Hb","$b","aaSortingFixed","pre","aaSorting","post","_idx","index","formatter","Ib","Jb","oAria","removeAttribute","sSortAscending","sSortDescending","Va","bSortMulti","Wa","shiftKey","va","aLastSort","sSortColumn","bSortClasses","sSortDataType","wa","bStateSave","time","Date","visible","oSavedState","fnStateSaveCallback","Kb","fnStateLoadCallback","iStateDuration","oLoadedState","xa","sErrMode","errMode","alert","Error","Lb","blur","which","preventDefault","reverse","apply","Event","trigger","result","renderer","bServerSide","ya","Mb","numbers_length","W","DT_el","num","za","num-fmt","Xa","html-num","Aa","html-num-fmt","Nb","iApiIndex","Array","prototype","arguments","internal","api","rows","fnAddData","add","flatten","toArray","fnAdjustColumnSizing","adjust","fnClearTable","clear","fnClose","child","hide","fnDeleteRow","fnDestroy","destroy","fnDraw","fnFilter","fnGetNodes","node","nodes","fnGetPosition","columnVisible","fnIsOpen","isShown","fnOpen","show","fnPageChange","page","fnSetColumnVis","fnSettings","fnSort","fnSortListener","listener","fnVersionCheck","oApi","bRetrieve","bDestroy","_unique","oSettings","sDestroyWidth","dataTable","iDisplayLength","fnDrawCallback","fnServerParams","fnStateSaveParams","fnStateLoadParams","fnStateLoaded","fnRowCallback","fnCreatedRow","fnHeaderCallback","fnFooterCallback","fnInitComplete","fnPreDrawCallback","bJQueryUI","oJUIClasses","header","classes","sTable","iDisplayStart","iDeferLoading","sUrl","sStripeOdd","sStripeEven","asDestroyStripes","getElementsByTagName","aoColumnDefs","Ya","Ob","ac","bc","cc","M","Pb","isNaN","isFinite","Qb","Za","Rb","ha","Sb","util","throttle","clearTimeout","escapeRegex","Tb","dc","context","selector","cols","opts","Api","any","count","iterator","Ba","lastIndexOf","pluck","pop","reduce","reduceRight","shift","to$","toJQuery","unshift","__dt_wrapper","methodExt","propExt","register","registerPlural","tables","info","pages","end","recordsDisplay","serverSide","Ub","one","abort","$a","ab","bb","closest","cb","_details","_detailsShow","Vb","insertAfter","off","ec","Wb","versionCheck","version","isDataTable","fnIsDataTable","get","fnTables","is","camelToHungarian","unbind","bJUI","sSortIcon","sSortJUIWrapper","contents","bScrollCollapse","JSON","parse","sessionStorage","localStorage","getItem","location","pathname","setItem","stringify","oPaginate","sFirst","sLast","sNext","sPrevious","sScrollXInner","sScrollY","aoRowCallback","aoHeaderCallback","aoFooterCallback","aoRowCreatedCallback","aoPreDrawCallback","aoInitComplete","aoStateSaveParams","aoStateLoadParams","aoStateLoaded","aoOpenRows","aoStateSave","aoStateLoad","aoServerParams","aoDestroyCallback","oPlugins","buttons","build","pageButton","sVersion","afnFiltering","aTypes","ofnSearch","oSort","afnSortData","aoFeatures","oStdClasses","oPagination","sPageButton","sPageButtonActive","sPageButtonDisabled","sSortAsc","sSortDesc","sSortJUIAsc","sSortJUIDesc","Ca","H","ia","Xb","simple","full","numbers","simple_numbers","full_numbers","_numbers","paginate","action","aria-label","data-dt-idx","tabindex","empty","focus","string","Infinity","date-pre","html-pre","string-pre","string-asc","string-desc","jqueryui","Yb","render","number","display","abs","_fnExternApiFunc","_fnBuildAjax","_fnAjaxUpdate","_fnAjaxParameters","_fnAjaxUpdateDraw","_fnAjaxDataSrc","_fnAddColumn","_fnColumnOptions","_fnAdjustColumnSizing","_fnVisibleToColumnIndex","_fnColumnIndexToVisible","_fnVisbleColumns","_fnGetColumns","_fnColumnTypes","_fnApplyColumnDefs","_fnHungarianMap","_fnCamelToHungarian","_fnLanguageCompat","_fnBrowserDetect","_fnAddData","_fnAddTr","_fnNodeToDataIndex","_fnNodeToColumnIndex","_fnGetCellData","_fnSetCellData","_fnSplitObjNotation","_fnGetObjectDataFn","_fnSetObjectDataFn","_fnGetDataMaster","_fnClearTable","_fnDeleteIndex","_fnInvalidate","_fnGetRowElements","_fnCreateTr","_fnBuildHead","_fnDrawHead","_fnDraw","_fnReDraw","_fnAddOptionsHtml","_fnDetectHeader","_fnGetUniqueThs","_fnFeatureHtmlFilter","_fnFilterComplete","_fnFilterCustom","_fnFilterColumn","_fnFilter","_fnFilterCreateSearch","_fnEscapeRegex","_fnFilterData","_fnFeatureHtmlInfo","_fnUpdateInfo","_fnInfoMacros","_fnInitialise","_fnInitComplete","_fnLengthChange","_fnFeatureHtmlLength","_fnFeatureHtmlPaginate","_fnPageChange","_fnFeatureHtmlProcessing","_fnProcessingDisplay","_fnFeatureHtmlTable","_fnScrollDraw","_fnApplyToChildren","_fnCalculateColumnWidths","_fnThrottle","_fnConvertToWidth","_fnGetWidestNode","_fnGetMaxLenString","_fnStringToCss","_fnSortFlatten","_fnSort","_fnSortAria","_fnSortListener","_fnSortAttachListener","_fnSortingClasses","_fnSortData","_fnSaveState","_fnLoadState","_fnSettingsFromNode","_fnLog","_fnMap","_fnBindAction","_fnCallbackReg","_fnCallbackFire","_fnLengthOverflow","_fnRenderer","_fnDataSource","_fnRowAttributes","_fnCalculateEnd","dataTableSettings","dataTableExt","DataTable","dt","current","responsive","details","_constructor","_responsive","_resize","table","_setColumnVis","breakpoints","_classLogic","_resizeAuto","_detailsInit","_redrawChildren","_columnsVisiblity","columnIdx","priority","auto","minWidth","includeIn","container","control","never","responsivePriority","_find","_detailsDisplay","_detailsObj","triggerHandler","target","_tabIndexes","click","title","orthogonal","hidden","columnIndex","rowIndex","toggleClass","footer","removeData","childRow","childRowImmediate","hasHidden","modal","stopPropagation","prepend","listHidden","tableAll","tableClass","Responsive","namespace","PARTICLE","directive","$parse","$window","$timeout","directiveDefinitionObject","restrict","scope","datasets","colors","percentcomplete","successpercent","mockup","link","element","attrs","drawn","drawMe","indexval","dataset","layers","chartInset","hasSuccessIndicator","hasBandIndicator","bottom","widthPercentSize","needLength","primary_fill","color_2","needle","bg","legend","Object","keys","forEach","key","el","parentElement","spending","format","sub","date","rating","layout","stack","xScale","startdate","enddate","yScale","nice","ordinal","rangeRoundBands","rangeRound","chart","category10","xAxis","axis","orient","tickFormat","yAxis","yTick","selectAll","getMonth","xtickdist","ytickdist","yticks","enter","member","rangestart","rangeend","ratio","delay","alttext","drawDelay","innerWidth","innerHeight","plainTextFromHTML","String","ah","margins","texmargin","month","group","x0","xScaleRev","months","ticks","innerTickSize","groups","successBarWidth","bar","transclude","typeclass","message","template","templateUrl","lab","units","pack","assignto","unitcolor","bgcolor","labelwidth","valuewidth","ctrl","controlClick","evt","obj","isActive","label","fade","lgsize","color","labelcolor","flag","ui","$new","collection","requirements","toggle","myData","$compile","$rootScope","collectionSt","$on","msg","id_class","group_class","angular","widgets","cloned","controller","$scope","initial_state","disable_hide_show","hides","$broadcast","whoamiin","$watch","tw","th","pie","_current","elementid","fields","rangePoints","outerTickSize","tickPadding","point","centerTranslation","degToRad","repaintGauge","success_per","padRad","percToDeg","percToRad","percent","successIndicatorDegWidth","labelFormat","perc","totalAngle","deg","lg","newAngle","turnAngle","xpos","ypos","cos","arc_Background","arc_Progress","arc_Success","gaugeRange","successAngleEnd","startAngleRad","endAngleRad","perAngle","successAngle","Needle","len","recalcPointerPos","centerX","centerY","leftX","leftY","rightX","rightY","thetaRad","topX","topY","moveTo","self","oldValue","percentOfPercent","progress","randomData","labels","random","change","midAngle","insert","attrTween","exit","d2","pos","outerArc","centroid","styleTween","polyline","twoPi","bits","total","dataSets","meter","foreground","item","layer","year","rangeBand","y_axis","endDate","startDate","readDate","values","xticks","x_axis","metrics","xTickValues","date_format","extent","tickValues","line","metric","__data__","projection","geo","albersUsa","translate","path","quantize","csv","dataState","state","dataValue","features","jsonState","properties","$filter","filters","params","parts","filterName","filterFn","input","all","reg","txt","param1","places","digits","Number","toPrecision","smallWords"],"mappings":"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","file":"itdashboard.gov.min.js","sourcesContent":["/***\n *    ██╗     ██╗ ██████╗ ██╗   ██╗██╗██████╗     ███████╗██╗██╗     ██╗\n *    ██║     ██║██╔═══██╗██║   ██║██║██╔══██╗    ██╔════╝██║██║     ██║\n *    ██║     ██║██║   ██║██║   ██║██║██║  ██║    █████╗  ██║██║     ██║\n *    ██║     ██║██║▄▄ ██║██║   ██║██║██║  ██║    ██╔══╝  ██║██║     ██║\n *    ███████╗██║╚██████╔╝╚██████╔╝██║██████╔╝    ██║     ██║███████╗███████╗\n *    ╚══════╝╚═╝ ╚══▀▀═╝  ╚═════╝ ╚═╝╚═════╝     ╚═╝     ╚═╝╚══════╝╚══════╝\n *     ██████╗  █████╗ ██╗   ██╗ ██████╗ ███████╗\n *    ██╔════╝ ██╔══██╗██║   ██║██╔════╝ ██╔════╝\n *    ██║  ███╗███████║██║   ██║██║  ███╗█████╗\n *    ██║   ██║██╔══██║██║   ██║██║   ██║██╔══╝\n *    ╚██████╔╝██║  ██║╚██████╔╝╚██████╔╝███████╗\n *     ╚═════╝ ╚═╝  ╚═╝ ╚═════╝  ╚═════╝ ╚══════╝\n *      _   _  _    _  _  _  _\n *     | | | || |_ (_)| |(_)| |_  _   _\n *     | | | || __|| || || || __|| | | |\n *     | |_| || |_ | || || || |_ | |_| |\n *      \\___/  \\__||_||_||_| \\__| \\__, |\n *                                |___/\n *\n *    A utility for rendering animated liquid fill gauge graphics.\n */\n\n/*!\n * @license Open source under BSD 2-clause (http://choosealicense.com/licenses/bsd-2-clause/)\n * Copyright (c) 2015, Curtis Bratton\n * All rights reserved.\n *\n * Liquid Fill Gauge v1.1\n */\nfunction liquidFillGaugeDefaultSettings(){\n    return {\n        minValue: 0, // The gauge minimum value.\n        maxValue: 100, // The gauge maximum value.\n        circleThickness: 0.1, // The outer circle thickness as a percentage of it's radius.\n        circleFillGap: 0.02, // The size of the gap between the outer circle and wave circle as a percentage of the outer circles radius.\n        circleColor: \"#178BCA\", // The color of the outer circle.\n        waveHeight: 0.05, // The wave height as a percentage of the radius of the wave circle.\n        waveCount: 1, // The number of full waves per width of the wave circle.\n        waveRiseTime: 1000, // The amount of time in milliseconds for the wave to rise from 0 to it's final height.\n        waveAnimateTime: 18000, // The amount of time in milliseconds for a full wave to enter the wave circle.\n        waveRise: true, // Control if the wave should rise from 0 to it's full height, or start at it's full height.\n        waveHeightScaling: true, // Controls wave size scaling at low and high fill percentages. When true, wave height reaches it's maximum at 50% fill, and minimum at 0% and 100% fill. This helps to prevent the wave from making the wave circle from appear totally full or empty when near it's minimum or maximum fill.\n        waveAnimate: true, // Controls if the wave scrolls or is static.\n        waveColor: \"#178BCA\", // The color of the fill wave.\n        waveOffset: 0, // The amount to initially offset the wave. 0 = no offset. 1 = offset of one full wave.\n        textVertPosition: 0.5, // The height at which to display the percentage text withing the wave circle. 0 = bottom, 1 = top.\n        textSize: 1, // The relative height of the text to display in the wave circle. 1 = 50%\n        valueCountUp: true, // If true, the displayed value counts up from 0 to it's final value upon loading. If false, the final value is displayed.\n        displayPercent: true, // If true, a % symbol is displayed after the value.\n        textColor: \"#fff\", // The color of the value text when the wave does not overlap it.\n        waveTextColor: \"rgba(255,255,255,.5)\" // The color of the value text when the wave overlaps it.\n    };\n}\n\nfunction loadLiquidFillGauge(elementId, value, config) {\n    if(config === undefined) config = liquidFillGaugeDefaultSettings();\n\n    var gauge = d3.select(\"#\" + elementId);\n    var radius = Math.min(parseInt(gauge.style(\"width\")), parseInt(gauge.style(\"height\")))/2;\n    var locationX = parseInt(gauge.style(\"width\"))/2 - radius;\n    var locationY = parseInt(gauge.style(\"height\"))/2 - radius;\n\t\t  console.log(config);\n    var fillPercent = Math.max(config.minValue, Math.min(config.maxValue, value))/config.maxValue;\n\n    var waveHeightScale;\n    if(config.waveHeightScaling){\n        waveHeightScale = d3.scale.linear()\n            .range([0,config.waveHeight,0])\n            .domain([0,50,100]);\n    } else {\n        waveHeightScale = d3.scale.linear()\n            .range([config.waveHeight,config.waveHeight])\n            .domain([0,100]);\n    }\n\n    var textPixels = (config.textSize*radius/2);\n    var textFinalValue = parseFloat(value).toFixed(2);\n    var textStartValue = config.valueCountUp?config.minValue:textFinalValue;\n    var percentText = config.displayPercent?\"%\":\"\";\n    var circleThickness = config.circleThickness * radius;\n    var circleFillGap = config.circleFillGap * radius;\n    var fillCircleMargin = circleThickness + circleFillGap;\n    var fillCircleRadius = radius - fillCircleMargin;\n    var waveHeight = fillCircleRadius*waveHeightScale(fillPercent*100);\n\n    var waveLength = fillCircleRadius*2/config.waveCount;\n    var waveClipCount = 1+config.waveCount;\n    var waveClipWidth = waveLength*waveClipCount;\n\n    // Rounding functions so that the correct number of decimal places is always displayed as the value counts up.\n    var textRounder = function(value){ return Math.round(value); };\n    if(parseFloat(textFinalValue) != parseFloat(textRounder(textFinalValue))){\n        textRounder = function(value){ return parseFloat(value).toFixed(1); };\n    }\n    if(parseFloat(textFinalValue) != parseFloat(textRounder(textFinalValue))){\n        textRounder = function(value){ return parseFloat(value).toFixed(2); };\n    }\n\n    // Data for building the clip wave area.\n    var data = [];\n    for(var i = 0; i <= 40*waveClipCount; i++){\n        data.push({x: i/(40*waveClipCount), y: (i/(40))});\n    }\n\n    // Scales for drawing the outer circle.\n    var gaugeCircleX = d3.scale.linear().range([0,2*Math.PI]).domain([0,1]);\n    var gaugeCircleY = d3.scale.linear().range([0,radius]).domain([0,radius]);\n\n    // Scales for controlling the size of the clipping path.\n    var waveScaleX = d3.scale.linear().range([0,waveClipWidth]).domain([0,1]);\n    var waveScaleY = d3.scale.linear().range([0,waveHeight]).domain([0,1]);\n\n    // Scales for controlling the position of the clipping path.\n    var waveRiseScale = d3.scale.linear()\n        // The clipping area size is the height of the fill circle + the wave height, so we position the clip wave\n        // such that the it will overlap the fill circle at all when at 0%, and will totally cover the fill\n        // circle at 100%.\n        .range([(fillCircleMargin+fillCircleRadius*2+waveHeight),(fillCircleMargin-waveHeight)])\n        .domain([0,1]);\n    var waveAnimateScale = d3.scale.linear()\n        .range([0, waveClipWidth-fillCircleRadius*2]) // Push the clip area one full wave then snap back.\n        .domain([0,1]);\n\n    // Scale for controlling the position of the text within the gauge.\n    var textRiseScaleY = d3.scale.linear()\n        .range([fillCircleMargin+fillCircleRadius*2,(fillCircleMargin+textPixels*0.7)])\n        .domain([0,1]);\n\n    // Center the gauge within the parent SVG.\n    var gaugeGroup = gauge.append(\"g\")\n        .attr('transform','translate('+locationX+','+locationY+')');\n\n    // Draw the outer circle.\n    var gaugeCircleArc = d3.svg.arc()\n        .startAngle(gaugeCircleX(0))\n        .endAngle(gaugeCircleX(1))\n        .outerRadius(gaugeCircleY(radius))\n        .innerRadius(gaugeCircleY(radius-circleThickness));\n    gaugeGroup.append(\"path\")\n        .attr(\"d\", gaugeCircleArc)\n        .attr(\"class\", 'fill-color-0')\n        .attr('transform','translate('+radius+','+radius+')');\n\n    // Text where the wave does not overlap.\n    var text1 = gaugeGroup.append(\"text\")\n        .text(textRounder(textStartValue) + percentText)\n        .attr(\"class\", \"liquidFillGaugeText\")\n        .attr(\"text-anchor\", \"middle\")\n        .attr(\"font-size\", textPixels + \"px\")\n        .style(\"fill\", config.textColor)\n        .attr('transform','translate('+radius+','+textRiseScaleY(config.textVertPosition)+')');\n\n    // The clipping wave area.\n    var clipArea = d3.svg.area()\n        .x(function(d) { return waveScaleX(d.x); } )\n        .y0(function(d) { return waveScaleY(Math.sin(Math.PI*2*config.waveOffset*-1 + Math.PI*2*(1-config.waveCount) + d.y*2*Math.PI));} )\n        .y1(function(d) { return (fillCircleRadius*2 + waveHeight); } );\n    var waveGroup = gaugeGroup.append(\"defs\")\n        .append(\"clipPath\")\n        .attr(\"id\", \"clipWave\" + elementId);\n    var wave = waveGroup.append(\"path\")\n        .datum(data)\n        .attr(\"d\", clipArea)\n        .attr(\"T\", 0);\n\n    // The inner circle with the clipping wave attached.\n    var fillCircleGroup = gaugeGroup.append(\"g\")\n        .attr(\"clip-path\", \"url(#clipWave\" + elementId + \")\");\n    fillCircleGroup.append(\"circle\")\n        .attr(\"cx\", radius)\n        .attr(\"cy\", radius)\n        .attr(\"r\", fillCircleRadius)\n        .attr(\"class\", 'fill-color-1');\n\n    // Text where the wave does overlap.\n    var text2 = fillCircleGroup.append(\"text\")\n        .text(textRounder(textStartValue) + percentText)\n        .attr(\"class\", \"liquidFillGaugeText\")\n        .attr(\"text-anchor\", \"middle\")\n        .attr(\"font-size\", textPixels + \"px\")\n        .style(\"fill\", config.waveTextColor)\n        .attr('transform','translate('+radius+','+textRiseScaleY(config.textVertPosition)+')');\n\n    // Make the value count up.\n    if(config.valueCountUp){\n        var textTween = function(){\n            var i = d3.interpolate(this.textContent, textFinalValue);\n            return function(t) { this.textContent = textRounder(i(t)) + percentText; };\n        };\n        text1.transition()\n            .duration(config.waveRiseTime)\n            .tween(\"text\", textTween);\n        text2.transition()\n            .duration(config.waveRiseTime)\n            .tween(\"text\", textTween);\n    }\n\n    // Make the wave rise. wave and waveGroup are separate so that horizontal and vertical movement can be controlled independently.\n    var waveGroupXPosition = fillCircleMargin+fillCircleRadius*2-waveClipWidth;\n    if(config.waveRise){\n        waveGroup.attr('transform','translate('+waveGroupXPosition+','+waveRiseScale(0)+')')\n            .transition()\n            .duration(config.waveRiseTime)\n            .attr('transform','translate('+waveGroupXPosition+','+waveRiseScale(fillPercent)+')')\n            .each(\"start\", function(){ wave.attr('transform','translate(1,0)'); }); // This transform is necessary to get the clip wave positioned correctly when waveRise=true and waveAnimate=false. The wave will not position correctly without this, but it's not clear why this is actually necessary.\n    } else {\n        waveGroup.attr('transform','translate('+waveGroupXPosition+','+waveRiseScale(fillPercent)+')');\n    }\n\n    if(config.waveAnimate) animateWave();\n\n    function animateWave() {\n        wave.attr('transform','translate('+waveAnimateScale(wave.attr('T'))+',0)');\n        wave.transition()\n            .duration(config.waveAnimateTime * (1-wave.attr('T')))\n            .ease('linear')\n            .attr('transform','translate('+waveAnimateScale(1)+',0)')\n            .attr('T', 1)\n            .each('end', function(){\n                wave.attr('T', 0);\n                animateWave(config.waveAnimateTime);\n            });\n    }\n\n    function GaugeUpdater(){\n        this.update = function(value){\n            var newFinalValue = parseFloat(value).toFixed(2);\n            var textRounderUpdater = function(value){ return Math.round(value); };\n            if(parseFloat(newFinalValue) != parseFloat(textRounderUpdater(newFinalValue))){\n                textRounderUpdater = function(value){ return parseFloat(value).toFixed(1); };\n            }\n            if(parseFloat(newFinalValue) != parseFloat(textRounderUpdater(newFinalValue))){\n                textRounderUpdater = function(value){ return parseFloat(value).toFixed(2); };\n            }\n\n            var textTween = function(){\n                var i = d3.interpolate(this.textContent, parseFloat(value).toFixed(2));\n                return function(t) { this.textContent = textRounderUpdater(i(t)) + percentText; };\n            };\n\n            text1.transition()\n                .duration(config.waveRiseTime)\n                .tween(\"text\", textTween);\n            text2.transition()\n                .duration(config.waveRiseTime)\n                .tween(\"text\", textTween);\n\n            var fillPercent = Math.max(config.minValue, Math.min(config.maxValue, value))/config.maxValue;\n            var waveHeight = fillCircleRadius*waveHeightScale(fillPercent*100);\n            var waveRiseScale = d3.scale.linear()\n                // The clipping area size is the height of the fill circle + the wave height, so we position the clip wave\n                // such that the it will overlap the fill circle at all when at 0%, and will totally cover the fill\n                // circle at 100%.\n                .range([(fillCircleMargin+fillCircleRadius*2+waveHeight),(fillCircleMargin-waveHeight)])\n                .domain([0,1]);\n            var newHeight = waveRiseScale(fillPercent);\n            var waveScaleX = d3.scale.linear().range([0,waveClipWidth]).domain([0,1]);\n            var waveScaleY = d3.scale.linear().range([0,waveHeight]).domain([0,1]);\n            var newClipArea;\n            if(config.waveHeightScaling){\n                newClipArea = d3.svg.area()\n                    .x(function(d) { return waveScaleX(d.x); } )\n                    .y0(function(d) { return waveScaleY(Math.sin(Math.PI*2*config.waveOffset*-1 + Math.PI*2*(1-config.waveCount) + d.y*2*Math.PI));} )\n                    .y1(function(d) { return (fillCircleRadius*2 + waveHeight); } );\n            } else {\n                newClipArea = clipArea;\n            }\n\n            var newWavePosition = config.waveAnimate?waveAnimateScale(1):0;\n            wave.transition()\n                .duration(0)\n                .transition()\n                .duration(config.waveAnimate?(config.waveAnimateTime * (1-wave.attr('T'))):(config.waveRiseTime))\n                .ease('linear')\n                .attr('d', newClipArea)\n                .attr('transform','translate('+newWavePosition+',0)')\n                .attr('T','1')\n                .each(\"end\", function(){\n                    if(config.waveAnimate){\n                        wave.attr('transform','translate('+waveAnimateScale(0)+',0)');\n                        animateWave(config.waveAnimateTime);\n                    }\n                });\n            waveGroup.transition()\n                .duration(config.waveRiseTime)\n                .attr('transform','translate('+waveGroupXPosition+','+newHeight+')');\n        };\n    }\n\n    return new GaugeUpdater();\n}\n","/*\n * This combined file was created by the DataTables downloader builder:\n *   https://datatables.net/download\n *\n * To rebuild or modify this file with the latest versions of the included\n * software please visit:\n *   https://datatables.net/download/#dt/dt-1.10.12/r-2.1.0\n *\n * Included libraries:\n *   DataTables 1.10.12, Responsive 2.1.0\n */\n\n/*!\n DataTables 1.10.12\n ©2008-2015 SpryMedia Ltd - datatables.net/license\n*/\n(function(h){\"function\"===typeof define&&define.amd?define([\"jquery\"],function(D){return h(D,window,document)}):\"object\"===typeof exports?module.exports=function(D,I){D||(D=window);I||(I=\"undefined\"!==typeof window?require(\"jquery\"):require(\"jquery\")(D));return h(I,D,D.document)}:h(jQuery,window,document)})(function(h,D,I,k){function X(a){var b,c,d={};h.each(a,function(e){if((b=e.match(/^([^A-Z]+?)([A-Z])/))&&-1!==\"a aa ai ao as b fn i m o s \".indexOf(b[1]+\" \"))c=e.replace(b[0],b[2].toLowerCase()),\nd[c]=e,\"o\"===b[1]&&X(a[e])});a._hungarianMap=d}function K(a,b,c){a._hungarianMap||X(a);var d;h.each(b,function(e){d=a._hungarianMap[e];if(d!==k&&(c||b[d]===k))\"o\"===d.charAt(0)?(b[d]||(b[d]={}),h.extend(!0,b[d],b[e]),K(a[d],b[d],c)):b[d]=b[e]})}function Da(a){var b=m.defaults.oLanguage,c=a.sZeroRecords;!a.sEmptyTable&&(c&&\"No data available in table\"===b.sEmptyTable)&&E(a,a,\"sZeroRecords\",\"sEmptyTable\");!a.sLoadingRecords&&(c&&\"Loading...\"===b.sLoadingRecords)&&E(a,a,\"sZeroRecords\",\"sLoadingRecords\");\na.sInfoThousands&&(a.sThousands=a.sInfoThousands);(a=a.sDecimal)&&db(a)}function eb(a){A(a,\"ordering\",\"bSort\");A(a,\"orderMulti\",\"bSortMulti\");A(a,\"orderClasses\",\"bSortClasses\");A(a,\"orderCellsTop\",\"bSortCellsTop\");A(a,\"order\",\"aaSorting\");A(a,\"orderFixed\",\"aaSortingFixed\");A(a,\"paging\",\"bPaginate\");A(a,\"pagingType\",\"sPaginationType\");A(a,\"pageLength\",\"iDisplayLength\");A(a,\"searching\",\"bFilter\");\"boolean\"===typeof a.sScrollX&&(a.sScrollX=a.sScrollX?\"100%\":\"\");\"boolean\"===typeof a.scrollX&&(a.scrollX=\na.scrollX?\"100%\":\"\");if(a=a.aoSearchCols)for(var b=0,c=a.length;b<c;b++)a[b]&&K(m.models.oSearch,a[b])}function fb(a){A(a,\"orderable\",\"bSortable\");A(a,\"orderData\",\"aDataSort\");A(a,\"orderSequence\",\"asSorting\");A(a,\"orderDataType\",\"sortDataType\");var b=a.aDataSort;b&&!h.isArray(b)&&(a.aDataSort=[b])}function gb(a){if(!m.__browser){var b={};m.__browser=b;var c=h(\"<div/>\").css({position:\"fixed\",top:0,left:0,height:1,width:1,overflow:\"hidden\"}).append(h(\"<div/>\").css({position:\"absolute\",top:1,left:1,\nwidth:100,overflow:\"scroll\"}).append(h(\"<div/>\").css({width:\"100%\",height:10}))).appendTo(\"body\"),d=c.children(),e=d.children();b.barWidth=d[0].offsetWidth-d[0].clientWidth;b.bScrollOversize=100===e[0].offsetWidth&&100!==d[0].clientWidth;b.bScrollbarLeft=1!==Math.round(e.offset().left);b.bBounding=c[0].getBoundingClientRect().width?!0:!1;c.remove()}h.extend(a.oBrowser,m.__browser);a.oScroll.iBarWidth=m.__browser.barWidth}function hb(a,b,c,d,e,f){var g,j=!1;c!==k&&(g=c,j=!0);for(;d!==e;)a.hasOwnProperty(d)&&\n(g=j?b(g,a[d],d,a):a[d],j=!0,d+=f);return g}function Ea(a,b){var c=m.defaults.column,d=a.aoColumns.length,c=h.extend({},m.models.oColumn,c,{nTh:b?b:I.createElement(\"th\"),sTitle:c.sTitle?c.sTitle:b?b.innerHTML:\"\",aDataSort:c.aDataSort?c.aDataSort:[d],mData:c.mData?c.mData:d,idx:d});a.aoColumns.push(c);c=a.aoPreSearchCols;c[d]=h.extend({},m.models.oSearch,c[d]);ja(a,d,h(b).data())}function ja(a,b,c){var b=a.aoColumns[b],d=a.oClasses,e=h(b.nTh);if(!b.sWidthOrig){b.sWidthOrig=e.attr(\"width\")||null;var f=\n(e.attr(\"style\")||\"\").match(/width:\\s*(\\d+[pxem%]+)/);f&&(b.sWidthOrig=f[1])}c!==k&&null!==c&&(fb(c),K(m.defaults.column,c),c.mDataProp!==k&&!c.mData&&(c.mData=c.mDataProp),c.sType&&(b._sManualType=c.sType),c.className&&!c.sClass&&(c.sClass=c.className),h.extend(b,c),E(b,c,\"sWidth\",\"sWidthOrig\"),c.iDataSort!==k&&(b.aDataSort=[c.iDataSort]),E(b,c,\"aDataSort\"));var g=b.mData,j=Q(g),i=b.mRender?Q(b.mRender):null,c=function(a){return\"string\"===typeof a&&-1!==a.indexOf(\"@\")};b._bAttrSrc=h.isPlainObject(g)&&\n(c(g.sort)||c(g.type)||c(g.filter));b._setter=null;b.fnGetData=function(a,b,c){var d=j(a,b,k,c);return i&&b?i(d,b,a,c):d};b.fnSetData=function(a,b,c){return R(g)(a,b,c)};\"number\"!==typeof g&&(a._rowReadObject=!0);a.oFeatures.bSort||(b.bSortable=!1,e.addClass(d.sSortableNone));a=-1!==h.inArray(\"asc\",b.asSorting);c=-1!==h.inArray(\"desc\",b.asSorting);!b.bSortable||!a&&!c?(b.sSortingClass=d.sSortableNone,b.sSortingClassJUI=\"\"):a&&!c?(b.sSortingClass=d.sSortableAsc,b.sSortingClassJUI=d.sSortJUIAscAllowed):\n!a&&c?(b.sSortingClass=d.sSortableDesc,b.sSortingClassJUI=d.sSortJUIDescAllowed):(b.sSortingClass=d.sSortable,b.sSortingClassJUI=d.sSortJUI)}function Y(a){if(!1!==a.oFeatures.bAutoWidth){var b=a.aoColumns;Fa(a);for(var c=0,d=b.length;c<d;c++)b[c].nTh.style.width=b[c].sWidth}b=a.oScroll;(\"\"!==b.sY||\"\"!==b.sX)&&ka(a);u(a,null,\"column-sizing\",[a])}function Z(a,b){var c=la(a,\"bVisible\");return\"number\"===typeof c[b]?c[b]:null}function $(a,b){var c=la(a,\"bVisible\"),c=h.inArray(b,c);return-1!==c?c:null}\nfunction aa(a){var b=0;h.each(a.aoColumns,function(a,d){d.bVisible&&\"none\"!==h(d.nTh).css(\"display\")&&b++});return b}function la(a,b){var c=[];h.map(a.aoColumns,function(a,e){a[b]&&c.push(e)});return c}function Ga(a){var b=a.aoColumns,c=a.aoData,d=m.ext.type.detect,e,f,g,j,i,h,l,q,t;e=0;for(f=b.length;e<f;e++)if(l=b[e],t=[],!l.sType&&l._sManualType)l.sType=l._sManualType;else if(!l.sType){g=0;for(j=d.length;g<j;g++){i=0;for(h=c.length;i<h;i++){t[i]===k&&(t[i]=B(a,i,e,\"type\"));q=d[g](t[i],a);if(!q&&\ng!==d.length-1)break;if(\"html\"===q)break}if(q){l.sType=q;break}}l.sType||(l.sType=\"string\")}}function ib(a,b,c,d){var e,f,g,j,i,n,l=a.aoColumns;if(b)for(e=b.length-1;0<=e;e--){n=b[e];var q=n.targets!==k?n.targets:n.aTargets;h.isArray(q)||(q=[q]);f=0;for(g=q.length;f<g;f++)if(\"number\"===typeof q[f]&&0<=q[f]){for(;l.length<=q[f];)Ea(a);d(q[f],n)}else if(\"number\"===typeof q[f]&&0>q[f])d(l.length+q[f],n);else if(\"string\"===typeof q[f]){j=0;for(i=l.length;j<i;j++)(\"_all\"==q[f]||h(l[j].nTh).hasClass(q[f]))&&\nd(j,n)}}if(c){e=0;for(a=c.length;e<a;e++)d(e,c[e])}}function N(a,b,c,d){var e=a.aoData.length,f=h.extend(!0,{},m.models.oRow,{src:c?\"dom\":\"data\",idx:e});f._aData=b;a.aoData.push(f);for(var g=a.aoColumns,j=0,i=g.length;j<i;j++)g[j].sType=null;a.aiDisplayMaster.push(e);b=a.rowIdFn(b);b!==k&&(a.aIds[b]=f);(c||!a.oFeatures.bDeferRender)&&Ha(a,e,c,d);return e}function ma(a,b){var c;b instanceof h||(b=h(b));return b.map(function(b,e){c=Ia(a,e);return N(a,c.data,e,c.cells)})}function B(a,b,c,d){var e=a.iDraw,\nf=a.aoColumns[c],g=a.aoData[b]._aData,j=f.sDefaultContent,i=f.fnGetData(g,d,{settings:a,row:b,col:c});if(i===k)return a.iDrawError!=e&&null===j&&(L(a,0,\"Requested unknown parameter \"+(\"function\"==typeof f.mData?\"{function}\":\"'\"+f.mData+\"'\")+\" for row \"+b+\", column \"+c,4),a.iDrawError=e),j;if((i===g||null===i)&&null!==j&&d!==k)i=j;else if(\"function\"===typeof i)return i.call(g);return null===i&&\"display\"==d?\"\":i}function jb(a,b,c,d){a.aoColumns[c].fnSetData(a.aoData[b]._aData,d,{settings:a,row:b,col:c})}\nfunction Ja(a){return h.map(a.match(/(\\\\.|[^\\.])+/g)||[\"\"],function(a){return a.replace(/\\\\./g,\".\")})}function Q(a){if(h.isPlainObject(a)){var b={};h.each(a,function(a,c){c&&(b[a]=Q(c))});return function(a,c,f,g){var j=b[c]||b._;return j!==k?j(a,c,f,g):a}}if(null===a)return function(a){return a};if(\"function\"===typeof a)return function(b,c,f,g){return a(b,c,f,g)};if(\"string\"===typeof a&&(-1!==a.indexOf(\".\")||-1!==a.indexOf(\"[\")||-1!==a.indexOf(\"(\"))){var c=function(a,b,f){var g,j;if(\"\"!==f){j=Ja(f);\nfor(var i=0,n=j.length;i<n;i++){f=j[i].match(ba);g=j[i].match(U);if(f){j[i]=j[i].replace(ba,\"\");\"\"!==j[i]&&(a=a[j[i]]);g=[];j.splice(0,i+1);j=j.join(\".\");if(h.isArray(a)){i=0;for(n=a.length;i<n;i++)g.push(c(a[i],b,j))}a=f[0].substring(1,f[0].length-1);a=\"\"===a?g:g.join(a);break}else if(g){j[i]=j[i].replace(U,\"\");a=a[j[i]]();continue}if(null===a||a[j[i]]===k)return k;a=a[j[i]]}}return a};return function(b,e){return c(b,e,a)}}return function(b){return b[a]}}function R(a){if(h.isPlainObject(a))return R(a._);\nif(null===a)return function(){};if(\"function\"===typeof a)return function(b,d,e){a(b,\"set\",d,e)};if(\"string\"===typeof a&&(-1!==a.indexOf(\".\")||-1!==a.indexOf(\"[\")||-1!==a.indexOf(\"(\"))){var b=function(a,d,e){var e=Ja(e),f;f=e[e.length-1];for(var g,j,i=0,n=e.length-1;i<n;i++){g=e[i].match(ba);j=e[i].match(U);if(g){e[i]=e[i].replace(ba,\"\");a[e[i]]=[];f=e.slice();f.splice(0,i+1);g=f.join(\".\");if(h.isArray(d)){j=0;for(n=d.length;j<n;j++)f={},b(f,d[j],g),a[e[i]].push(f)}else a[e[i]]=d;return}j&&(e[i]=e[i].replace(U,\n\"\"),a=a[e[i]](d));if(null===a[e[i]]||a[e[i]]===k)a[e[i]]={};a=a[e[i]]}if(f.match(U))a[f.replace(U,\"\")](d);else a[f.replace(ba,\"\")]=d};return function(c,d){return b(c,d,a)}}return function(b,d){b[a]=d}}function Ka(a){return G(a.aoData,\"_aData\")}function na(a){a.aoData.length=0;a.aiDisplayMaster.length=0;a.aiDisplay.length=0;a.aIds={}}function oa(a,b,c){for(var d=-1,e=0,f=a.length;e<f;e++)a[e]==b?d=e:a[e]>b&&a[e]--; -1!=d&&c===k&&a.splice(d,1)}function ca(a,b,c,d){var e=a.aoData[b],f,g=function(c,d){for(;c.childNodes.length;)c.removeChild(c.firstChild);\nc.innerHTML=B(a,b,d,\"display\")};if(\"dom\"===c||(!c||\"auto\"===c)&&\"dom\"===e.src)e._aData=Ia(a,e,d,d===k?k:e._aData).data;else{var j=e.anCells;if(j)if(d!==k)g(j[d],d);else{c=0;for(f=j.length;c<f;c++)g(j[c],c)}}e._aSortData=null;e._aFilterData=null;g=a.aoColumns;if(d!==k)g[d].sType=null;else{c=0;for(f=g.length;c<f;c++)g[c].sType=null;La(a,e)}}function Ia(a,b,c,d){var e=[],f=b.firstChild,g,j,i=0,n,l=a.aoColumns,q=a._rowReadObject,d=d!==k?d:q?{}:[],t=function(a,b){if(\"string\"===typeof a){var c=a.indexOf(\"@\");\n-1!==c&&(c=a.substring(c+1),R(a)(d,b.getAttribute(c)))}},S=function(a){if(c===k||c===i)j=l[i],n=h.trim(a.innerHTML),j&&j._bAttrSrc?(R(j.mData._)(d,n),t(j.mData.sort,a),t(j.mData.type,a),t(j.mData.filter,a)):q?(j._setter||(j._setter=R(j.mData)),j._setter(d,n)):d[i]=n;i++};if(f)for(;f;){g=f.nodeName.toUpperCase();if(\"TD\"==g||\"TH\"==g)S(f),e.push(f);f=f.nextSibling}else{e=b.anCells;f=0;for(g=e.length;f<g;f++)S(e[f])}if(b=b.firstChild?b:b.nTr)(b=b.getAttribute(\"id\"))&&R(a.rowId)(d,b);return{data:d,cells:e}}\nfunction Ha(a,b,c,d){var e=a.aoData[b],f=e._aData,g=[],j,i,n,l,q;if(null===e.nTr){j=c||I.createElement(\"tr\");e.nTr=j;e.anCells=g;j._DT_RowIndex=b;La(a,e);l=0;for(q=a.aoColumns.length;l<q;l++){n=a.aoColumns[l];i=c?d[l]:I.createElement(n.sCellType);i._DT_CellIndex={row:b,column:l};g.push(i);if((!c||n.mRender||n.mData!==l)&&(!h.isPlainObject(n.mData)||n.mData._!==l+\".display\"))i.innerHTML=B(a,b,l,\"display\");n.sClass&&(i.className+=\" \"+n.sClass);n.bVisible&&!c?j.appendChild(i):!n.bVisible&&c&&i.parentNode.removeChild(i);\nn.fnCreatedCell&&n.fnCreatedCell.call(a.oInstance,i,B(a,b,l),f,b,l)}u(a,\"aoRowCreatedCallback\",null,[j,f,b])}e.nTr.setAttribute(\"role\",\"row\")}function La(a,b){var c=b.nTr,d=b._aData;if(c){var e=a.rowIdFn(d);e&&(c.id=e);d.DT_RowClass&&(e=d.DT_RowClass.split(\" \"),b.__rowc=b.__rowc?pa(b.__rowc.concat(e)):e,h(c).removeClass(b.__rowc.join(\" \")).addClass(d.DT_RowClass));d.DT_RowAttr&&h(c).attr(d.DT_RowAttr);d.DT_RowData&&h(c).data(d.DT_RowData)}}function kb(a){var b,c,d,e,f,g=a.nTHead,j=a.nTFoot,i=0===\nh(\"th, td\",g).length,n=a.oClasses,l=a.aoColumns;i&&(e=h(\"<tr/>\").appendTo(g));b=0;for(c=l.length;b<c;b++)f=l[b],d=h(f.nTh).addClass(f.sClass),i&&d.appendTo(e),a.oFeatures.bSort&&(d.addClass(f.sSortingClass),!1!==f.bSortable&&(d.attr(\"tabindex\",a.iTabIndex).attr(\"aria-controls\",a.sTableId),Ma(a,f.nTh,b))),f.sTitle!=d[0].innerHTML&&d.html(f.sTitle),Na(a,\"header\")(a,d,f,n);i&&da(a.aoHeader,g);h(g).find(\">tr\").attr(\"role\",\"row\");h(g).find(\">tr>th, >tr>td\").addClass(n.sHeaderTH);h(j).find(\">tr>th, >tr>td\").addClass(n.sFooterTH);\nif(null!==j){a=a.aoFooter[0];b=0;for(c=a.length;b<c;b++)f=l[b],f.nTf=a[b].cell,f.sClass&&h(f.nTf).addClass(f.sClass)}}function ea(a,b,c){var d,e,f,g=[],j=[],i=a.aoColumns.length,n;if(b){c===k&&(c=!1);d=0;for(e=b.length;d<e;d++){g[d]=b[d].slice();g[d].nTr=b[d].nTr;for(f=i-1;0<=f;f--)!a.aoColumns[f].bVisible&&!c&&g[d].splice(f,1);j.push([])}d=0;for(e=g.length;d<e;d++){if(a=g[d].nTr)for(;f=a.firstChild;)a.removeChild(f);f=0;for(b=g[d].length;f<b;f++)if(n=i=1,j[d][f]===k){a.appendChild(g[d][f].cell);\nfor(j[d][f]=1;g[d+i]!==k&&g[d][f].cell==g[d+i][f].cell;)j[d+i][f]=1,i++;for(;g[d][f+n]!==k&&g[d][f].cell==g[d][f+n].cell;){for(c=0;c<i;c++)j[d+c][f+n]=1;n++}h(g[d][f].cell).attr(\"rowspan\",i).attr(\"colspan\",n)}}}}function O(a){var b=u(a,\"aoPreDrawCallback\",\"preDraw\",[a]);if(-1!==h.inArray(!1,b))C(a,!1);else{var b=[],c=0,d=a.asStripeClasses,e=d.length,f=a.oLanguage,g=a.iInitDisplayStart,j=\"ssp\"==y(a),i=a.aiDisplay;a.bDrawing=!0;g!==k&&-1!==g&&(a._iDisplayStart=j?g:g>=a.fnRecordsDisplay()?0:g,a.iInitDisplayStart=\n-1);var g=a._iDisplayStart,n=a.fnDisplayEnd();if(a.bDeferLoading)a.bDeferLoading=!1,a.iDraw++,C(a,!1);else if(j){if(!a.bDestroying&&!lb(a))return}else a.iDraw++;if(0!==i.length){f=j?a.aoData.length:n;for(j=j?0:g;j<f;j++){var l=i[j],q=a.aoData[l];null===q.nTr&&Ha(a,l);l=q.nTr;if(0!==e){var t=d[c%e];q._sRowStripe!=t&&(h(l).removeClass(q._sRowStripe).addClass(t),q._sRowStripe=t)}u(a,\"aoRowCallback\",null,[l,q._aData,c,j]);b.push(l);c++}}else c=f.sZeroRecords,1==a.iDraw&&\"ajax\"==y(a)?c=f.sLoadingRecords:\nf.sEmptyTable&&0===a.fnRecordsTotal()&&(c=f.sEmptyTable),b[0]=h(\"<tr/>\",{\"class\":e?d[0]:\"\"}).append(h(\"<td />\",{valign:\"top\",colSpan:aa(a),\"class\":a.oClasses.sRowEmpty}).html(c))[0];u(a,\"aoHeaderCallback\",\"header\",[h(a.nTHead).children(\"tr\")[0],Ka(a),g,n,i]);u(a,\"aoFooterCallback\",\"footer\",[h(a.nTFoot).children(\"tr\")[0],Ka(a),g,n,i]);d=h(a.nTBody);d.children().detach();d.append(h(b));u(a,\"aoDrawCallback\",\"draw\",[a]);a.bSorted=!1;a.bFiltered=!1;a.bDrawing=!1}}function T(a,b){var c=a.oFeatures,d=c.bFilter;\nc.bSort&&mb(a);d?fa(a,a.oPreviousSearch):a.aiDisplay=a.aiDisplayMaster.slice();!0!==b&&(a._iDisplayStart=0);a._drawHold=b;O(a);a._drawHold=!1}function nb(a){var b=a.oClasses,c=h(a.nTable),c=h(\"<div/>\").insertBefore(c),d=a.oFeatures,e=h(\"<div/>\",{id:a.sTableId+\"_wrapper\",\"class\":b.sWrapper+(a.nTFoot?\"\":\" \"+b.sNoFooter)});a.nHolding=c[0];a.nTableWrapper=e[0];a.nTableReinsertBefore=a.nTable.nextSibling;for(var f=a.sDom.split(\"\"),g,j,i,n,l,q,t=0;t<f.length;t++){g=null;j=f[t];if(\"<\"==j){i=h(\"<div/>\")[0];\nn=f[t+1];if(\"'\"==n||'\"'==n){l=\"\";for(q=2;f[t+q]!=n;)l+=f[t+q],q++;\"H\"==l?l=b.sJUIHeader:\"F\"==l&&(l=b.sJUIFooter);-1!=l.indexOf(\".\")?(n=l.split(\".\"),i.id=n[0].substr(1,n[0].length-1),i.className=n[1]):\"#\"==l.charAt(0)?i.id=l.substr(1,l.length-1):i.className=l;t+=q}e.append(i);e=h(i)}else if(\">\"==j)e=e.parent();else if(\"l\"==j&&d.bPaginate&&d.bLengthChange)g=ob(a);else if(\"f\"==j&&d.bFilter)g=pb(a);else if(\"r\"==j&&d.bProcessing)g=qb(a);else if(\"t\"==j)g=rb(a);else if(\"i\"==j&&d.bInfo)g=sb(a);else if(\"p\"==\nj&&d.bPaginate)g=tb(a);else if(0!==m.ext.feature.length){i=m.ext.feature;q=0;for(n=i.length;q<n;q++)if(j==i[q].cFeature){g=i[q].fnInit(a);break}}g&&(i=a.aanFeatures,i[j]||(i[j]=[]),i[j].push(g),e.append(g))}c.replaceWith(e);a.nHolding=null}function da(a,b){var c=h(b).children(\"tr\"),d,e,f,g,j,i,n,l,q,t;a.splice(0,a.length);f=0;for(i=c.length;f<i;f++)a.push([]);f=0;for(i=c.length;f<i;f++){d=c[f];for(e=d.firstChild;e;){if(\"TD\"==e.nodeName.toUpperCase()||\"TH\"==e.nodeName.toUpperCase()){l=1*e.getAttribute(\"colspan\");\nq=1*e.getAttribute(\"rowspan\");l=!l||0===l||1===l?1:l;q=!q||0===q||1===q?1:q;g=0;for(j=a[f];j[g];)g++;n=g;t=1===l?!0:!1;for(j=0;j<l;j++)for(g=0;g<q;g++)a[f+g][n+j]={cell:e,unique:t},a[f+g].nTr=d}e=e.nextSibling}}}function qa(a,b,c){var d=[];c||(c=a.aoHeader,b&&(c=[],da(c,b)));for(var b=0,e=c.length;b<e;b++)for(var f=0,g=c[b].length;f<g;f++)if(c[b][f].unique&&(!d[f]||!a.bSortCellsTop))d[f]=c[b][f].cell;return d}function ra(a,b,c){u(a,\"aoServerParams\",\"serverParams\",[b]);if(b&&h.isArray(b)){var d={},\ne=/(.*?)\\[\\]$/;h.each(b,function(a,b){var c=b.name.match(e);c?(c=c[0],d[c]||(d[c]=[]),d[c].push(b.value)):d[b.name]=b.value});b=d}var f,g=a.ajax,j=a.oInstance,i=function(b){u(a,null,\"xhr\",[a,b,a.jqXHR]);c(b)};if(h.isPlainObject(g)&&g.data){f=g.data;var n=h.isFunction(f)?f(b,a):f,b=h.isFunction(f)&&n?n:h.extend(!0,b,n);delete g.data}n={data:b,success:function(b){var c=b.error||b.sError;c&&L(a,0,c);a.json=b;i(b)},dataType:\"json\",cache:!1,type:a.sServerMethod,error:function(b,c){var d=u(a,null,\"xhr\",\n[a,null,a.jqXHR]);-1===h.inArray(!0,d)&&(\"parsererror\"==c?L(a,0,\"Invalid JSON response\",1):4===b.readyState&&L(a,0,\"Ajax error\",7));C(a,!1)}};a.oAjaxData=b;u(a,null,\"preXhr\",[a,b]);a.fnServerData?a.fnServerData.call(j,a.sAjaxSource,h.map(b,function(a,b){return{name:b,value:a}}),i,a):a.sAjaxSource||\"string\"===typeof g?a.jqXHR=h.ajax(h.extend(n,{url:g||a.sAjaxSource})):h.isFunction(g)?a.jqXHR=g.call(j,b,i,a):(a.jqXHR=h.ajax(h.extend(n,g)),g.data=f)}function lb(a){return a.bAjaxDataGet?(a.iDraw++,C(a,\n!0),ra(a,ub(a),function(b){vb(a,b)}),!1):!0}function ub(a){var b=a.aoColumns,c=b.length,d=a.oFeatures,e=a.oPreviousSearch,f=a.aoPreSearchCols,g,j=[],i,n,l,q=V(a);g=a._iDisplayStart;i=!1!==d.bPaginate?a._iDisplayLength:-1;var k=function(a,b){j.push({name:a,value:b})};k(\"sEcho\",a.iDraw);k(\"iColumns\",c);k(\"sColumns\",G(b,\"sName\").join(\",\"));k(\"iDisplayStart\",g);k(\"iDisplayLength\",i);var S={draw:a.iDraw,columns:[],order:[],start:g,length:i,search:{value:e.sSearch,regex:e.bRegex}};for(g=0;g<c;g++)n=b[g],\nl=f[g],i=\"function\"==typeof n.mData?\"function\":n.mData,S.columns.push({data:i,name:n.sName,searchable:n.bSearchable,orderable:n.bSortable,search:{value:l.sSearch,regex:l.bRegex}}),k(\"mDataProp_\"+g,i),d.bFilter&&(k(\"sSearch_\"+g,l.sSearch),k(\"bRegex_\"+g,l.bRegex),k(\"bSearchable_\"+g,n.bSearchable)),d.bSort&&k(\"bSortable_\"+g,n.bSortable);d.bFilter&&(k(\"sSearch\",e.sSearch),k(\"bRegex\",e.bRegex));d.bSort&&(h.each(q,function(a,b){S.order.push({column:b.col,dir:b.dir});k(\"iSortCol_\"+a,b.col);k(\"sSortDir_\"+\na,b.dir)}),k(\"iSortingCols\",q.length));b=m.ext.legacy.ajax;return null===b?a.sAjaxSource?j:S:b?j:S}function vb(a,b){var c=sa(a,b),d=b.sEcho!==k?b.sEcho:b.draw,e=b.iTotalRecords!==k?b.iTotalRecords:b.recordsTotal,f=b.iTotalDisplayRecords!==k?b.iTotalDisplayRecords:b.recordsFiltered;if(d){if(1*d<a.iDraw)return;a.iDraw=1*d}na(a);a._iRecordsTotal=parseInt(e,10);a._iRecordsDisplay=parseInt(f,10);d=0;for(e=c.length;d<e;d++)N(a,c[d]);a.aiDisplay=a.aiDisplayMaster.slice();a.bAjaxDataGet=!1;O(a);a._bInitComplete||\nta(a,b);a.bAjaxDataGet=!0;C(a,!1)}function sa(a,b){var c=h.isPlainObject(a.ajax)&&a.ajax.dataSrc!==k?a.ajax.dataSrc:a.sAjaxDataProp;return\"data\"===c?b.aaData||b[c]:\"\"!==c?Q(c)(b):b}function pb(a){var b=a.oClasses,c=a.sTableId,d=a.oLanguage,e=a.oPreviousSearch,f=a.aanFeatures,g='<input type=\"search\" class=\"'+b.sFilterInput+'\"/>',j=d.sSearch,j=j.match(/_INPUT_/)?j.replace(\"_INPUT_\",g):j+g,b=h(\"<div/>\",{id:!f.f?c+\"_filter\":null,\"class\":b.sFilter}).append(h(\"<label/>\").append(j)),f=function(){var b=!this.value?\n\"\":this.value;b!=e.sSearch&&(fa(a,{sSearch:b,bRegex:e.bRegex,bSmart:e.bSmart,bCaseInsensitive:e.bCaseInsensitive}),a._iDisplayStart=0,O(a))},g=null!==a.searchDelay?a.searchDelay:\"ssp\"===y(a)?400:0,i=h(\"input\",b).val(e.sSearch).attr(\"placeholder\",d.sSearchPlaceholder).bind(\"keyup.DT search.DT input.DT paste.DT cut.DT\",g?Oa(f,g):f).bind(\"keypress.DT\",function(a){if(13==a.keyCode)return!1}).attr(\"aria-controls\",c);h(a.nTable).on(\"search.dt.DT\",function(b,c){if(a===c)try{i[0]!==I.activeElement&&i.val(e.sSearch)}catch(d){}});\nreturn b[0]}function fa(a,b,c){var d=a.oPreviousSearch,e=a.aoPreSearchCols,f=function(a){d.sSearch=a.sSearch;d.bRegex=a.bRegex;d.bSmart=a.bSmart;d.bCaseInsensitive=a.bCaseInsensitive};Ga(a);if(\"ssp\"!=y(a)){wb(a,b.sSearch,c,b.bEscapeRegex!==k?!b.bEscapeRegex:b.bRegex,b.bSmart,b.bCaseInsensitive);f(b);for(b=0;b<e.length;b++)xb(a,e[b].sSearch,b,e[b].bEscapeRegex!==k?!e[b].bEscapeRegex:e[b].bRegex,e[b].bSmart,e[b].bCaseInsensitive);yb(a)}else f(b);a.bFiltered=!0;u(a,null,\"search\",[a])}function yb(a){for(var b=\nm.ext.search,c=a.aiDisplay,d,e,f=0,g=b.length;f<g;f++){for(var j=[],i=0,n=c.length;i<n;i++)e=c[i],d=a.aoData[e],b[f](a,d._aFilterData,e,d._aData,i)&&j.push(e);c.length=0;h.merge(c,j)}}function xb(a,b,c,d,e,f){if(\"\"!==b)for(var g=a.aiDisplay,d=Pa(b,d,e,f),e=g.length-1;0<=e;e--)b=a.aoData[g[e]]._aFilterData[c],d.test(b)||g.splice(e,1)}function wb(a,b,c,d,e,f){var d=Pa(b,d,e,f),e=a.oPreviousSearch.sSearch,f=a.aiDisplayMaster,g;0!==m.ext.search.length&&(c=!0);g=zb(a);if(0>=b.length)a.aiDisplay=f.slice();\nelse{if(g||c||e.length>b.length||0!==b.indexOf(e)||a.bSorted)a.aiDisplay=f.slice();b=a.aiDisplay;for(c=b.length-1;0<=c;c--)d.test(a.aoData[b[c]]._sFilterRow)||b.splice(c,1)}}function Pa(a,b,c,d){a=b?a:Qa(a);c&&(a=\"^(?=.*?\"+h.map(a.match(/\"[^\"]+\"|[^ ]+/g)||[\"\"],function(a){if('\"'===a.charAt(0))var b=a.match(/^\"(.*)\"$/),a=b?b[1]:a;return a.replace('\"',\"\")}).join(\")(?=.*?\")+\").*$\");return RegExp(a,d?\"i\":\"\")}function zb(a){var b=a.aoColumns,c,d,e,f,g,j,i,h,l=m.ext.type.search;c=!1;d=0;for(f=a.aoData.length;d<\nf;d++)if(h=a.aoData[d],!h._aFilterData){j=[];e=0;for(g=b.length;e<g;e++)c=b[e],c.bSearchable?(i=B(a,d,e,\"filter\"),l[c.sType]&&(i=l[c.sType](i)),null===i&&(i=\"\"),\"string\"!==typeof i&&i.toString&&(i=i.toString())):i=\"\",i.indexOf&&-1!==i.indexOf(\"&\")&&(ua.innerHTML=i,i=Zb?ua.textContent:ua.innerText),i.replace&&(i=i.replace(/[\\r\\n]/g,\"\")),j.push(i);h._aFilterData=j;h._sFilterRow=j.join(\"  \");c=!0}return c}function Ab(a){return{search:a.sSearch,smart:a.bSmart,regex:a.bRegex,caseInsensitive:a.bCaseInsensitive}}\nfunction Bb(a){return{sSearch:a.search,bSmart:a.smart,bRegex:a.regex,bCaseInsensitive:a.caseInsensitive}}function sb(a){var b=a.sTableId,c=a.aanFeatures.i,d=h(\"<div/>\",{\"class\":a.oClasses.sInfo,id:!c?b+\"_info\":null});c||(a.aoDrawCallback.push({fn:Cb,sName:\"information\"}),d.attr(\"role\",\"status\").attr(\"aria-live\",\"polite\"),h(a.nTable).attr(\"aria-describedby\",b+\"_info\"));return d[0]}function Cb(a){var b=a.aanFeatures.i;if(0!==b.length){var c=a.oLanguage,d=a._iDisplayStart+1,e=a.fnDisplayEnd(),f=a.fnRecordsTotal(),\ng=a.fnRecordsDisplay(),j=g?c.sInfo:c.sInfoEmpty;g!==f&&(j+=\" \"+c.sInfoFiltered);j+=c.sInfoPostFix;j=Db(a,j);c=c.fnInfoCallback;null!==c&&(j=c.call(a.oInstance,a,d,e,f,g,j));h(b).html(j)}}function Db(a,b){var c=a.fnFormatNumber,d=a._iDisplayStart+1,e=a._iDisplayLength,f=a.fnRecordsDisplay(),g=-1===e;return b.replace(/_START_/g,c.call(a,d)).replace(/_END_/g,c.call(a,a.fnDisplayEnd())).replace(/_MAX_/g,c.call(a,a.fnRecordsTotal())).replace(/_TOTAL_/g,c.call(a,f)).replace(/_PAGE_/g,c.call(a,g?1:Math.ceil(d/\ne))).replace(/_PAGES_/g,c.call(a,g?1:Math.ceil(f/e)))}function ga(a){var b,c,d=a.iInitDisplayStart,e=a.aoColumns,f;c=a.oFeatures;var g=a.bDeferLoading;if(a.bInitialised){nb(a);kb(a);ea(a,a.aoHeader);ea(a,a.aoFooter);C(a,!0);c.bAutoWidth&&Fa(a);b=0;for(c=e.length;b<c;b++)f=e[b],f.sWidth&&(f.nTh.style.width=x(f.sWidth));u(a,null,\"preInit\",[a]);T(a);e=y(a);if(\"ssp\"!=e||g)\"ajax\"==e?ra(a,[],function(c){var f=sa(a,c);for(b=0;b<f.length;b++)N(a,f[b]);a.iInitDisplayStart=d;T(a);C(a,!1);ta(a,c)},a):(C(a,!1),\nta(a))}else setTimeout(function(){ga(a)},200)}function ta(a,b){a._bInitComplete=!0;(b||a.oInit.aaData)&&Y(a);u(a,null,\"plugin-init\",[a,b]);u(a,\"aoInitComplete\",\"init\",[a,b])}function Ra(a,b){var c=parseInt(b,10);a._iDisplayLength=c;Sa(a);u(a,null,\"length\",[a,c])}function ob(a){for(var b=a.oClasses,c=a.sTableId,d=a.aLengthMenu,e=h.isArray(d[0]),f=e?d[0]:d,d=e?d[1]:d,e=h(\"<select/>\",{name:c+\"_length\",\"aria-controls\":c,\"class\":b.sLengthSelect}),g=0,j=f.length;g<j;g++)e[0][g]=new Option(d[g],f[g]);var i=\nh(\"<div><label/></div>\").addClass(b.sLength);a.aanFeatures.l||(i[0].id=c+\"_length\");i.children().append(a.oLanguage.sLengthMenu.replace(\"_MENU_\",e[0].outerHTML));h(\"select\",i).val(a._iDisplayLength).bind(\"change.DT\",function(){Ra(a,h(this).val());O(a)});h(a.nTable).bind(\"length.dt.DT\",function(b,c,d){a===c&&h(\"select\",i).val(d)});return i[0]}function tb(a){var b=a.sPaginationType,c=m.ext.pager[b],d=\"function\"===typeof c,e=function(a){O(a)},b=h(\"<div/>\").addClass(a.oClasses.sPaging+b)[0],f=a.aanFeatures;\nd||c.fnInit(a,b,e);f.p||(b.id=a.sTableId+\"_paginate\",a.aoDrawCallback.push({fn:function(a){if(d){var b=a._iDisplayStart,i=a._iDisplayLength,h=a.fnRecordsDisplay(),l=-1===i,b=l?0:Math.ceil(b/i),i=l?1:Math.ceil(h/i),h=c(b,i),k,l=0;for(k=f.p.length;l<k;l++)Na(a,\"pageButton\")(a,f.p[l],l,h,b,i)}else c.fnUpdate(a,e)},sName:\"pagination\"}));return b}function Ta(a,b,c){var d=a._iDisplayStart,e=a._iDisplayLength,f=a.fnRecordsDisplay();0===f||-1===e?d=0:\"number\"===typeof b?(d=b*e,d>f&&(d=0)):\"first\"==b?d=0:\n\"previous\"==b?(d=0<=e?d-e:0,0>d&&(d=0)):\"next\"==b?d+e<f&&(d+=e):\"last\"==b?d=Math.floor((f-1)/e)*e:L(a,0,\"Unknown paging action: \"+b,5);b=a._iDisplayStart!==d;a._iDisplayStart=d;b&&(u(a,null,\"page\",[a]),c&&O(a));return b}function qb(a){return h(\"<div/>\",{id:!a.aanFeatures.r?a.sTableId+\"_processing\":null,\"class\":a.oClasses.sProcessing}).html(a.oLanguage.sProcessing).insertBefore(a.nTable)[0]}function C(a,b){a.oFeatures.bProcessing&&h(a.aanFeatures.r).css(\"display\",b?\"block\":\"none\");u(a,null,\"processing\",\n[a,b])}function rb(a){var b=h(a.nTable);b.attr(\"role\",\"grid\");var c=a.oScroll;if(\"\"===c.sX&&\"\"===c.sY)return a.nTable;var d=c.sX,e=c.sY,f=a.oClasses,g=b.children(\"caption\"),j=g.length?g[0]._captionSide:null,i=h(b[0].cloneNode(!1)),n=h(b[0].cloneNode(!1)),l=b.children(\"tfoot\");l.length||(l=null);i=h(\"<div/>\",{\"class\":f.sScrollWrapper}).append(h(\"<div/>\",{\"class\":f.sScrollHead}).css({overflow:\"hidden\",position:\"relative\",border:0,width:d?!d?null:x(d):\"100%\"}).append(h(\"<div/>\",{\"class\":f.sScrollHeadInner}).css({\"box-sizing\":\"content-box\",\nwidth:c.sXInner||\"100%\"}).append(i.removeAttr(\"id\").css(\"margin-left\",0).append(\"top\"===j?g:null).append(b.children(\"thead\"))))).append(h(\"<div/>\",{\"class\":f.sScrollBody}).css({position:\"relative\",overflow:\"auto\",width:!d?null:x(d)}).append(b));l&&i.append(h(\"<div/>\",{\"class\":f.sScrollFoot}).css({overflow:\"hidden\",border:0,width:d?!d?null:x(d):\"100%\"}).append(h(\"<div/>\",{\"class\":f.sScrollFootInner}).append(n.removeAttr(\"id\").css(\"margin-left\",0).append(\"bottom\"===j?g:null).append(b.children(\"tfoot\")))));\nvar b=i.children(),k=b[0],f=b[1],t=l?b[2]:null;if(d)h(f).on(\"scroll.DT\",function(){var a=this.scrollLeft;k.scrollLeft=a;l&&(t.scrollLeft=a)});h(f).css(e&&c.bCollapse?\"max-height\":\"height\",e);a.nScrollHead=k;a.nScrollBody=f;a.nScrollFoot=t;a.aoDrawCallback.push({fn:ka,sName:\"scrolling\"});return i[0]}function ka(a){var b=a.oScroll,c=b.sX,d=b.sXInner,e=b.sY,b=b.iBarWidth,f=h(a.nScrollHead),g=f[0].style,j=f.children(\"div\"),i=j[0].style,n=j.children(\"table\"),j=a.nScrollBody,l=h(j),q=j.style,t=h(a.nScrollFoot).children(\"div\"),\nm=t.children(\"table\"),o=h(a.nTHead),F=h(a.nTable),p=F[0],r=p.style,u=a.nTFoot?h(a.nTFoot):null,Eb=a.oBrowser,Ua=Eb.bScrollOversize,s=G(a.aoColumns,\"nTh\"),P,v,w,y,z=[],A=[],B=[],C=[],D,E=function(a){a=a.style;a.paddingTop=\"0\";a.paddingBottom=\"0\";a.borderTopWidth=\"0\";a.borderBottomWidth=\"0\";a.height=0};v=j.scrollHeight>j.clientHeight;if(a.scrollBarVis!==v&&a.scrollBarVis!==k)a.scrollBarVis=v,Y(a);else{a.scrollBarVis=v;F.children(\"thead, tfoot\").remove();u&&(w=u.clone().prependTo(F),P=u.find(\"tr\"),w=\nw.find(\"tr\"));y=o.clone().prependTo(F);o=o.find(\"tr\");v=y.find(\"tr\");y.find(\"th, td\").removeAttr(\"tabindex\");c||(q.width=\"100%\",f[0].style.width=\"100%\");h.each(qa(a,y),function(b,c){D=Z(a,b);c.style.width=a.aoColumns[D].sWidth});u&&J(function(a){a.style.width=\"\"},w);f=F.outerWidth();if(\"\"===c){r.width=\"100%\";if(Ua&&(F.find(\"tbody\").height()>j.offsetHeight||\"scroll\"==l.css(\"overflow-y\")))r.width=x(F.outerWidth()-b);f=F.outerWidth()}else\"\"!==d&&(r.width=x(d),f=F.outerWidth());J(E,v);J(function(a){B.push(a.innerHTML);\nz.push(x(h(a).css(\"width\")))},v);J(function(a,b){if(h.inArray(a,s)!==-1)a.style.width=z[b]},o);h(v).height(0);u&&(J(E,w),J(function(a){C.push(a.innerHTML);A.push(x(h(a).css(\"width\")))},w),J(function(a,b){a.style.width=A[b]},P),h(w).height(0));J(function(a,b){a.innerHTML='<div class=\"dataTables_sizing\" style=\"height:0;overflow:hidden;\">'+B[b]+\"</div>\";a.style.width=z[b]},v);u&&J(function(a,b){a.innerHTML='<div class=\"dataTables_sizing\" style=\"height:0;overflow:hidden;\">'+C[b]+\"</div>\";a.style.width=\nA[b]},w);if(F.outerWidth()<f){P=j.scrollHeight>j.offsetHeight||\"scroll\"==l.css(\"overflow-y\")?f+b:f;if(Ua&&(j.scrollHeight>j.offsetHeight||\"scroll\"==l.css(\"overflow-y\")))r.width=x(P-b);(\"\"===c||\"\"!==d)&&L(a,1,\"Possible column misalignment\",6)}else P=\"100%\";q.width=x(P);g.width=x(P);u&&(a.nScrollFoot.style.width=x(P));!e&&Ua&&(q.height=x(p.offsetHeight+b));c=F.outerWidth();n[0].style.width=x(c);i.width=x(c);d=F.height()>j.clientHeight||\"scroll\"==l.css(\"overflow-y\");e=\"padding\"+(Eb.bScrollbarLeft?\"Left\":\n\"Right\");i[e]=d?b+\"px\":\"0px\";u&&(m[0].style.width=x(c),t[0].style.width=x(c),t[0].style[e]=d?b+\"px\":\"0px\");F.children(\"colgroup\").insertBefore(F.children(\"thead\"));l.scroll();if((a.bSorted||a.bFiltered)&&!a._drawHold)j.scrollTop=0}}function J(a,b,c){for(var d=0,e=0,f=b.length,g,j;e<f;){g=b[e].firstChild;for(j=c?c[e].firstChild:null;g;)1===g.nodeType&&(c?a(g,j,d):a(g,d),d++),g=g.nextSibling,j=c?j.nextSibling:null;e++}}function Fa(a){var b=a.nTable,c=a.aoColumns,d=a.oScroll,e=d.sY,f=d.sX,g=d.sXInner,\nj=c.length,i=la(a,\"bVisible\"),n=h(\"th\",a.nTHead),l=b.getAttribute(\"width\"),k=b.parentNode,t=!1,m,o,p=a.oBrowser,d=p.bScrollOversize;(m=b.style.width)&&-1!==m.indexOf(\"%\")&&(l=m);for(m=0;m<i.length;m++)o=c[i[m]],null!==o.sWidth&&(o.sWidth=Fb(o.sWidthOrig,k),t=!0);if(d||!t&&!f&&!e&&j==aa(a)&&j==n.length)for(m=0;m<j;m++)i=Z(a,m),null!==i&&(c[i].sWidth=x(n.eq(m).width()));else{j=h(b).clone().css(\"visibility\",\"hidden\").removeAttr(\"id\");j.find(\"tbody tr\").remove();var r=h(\"<tr/>\").appendTo(j.find(\"tbody\"));\nj.find(\"thead, tfoot\").remove();j.append(h(a.nTHead).clone()).append(h(a.nTFoot).clone());j.find(\"tfoot th, tfoot td\").css(\"width\",\"\");n=qa(a,j.find(\"thead\")[0]);for(m=0;m<i.length;m++)o=c[i[m]],n[m].style.width=null!==o.sWidthOrig&&\"\"!==o.sWidthOrig?x(o.sWidthOrig):\"\",o.sWidthOrig&&f&&h(n[m]).append(h(\"<div/>\").css({width:o.sWidthOrig,margin:0,padding:0,border:0,height:1}));if(a.aoData.length)for(m=0;m<i.length;m++)t=i[m],o=c[t],h(Gb(a,t)).clone(!1).append(o.sContentPadding).appendTo(r);h(\"[name]\",\nj).removeAttr(\"name\");o=h(\"<div/>\").css(f||e?{position:\"absolute\",top:0,left:0,height:1,right:0,overflow:\"hidden\"}:{}).append(j).appendTo(k);f&&g?j.width(g):f?(j.css(\"width\",\"auto\"),j.removeAttr(\"width\"),j.width()<k.clientWidth&&l&&j.width(k.clientWidth)):e?j.width(k.clientWidth):l&&j.width(l);for(m=e=0;m<i.length;m++)k=h(n[m]),g=k.outerWidth()-k.width(),k=p.bBounding?Math.ceil(n[m].getBoundingClientRect().width):k.outerWidth(),e+=k,c[i[m]].sWidth=x(k-g);b.style.width=x(e);o.remove()}l&&(b.style.width=\nx(l));if((l||f)&&!a._reszEvt)b=function(){h(D).bind(\"resize.DT-\"+a.sInstance,Oa(function(){Y(a)}))},d?setTimeout(b,1E3):b(),a._reszEvt=!0}function Fb(a,b){if(!a)return 0;var c=h(\"<div/>\").css(\"width\",x(a)).appendTo(b||I.body),d=c[0].offsetWidth;c.remove();return d}function Gb(a,b){var c=Hb(a,b);if(0>c)return null;var d=a.aoData[c];return!d.nTr?h(\"<td/>\").html(B(a,c,b,\"display\"))[0]:d.anCells[b]}function Hb(a,b){for(var c,d=-1,e=-1,f=0,g=a.aoData.length;f<g;f++)c=B(a,f,b,\"display\")+\"\",c=c.replace($b,\n\"\"),c=c.replace(/&nbsp;/g,\" \"),c.length>d&&(d=c.length,e=f);return e}function x(a){return null===a?\"0px\":\"number\"==typeof a?0>a?\"0px\":a+\"px\":a.match(/\\d$/)?a+\"px\":a}function V(a){var b,c,d=[],e=a.aoColumns,f,g,j,i;b=a.aaSortingFixed;c=h.isPlainObject(b);var n=[];f=function(a){a.length&&!h.isArray(a[0])?n.push(a):h.merge(n,a)};h.isArray(b)&&f(b);c&&b.pre&&f(b.pre);f(a.aaSorting);c&&b.post&&f(b.post);for(a=0;a<n.length;a++){i=n[a][0];f=e[i].aDataSort;b=0;for(c=f.length;b<c;b++)g=f[b],j=e[g].sType||\n\"string\",n[a]._idx===k&&(n[a]._idx=h.inArray(n[a][1],e[g].asSorting)),d.push({src:i,col:g,dir:n[a][1],index:n[a]._idx,type:j,formatter:m.ext.type.order[j+\"-pre\"]})}return d}function mb(a){var b,c,d=[],e=m.ext.type.order,f=a.aoData,g=0,j,i=a.aiDisplayMaster,h;Ga(a);h=V(a);b=0;for(c=h.length;b<c;b++)j=h[b],j.formatter&&g++,Ib(a,j.col);if(\"ssp\"!=y(a)&&0!==h.length){b=0;for(c=i.length;b<c;b++)d[i[b]]=b;g===h.length?i.sort(function(a,b){var c,e,g,j,i=h.length,k=f[a]._aSortData,m=f[b]._aSortData;for(g=\n0;g<i;g++)if(j=h[g],c=k[j.col],e=m[j.col],c=c<e?-1:c>e?1:0,0!==c)return\"asc\"===j.dir?c:-c;c=d[a];e=d[b];return c<e?-1:c>e?1:0}):i.sort(function(a,b){var c,g,j,i,k=h.length,m=f[a]._aSortData,p=f[b]._aSortData;for(j=0;j<k;j++)if(i=h[j],c=m[i.col],g=p[i.col],i=e[i.type+\"-\"+i.dir]||e[\"string-\"+i.dir],c=i(c,g),0!==c)return c;c=d[a];g=d[b];return c<g?-1:c>g?1:0})}a.bSorted=!0}function Jb(a){for(var b,c,d=a.aoColumns,e=V(a),a=a.oLanguage.oAria,f=0,g=d.length;f<g;f++){c=d[f];var j=c.asSorting;b=c.sTitle.replace(/<.*?>/g,\n\"\");var i=c.nTh;i.removeAttribute(\"aria-sort\");c.bSortable&&(0<e.length&&e[0].col==f?(i.setAttribute(\"aria-sort\",\"asc\"==e[0].dir?\"ascending\":\"descending\"),c=j[e[0].index+1]||j[0]):c=j[0],b+=\"asc\"===c?a.sSortAscending:a.sSortDescending);i.setAttribute(\"aria-label\",b)}}function Va(a,b,c,d){var e=a.aaSorting,f=a.aoColumns[b].asSorting,g=function(a,b){var c=a._idx;c===k&&(c=h.inArray(a[1],f));return c+1<f.length?c+1:b?null:0};\"number\"===typeof e[0]&&(e=a.aaSorting=[e]);c&&a.oFeatures.bSortMulti?(c=h.inArray(b,\nG(e,\"0\")),-1!==c?(b=g(e[c],!0),null===b&&1===e.length&&(b=0),null===b?e.splice(c,1):(e[c][1]=f[b],e[c]._idx=b)):(e.push([b,f[0],0]),e[e.length-1]._idx=0)):e.length&&e[0][0]==b?(b=g(e[0]),e.length=1,e[0][1]=f[b],e[0]._idx=b):(e.length=0,e.push([b,f[0]]),e[0]._idx=0);T(a);\"function\"==typeof d&&d(a)}function Ma(a,b,c,d){var e=a.aoColumns[c];Wa(b,{},function(b){!1!==e.bSortable&&(a.oFeatures.bProcessing?(C(a,!0),setTimeout(function(){Va(a,c,b.shiftKey,d);\"ssp\"!==y(a)&&C(a,!1)},0)):Va(a,c,b.shiftKey,d))})}\nfunction va(a){var b=a.aLastSort,c=a.oClasses.sSortColumn,d=V(a),e=a.oFeatures,f,g;if(e.bSort&&e.bSortClasses){e=0;for(f=b.length;e<f;e++)g=b[e].src,h(G(a.aoData,\"anCells\",g)).removeClass(c+(2>e?e+1:3));e=0;for(f=d.length;e<f;e++)g=d[e].src,h(G(a.aoData,\"anCells\",g)).addClass(c+(2>e?e+1:3))}a.aLastSort=d}function Ib(a,b){var c=a.aoColumns[b],d=m.ext.order[c.sSortDataType],e;d&&(e=d.call(a.oInstance,a,b,$(a,b)));for(var f,g=m.ext.type.order[c.sType+\"-pre\"],j=0,i=a.aoData.length;j<i;j++)if(c=a.aoData[j],\nc._aSortData||(c._aSortData=[]),!c._aSortData[b]||d)f=d?e[j]:B(a,j,b,\"sort\"),c._aSortData[b]=g?g(f):f}function wa(a){if(a.oFeatures.bStateSave&&!a.bDestroying){var b={time:+new Date,start:a._iDisplayStart,length:a._iDisplayLength,order:h.extend(!0,[],a.aaSorting),search:Ab(a.oPreviousSearch),columns:h.map(a.aoColumns,function(b,d){return{visible:b.bVisible,search:Ab(a.aoPreSearchCols[d])}})};u(a,\"aoStateSaveParams\",\"stateSaveParams\",[a,b]);a.oSavedState=b;a.fnStateSaveCallback.call(a.oInstance,a,\nb)}}function Kb(a){var b,c,d=a.aoColumns;if(a.oFeatures.bStateSave){var e=a.fnStateLoadCallback.call(a.oInstance,a);if(e&&e.time&&(b=u(a,\"aoStateLoadParams\",\"stateLoadParams\",[a,e]),-1===h.inArray(!1,b)&&(b=a.iStateDuration,!(0<b&&e.time<+new Date-1E3*b)&&d.length===e.columns.length))){a.oLoadedState=h.extend(!0,{},e);e.start!==k&&(a._iDisplayStart=e.start,a.iInitDisplayStart=e.start);e.length!==k&&(a._iDisplayLength=e.length);e.order!==k&&(a.aaSorting=[],h.each(e.order,function(b,c){a.aaSorting.push(c[0]>=\nd.length?[0,c[1]]:c)}));e.search!==k&&h.extend(a.oPreviousSearch,Bb(e.search));b=0;for(c=e.columns.length;b<c;b++){var f=e.columns[b];f.visible!==k&&(d[b].bVisible=f.visible);f.search!==k&&h.extend(a.aoPreSearchCols[b],Bb(f.search))}u(a,\"aoStateLoaded\",\"stateLoaded\",[a,e])}}}function xa(a){var b=m.settings,a=h.inArray(a,G(b,\"nTable\"));return-1!==a?b[a]:null}function L(a,b,c,d){c=\"DataTables warning: \"+(a?\"table id=\"+a.sTableId+\" - \":\"\")+c;d&&(c+=\". For more information about this error, please see http://datatables.net/tn/\"+\nd);if(b)D.console&&console.log&&console.log(c);else if(b=m.ext,b=b.sErrMode||b.errMode,a&&u(a,null,\"error\",[a,d,c]),\"alert\"==b)alert(c);else{if(\"throw\"==b)throw Error(c);\"function\"==typeof b&&b(a,d,c)}}function E(a,b,c,d){h.isArray(c)?h.each(c,function(c,d){h.isArray(d)?E(a,b,d[0],d[1]):E(a,b,d)}):(d===k&&(d=c),b[c]!==k&&(a[d]=b[c]))}function Lb(a,b,c){var d,e;for(e in b)b.hasOwnProperty(e)&&(d=b[e],h.isPlainObject(d)?(h.isPlainObject(a[e])||(a[e]={}),h.extend(!0,a[e],d)):a[e]=c&&\"data\"!==e&&\"aaData\"!==\ne&&h.isArray(d)?d.slice():d);return a}function Wa(a,b,c){h(a).bind(\"click.DT\",b,function(b){a.blur();c(b)}).bind(\"keypress.DT\",b,function(a){13===a.which&&(a.preventDefault(),c(a))}).bind(\"selectstart.DT\",function(){return!1})}function z(a,b,c,d){c&&a[b].push({fn:c,sName:d})}function u(a,b,c,d){var e=[];b&&(e=h.map(a[b].slice().reverse(),function(b){return b.fn.apply(a.oInstance,d)}));null!==c&&(b=h.Event(c+\".dt\"),h(a.nTable).trigger(b,d),e.push(b.result));return e}function Sa(a){var b=a._iDisplayStart,\nc=a.fnDisplayEnd(),d=a._iDisplayLength;b>=c&&(b=c-d);b-=b%d;if(-1===d||0>b)b=0;a._iDisplayStart=b}function Na(a,b){var c=a.renderer,d=m.ext.renderer[b];return h.isPlainObject(c)&&c[b]?d[c[b]]||d._:\"string\"===typeof c?d[c]||d._:d._}function y(a){return a.oFeatures.bServerSide?\"ssp\":a.ajax||a.sAjaxSource?\"ajax\":\"dom\"}function ya(a,b){var c=[],c=Mb.numbers_length,d=Math.floor(c/2);b<=c?c=W(0,b):a<=d?(c=W(0,c-2),c.push(\"ellipsis\"),c.push(b-1)):(a>=b-1-d?c=W(b-(c-2),b):(c=W(a-d+2,a+d-1),c.push(\"ellipsis\"),\nc.push(b-1)),c.splice(0,0,\"ellipsis\"),c.splice(0,0,0));c.DT_el=\"span\";return c}function db(a){h.each({num:function(b){return za(b,a)},\"num-fmt\":function(b){return za(b,a,Xa)},\"html-num\":function(b){return za(b,a,Aa)},\"html-num-fmt\":function(b){return za(b,a,Aa,Xa)}},function(b,c){v.type.order[b+a+\"-pre\"]=c;b.match(/^html\\-/)&&(v.type.search[b+a]=v.type.search.html)})}function Nb(a){return function(){var b=[xa(this[m.ext.iApiIndex])].concat(Array.prototype.slice.call(arguments));return m.ext.internal[a].apply(this,\nb)}}var m=function(a){this.$=function(a,b){return this.api(!0).$(a,b)};this._=function(a,b){return this.api(!0).rows(a,b).data()};this.api=function(a){return a?new r(xa(this[v.iApiIndex])):new r(this)};this.fnAddData=function(a,b){var c=this.api(!0),d=h.isArray(a)&&(h.isArray(a[0])||h.isPlainObject(a[0]))?c.rows.add(a):c.row.add(a);(b===k||b)&&c.draw();return d.flatten().toArray()};this.fnAdjustColumnSizing=function(a){var b=this.api(!0).columns.adjust(),c=b.settings()[0],d=c.oScroll;a===k||a?b.draw(!1):\n(\"\"!==d.sX||\"\"!==d.sY)&&ka(c)};this.fnClearTable=function(a){var b=this.api(!0).clear();(a===k||a)&&b.draw()};this.fnClose=function(a){this.api(!0).row(a).child.hide()};this.fnDeleteRow=function(a,b,c){var d=this.api(!0),a=d.rows(a),e=a.settings()[0],h=e.aoData[a[0][0]];a.remove();b&&b.call(this,e,h);(c===k||c)&&d.draw();return h};this.fnDestroy=function(a){this.api(!0).destroy(a)};this.fnDraw=function(a){this.api(!0).draw(a)};this.fnFilter=function(a,b,c,d,e,h){e=this.api(!0);null===b||b===k?e.search(a,\nc,d,h):e.column(b).search(a,c,d,h);e.draw()};this.fnGetData=function(a,b){var c=this.api(!0);if(a!==k){var d=a.nodeName?a.nodeName.toLowerCase():\"\";return b!==k||\"td\"==d||\"th\"==d?c.cell(a,b).data():c.row(a).data()||null}return c.data().toArray()};this.fnGetNodes=function(a){var b=this.api(!0);return a!==k?b.row(a).node():b.rows().nodes().flatten().toArray()};this.fnGetPosition=function(a){var b=this.api(!0),c=a.nodeName.toUpperCase();return\"TR\"==c?b.row(a).index():\"TD\"==c||\"TH\"==c?(a=b.cell(a).index(),\n[a.row,a.columnVisible,a.column]):null};this.fnIsOpen=function(a){return this.api(!0).row(a).child.isShown()};this.fnOpen=function(a,b,c){return this.api(!0).row(a).child(b,c).show().child()[0]};this.fnPageChange=function(a,b){var c=this.api(!0).page(a);(b===k||b)&&c.draw(!1)};this.fnSetColumnVis=function(a,b,c){a=this.api(!0).column(a).visible(b);(c===k||c)&&a.columns.adjust().draw()};this.fnSettings=function(){return xa(this[v.iApiIndex])};this.fnSort=function(a){this.api(!0).order(a).draw()};this.fnSortListener=\nfunction(a,b,c){this.api(!0).order.listener(a,b,c)};this.fnUpdate=function(a,b,c,d,e){var h=this.api(!0);c===k||null===c?h.row(b).data(a):h.cell(b,c).data(a);(e===k||e)&&h.columns.adjust();(d===k||d)&&h.draw();return 0};this.fnVersionCheck=v.fnVersionCheck;var b=this,c=a===k,d=this.length;c&&(a={});this.oApi=this.internal=v.internal;for(var e in m.ext.internal)e&&(this[e]=Nb(e));this.each(function(){var e={},e=1<d?Lb(e,a,!0):a,g=0,j,i=this.getAttribute(\"id\"),n=!1,l=m.defaults,q=h(this);if(\"table\"!=\nthis.nodeName.toLowerCase())L(null,0,\"Non-table node initialisation (\"+this.nodeName+\")\",2);else{eb(l);fb(l.column);K(l,l,!0);K(l.column,l.column,!0);K(l,h.extend(e,q.data()));var t=m.settings,g=0;for(j=t.length;g<j;g++){var p=t[g];if(p.nTable==this||p.nTHead.parentNode==this||p.nTFoot&&p.nTFoot.parentNode==this){g=e.bRetrieve!==k?e.bRetrieve:l.bRetrieve;if(c||g)return p.oInstance;if(e.bDestroy!==k?e.bDestroy:l.bDestroy){p.oInstance.fnDestroy();break}else{L(p,0,\"Cannot reinitialise DataTable\",3);\nreturn}}if(p.sTableId==this.id){t.splice(g,1);break}}if(null===i||\"\"===i)this.id=i=\"DataTables_Table_\"+m.ext._unique++;var o=h.extend(!0,{},m.models.oSettings,{sDestroyWidth:q[0].style.width,sInstance:i,sTableId:i});o.nTable=this;o.oApi=b.internal;o.oInit=e;t.push(o);o.oInstance=1===b.length?b:q.dataTable();eb(e);e.oLanguage&&Da(e.oLanguage);e.aLengthMenu&&!e.iDisplayLength&&(e.iDisplayLength=h.isArray(e.aLengthMenu[0])?e.aLengthMenu[0][0]:e.aLengthMenu[0]);e=Lb(h.extend(!0,{},l),e);E(o.oFeatures,\ne,\"bPaginate bLengthChange bFilter bSort bSortMulti bInfo bProcessing bAutoWidth bSortClasses bServerSide bDeferRender\".split(\" \"));E(o,e,[\"asStripeClasses\",\"ajax\",\"fnServerData\",\"fnFormatNumber\",\"sServerMethod\",\"aaSorting\",\"aaSortingFixed\",\"aLengthMenu\",\"sPaginationType\",\"sAjaxSource\",\"sAjaxDataProp\",\"iStateDuration\",\"sDom\",\"bSortCellsTop\",\"iTabIndex\",\"fnStateLoadCallback\",\"fnStateSaveCallback\",\"renderer\",\"searchDelay\",\"rowId\",[\"iCookieDuration\",\"iStateDuration\"],[\"oSearch\",\"oPreviousSearch\"],[\"aoSearchCols\",\n\"aoPreSearchCols\"],[\"iDisplayLength\",\"_iDisplayLength\"],[\"bJQueryUI\",\"bJUI\"]]);E(o.oScroll,e,[[\"sScrollX\",\"sX\"],[\"sScrollXInner\",\"sXInner\"],[\"sScrollY\",\"sY\"],[\"bScrollCollapse\",\"bCollapse\"]]);E(o.oLanguage,e,\"fnInfoCallback\");z(o,\"aoDrawCallback\",e.fnDrawCallback,\"user\");z(o,\"aoServerParams\",e.fnServerParams,\"user\");z(o,\"aoStateSaveParams\",e.fnStateSaveParams,\"user\");z(o,\"aoStateLoadParams\",e.fnStateLoadParams,\"user\");z(o,\"aoStateLoaded\",e.fnStateLoaded,\"user\");z(o,\"aoRowCallback\",e.fnRowCallback,\n\"user\");z(o,\"aoRowCreatedCallback\",e.fnCreatedRow,\"user\");z(o,\"aoHeaderCallback\",e.fnHeaderCallback,\"user\");z(o,\"aoFooterCallback\",e.fnFooterCallback,\"user\");z(o,\"aoInitComplete\",e.fnInitComplete,\"user\");z(o,\"aoPreDrawCallback\",e.fnPreDrawCallback,\"user\");o.rowIdFn=Q(e.rowId);gb(o);i=o.oClasses;e.bJQueryUI?(h.extend(i,m.ext.oJUIClasses,e.oClasses),e.sDom===l.sDom&&\"lfrtip\"===l.sDom&&(o.sDom='<\"H\"lfr>t<\"F\"ip>'),o.renderer)?h.isPlainObject(o.renderer)&&!o.renderer.header&&(o.renderer.header=\"jqueryui\"):\no.renderer=\"jqueryui\":h.extend(i,m.ext.classes,e.oClasses);q.addClass(i.sTable);o.iInitDisplayStart===k&&(o.iInitDisplayStart=e.iDisplayStart,o._iDisplayStart=e.iDisplayStart);null!==e.iDeferLoading&&(o.bDeferLoading=!0,g=h.isArray(e.iDeferLoading),o._iRecordsDisplay=g?e.iDeferLoading[0]:e.iDeferLoading,o._iRecordsTotal=g?e.iDeferLoading[1]:e.iDeferLoading);var r=o.oLanguage;h.extend(!0,r,e.oLanguage);\"\"!==r.sUrl&&(h.ajax({dataType:\"json\",url:r.sUrl,success:function(a){Da(a);K(l.oLanguage,a);h.extend(true,\nr,a);ga(o)},error:function(){ga(o)}}),n=!0);null===e.asStripeClasses&&(o.asStripeClasses=[i.sStripeOdd,i.sStripeEven]);var g=o.asStripeClasses,v=q.children(\"tbody\").find(\"tr\").eq(0);-1!==h.inArray(!0,h.map(g,function(a){return v.hasClass(a)}))&&(h(\"tbody tr\",this).removeClass(g.join(\" \")),o.asDestroyStripes=g.slice());t=[];g=this.getElementsByTagName(\"thead\");0!==g.length&&(da(o.aoHeader,g[0]),t=qa(o));if(null===e.aoColumns){p=[];g=0;for(j=t.length;g<j;g++)p.push(null)}else p=e.aoColumns;g=0;for(j=\np.length;g<j;g++)Ea(o,t?t[g]:null);ib(o,e.aoColumnDefs,p,function(a,b){ja(o,a,b)});if(v.length){var s=function(a,b){return a.getAttribute(\"data-\"+b)!==null?b:null};h(v[0]).children(\"th, td\").each(function(a,b){var c=o.aoColumns[a];if(c.mData===a){var d=s(b,\"sort\")||s(b,\"order\"),e=s(b,\"filter\")||s(b,\"search\");if(d!==null||e!==null){c.mData={_:a+\".display\",sort:d!==null?a+\".@data-\"+d:k,type:d!==null?a+\".@data-\"+d:k,filter:e!==null?a+\".@data-\"+e:k};ja(o,a)}}})}var w=o.oFeatures;e.bStateSave&&(w.bStateSave=\n!0,Kb(o,e),z(o,\"aoDrawCallback\",wa,\"state_save\"));if(e.aaSorting===k){t=o.aaSorting;g=0;for(j=t.length;g<j;g++)t[g][1]=o.aoColumns[g].asSorting[0]}va(o);w.bSort&&z(o,\"aoDrawCallback\",function(){if(o.bSorted){var a=V(o),b={};h.each(a,function(a,c){b[c.src]=c.dir});u(o,null,\"order\",[o,a,b]);Jb(o)}});z(o,\"aoDrawCallback\",function(){(o.bSorted||y(o)===\"ssp\"||w.bDeferRender)&&va(o)},\"sc\");g=q.children(\"caption\").each(function(){this._captionSide=q.css(\"caption-side\")});j=q.children(\"thead\");0===j.length&&\n(j=h(\"<thead/>\").appendTo(this));o.nTHead=j[0];j=q.children(\"tbody\");0===j.length&&(j=h(\"<tbody/>\").appendTo(this));o.nTBody=j[0];j=q.children(\"tfoot\");if(0===j.length&&0<g.length&&(\"\"!==o.oScroll.sX||\"\"!==o.oScroll.sY))j=h(\"<tfoot/>\").appendTo(this);0===j.length||0===j.children().length?q.addClass(i.sNoFooter):0<j.length&&(o.nTFoot=j[0],da(o.aoFooter,o.nTFoot));if(e.aaData)for(g=0;g<e.aaData.length;g++)N(o,e.aaData[g]);else(o.bDeferLoading||\"dom\"==y(o))&&ma(o,h(o.nTBody).children(\"tr\"));o.aiDisplay=\no.aiDisplayMaster.slice();o.bInitialised=!0;!1===n&&ga(o)}});b=null;return this},v,r,p,s,Ya={},Ob=/[\\r\\n]/g,Aa=/<.*?>/g,ac=/^[\\w\\+\\-]/,bc=/[\\w\\+\\-]$/,cc=RegExp(\"(\\\\/|\\\\.|\\\\*|\\\\+|\\\\?|\\\\||\\\\(|\\\\)|\\\\[|\\\\]|\\\\{|\\\\}|\\\\\\\\|\\\\$|\\\\^|\\\\-)\",\"g\"),Xa=/[',$£€¥%\\u2009\\u202F\\u20BD\\u20a9\\u20BArfk]/gi,M=function(a){return!a||!0===a||\"-\"===a?!0:!1},Pb=function(a){var b=parseInt(a,10);return!isNaN(b)&&isFinite(a)?b:null},Qb=function(a,b){Ya[b]||(Ya[b]=RegExp(Qa(b),\"g\"));return\"string\"===typeof a&&\".\"!==b?a.replace(/\\./g,\n\"\").replace(Ya[b],\".\"):a},Za=function(a,b,c){var d=\"string\"===typeof a;if(M(a))return!0;b&&d&&(a=Qb(a,b));c&&d&&(a=a.replace(Xa,\"\"));return!isNaN(parseFloat(a))&&isFinite(a)},Rb=function(a,b,c){return M(a)?!0:!(M(a)||\"string\"===typeof a)?null:Za(a.replace(Aa,\"\"),b,c)?!0:null},G=function(a,b,c){var d=[],e=0,f=a.length;if(c!==k)for(;e<f;e++)a[e]&&a[e][b]&&d.push(a[e][b][c]);else for(;e<f;e++)a[e]&&d.push(a[e][b]);return d},ha=function(a,b,c,d){var e=[],f=0,g=b.length;if(d!==k)for(;f<g;f++)a[b[f]][c]&&\ne.push(a[b[f]][c][d]);else for(;f<g;f++)e.push(a[b[f]][c]);return e},W=function(a,b){var c=[],d;b===k?(b=0,d=a):(d=b,b=a);for(var e=b;e<d;e++)c.push(e);return c},Sb=function(a){for(var b=[],c=0,d=a.length;c<d;c++)a[c]&&b.push(a[c]);return b},pa=function(a){var b=[],c,d,e=a.length,f,g=0;d=0;a:for(;d<e;d++){c=a[d];for(f=0;f<g;f++)if(b[f]===c)continue a;b.push(c);g++}return b};m.util={throttle:function(a,b){var c=b!==k?b:200,d,e;return function(){var b=this,g=+new Date,h=arguments;d&&g<d+c?(clearTimeout(e),\ne=setTimeout(function(){d=k;a.apply(b,h)},c)):(d=g,a.apply(b,h))}},escapeRegex:function(a){return a.replace(cc,\"\\\\$1\")}};var A=function(a,b,c){a[b]!==k&&(a[c]=a[b])},ba=/\\[.*?\\]$/,U=/\\(\\)$/,Qa=m.util.escapeRegex,ua=h(\"<div>\")[0],Zb=ua.textContent!==k,$b=/<.*?>/g,Oa=m.util.throttle,Tb=[],w=Array.prototype,dc=function(a){var b,c,d=m.settings,e=h.map(d,function(a){return a.nTable});if(a){if(a.nTable&&a.oApi)return[a];if(a.nodeName&&\"table\"===a.nodeName.toLowerCase())return b=h.inArray(a,e),-1!==b?[d[b]]:\nnull;if(a&&\"function\"===typeof a.settings)return a.settings().toArray();\"string\"===typeof a?c=h(a):a instanceof h&&(c=a)}else return[];if(c)return c.map(function(){b=h.inArray(this,e);return-1!==b?d[b]:null}).toArray()};r=function(a,b){if(!(this instanceof r))return new r(a,b);var c=[],d=function(a){(a=dc(a))&&(c=c.concat(a))};if(h.isArray(a))for(var e=0,f=a.length;e<f;e++)d(a[e]);else d(a);this.context=pa(c);b&&h.merge(this,b);this.selector={rows:null,cols:null,opts:null};r.extend(this,this,Tb)};\nm.Api=r;h.extend(r.prototype,{any:function(){return 0!==this.count()},concat:w.concat,context:[],count:function(){return this.flatten().length},each:function(a){for(var b=0,c=this.length;b<c;b++)a.call(this,this[b],b,this);return this},eq:function(a){var b=this.context;return b.length>a?new r(b[a],this[a]):null},filter:function(a){var b=[];if(w.filter)b=w.filter.call(this,a,this);else for(var c=0,d=this.length;c<d;c++)a.call(this,this[c],c,this)&&b.push(this[c]);return new r(this.context,b)},flatten:function(){var a=\n[];return new r(this.context,a.concat.apply(a,this.toArray()))},join:w.join,indexOf:w.indexOf||function(a,b){for(var c=b||0,d=this.length;c<d;c++)if(this[c]===a)return c;return-1},iterator:function(a,b,c,d){var e=[],f,g,h,i,n,l=this.context,m,t,p=this.selector;\"string\"===typeof a&&(d=c,c=b,b=a,a=!1);g=0;for(h=l.length;g<h;g++){var o=new r(l[g]);if(\"table\"===b)f=c.call(o,l[g],g),f!==k&&e.push(f);else if(\"columns\"===b||\"rows\"===b)f=c.call(o,l[g],this[g],g),f!==k&&e.push(f);else if(\"column\"===b||\"column-rows\"===\nb||\"row\"===b||\"cell\"===b){t=this[g];\"column-rows\"===b&&(m=Ba(l[g],p.opts));i=0;for(n=t.length;i<n;i++)f=t[i],f=\"cell\"===b?c.call(o,l[g],f.row,f.column,g,i):c.call(o,l[g],f,g,i,m),f!==k&&e.push(f)}}return e.length||d?(a=new r(l,a?e.concat.apply([],e):e),b=a.selector,b.rows=p.rows,b.cols=p.cols,b.opts=p.opts,a):this},lastIndexOf:w.lastIndexOf||function(a,b){return this.indexOf.apply(this.toArray.reverse(),arguments)},length:0,map:function(a){var b=[];if(w.map)b=w.map.call(this,a,this);else for(var c=\n0,d=this.length;c<d;c++)b.push(a.call(this,this[c],c));return new r(this.context,b)},pluck:function(a){return this.map(function(b){return b[a]})},pop:w.pop,push:w.push,reduce:w.reduce||function(a,b){return hb(this,a,b,0,this.length,1)},reduceRight:w.reduceRight||function(a,b){return hb(this,a,b,this.length-1,-1,-1)},reverse:w.reverse,selector:null,shift:w.shift,sort:w.sort,splice:w.splice,toArray:function(){return w.slice.call(this)},to$:function(){return h(this)},toJQuery:function(){return h(this)},\nunique:function(){return new r(this.context,pa(this))},unshift:w.unshift});r.extend=function(a,b,c){if(c.length&&b&&(b instanceof r||b.__dt_wrapper)){var d,e,f,g=function(a,b,c){return function(){var d=b.apply(a,arguments);r.extend(d,d,c.methodExt);return d}};d=0;for(e=c.length;d<e;d++)f=c[d],b[f.name]=\"function\"===typeof f.val?g(a,f.val,f):h.isPlainObject(f.val)?{}:f.val,b[f.name].__dt_wrapper=!0,r.extend(a,b[f.name],f.propExt)}};r.register=p=function(a,b){if(h.isArray(a))for(var c=0,d=a.length;c<\nd;c++)r.register(a[c],b);else for(var e=a.split(\".\"),f=Tb,g,j,c=0,d=e.length;c<d;c++){g=(j=-1!==e[c].indexOf(\"()\"))?e[c].replace(\"()\",\"\"):e[c];var i;a:{i=0;for(var n=f.length;i<n;i++)if(f[i].name===g){i=f[i];break a}i=null}i||(i={name:g,val:{},methodExt:[],propExt:[]},f.push(i));c===d-1?i.val=b:f=j?i.methodExt:i.propExt}};r.registerPlural=s=function(a,b,c){r.register(a,c);r.register(b,function(){var a=c.apply(this,arguments);return a===this?this:a instanceof r?a.length?h.isArray(a[0])?new r(a.context,\na[0]):a[0]:k:a})};p(\"tables()\",function(a){var b;if(a){b=r;var c=this.context;if(\"number\"===typeof a)a=[c[a]];else var d=h.map(c,function(a){return a.nTable}),a=h(d).filter(a).map(function(){var a=h.inArray(this,d);return c[a]}).toArray();b=new b(a)}else b=this;return b});p(\"table()\",function(a){var a=this.tables(a),b=a.context;return b.length?new r(b[0]):a});s(\"tables().nodes()\",\"table().node()\",function(){return this.iterator(\"table\",function(a){return a.nTable},1)});s(\"tables().body()\",\"table().body()\",\nfunction(){return this.iterator(\"table\",function(a){return a.nTBody},1)});s(\"tables().header()\",\"table().header()\",function(){return this.iterator(\"table\",function(a){return a.nTHead},1)});s(\"tables().footer()\",\"table().footer()\",function(){return this.iterator(\"table\",function(a){return a.nTFoot},1)});s(\"tables().containers()\",\"table().container()\",function(){return this.iterator(\"table\",function(a){return a.nTableWrapper},1)});p(\"draw()\",function(a){return this.iterator(\"table\",function(b){\"page\"===\na?O(b):(\"string\"===typeof a&&(a=\"full-hold\"===a?!1:!0),T(b,!1===a))})});p(\"page()\",function(a){return a===k?this.page.info().page:this.iterator(\"table\",function(b){Ta(b,a)})});p(\"page.info()\",function(){if(0===this.context.length)return k;var a=this.context[0],b=a._iDisplayStart,c=a.oFeatures.bPaginate?a._iDisplayLength:-1,d=a.fnRecordsDisplay(),e=-1===c;return{page:e?0:Math.floor(b/c),pages:e?1:Math.ceil(d/c),start:b,end:a.fnDisplayEnd(),length:c,recordsTotal:a.fnRecordsTotal(),recordsDisplay:d,\nserverSide:\"ssp\"===y(a)}});p(\"page.len()\",function(a){return a===k?0!==this.context.length?this.context[0]._iDisplayLength:k:this.iterator(\"table\",function(b){Ra(b,a)})});var Ub=function(a,b,c){if(c){var d=new r(a);d.one(\"draw\",function(){c(d.ajax.json())})}if(\"ssp\"==y(a))T(a,b);else{C(a,!0);var e=a.jqXHR;e&&4!==e.readyState&&e.abort();ra(a,[],function(c){na(a);for(var c=sa(a,c),d=0,e=c.length;d<e;d++)N(a,c[d]);T(a,b);C(a,!1)})}};p(\"ajax.json()\",function(){var a=this.context;if(0<a.length)return a[0].json});\np(\"ajax.params()\",function(){var a=this.context;if(0<a.length)return a[0].oAjaxData});p(\"ajax.reload()\",function(a,b){return this.iterator(\"table\",function(c){Ub(c,!1===b,a)})});p(\"ajax.url()\",function(a){var b=this.context;if(a===k){if(0===b.length)return k;b=b[0];return b.ajax?h.isPlainObject(b.ajax)?b.ajax.url:b.ajax:b.sAjaxSource}return this.iterator(\"table\",function(b){h.isPlainObject(b.ajax)?b.ajax.url=a:b.ajax=a})});p(\"ajax.url().load()\",function(a,b){return this.iterator(\"table\",function(c){Ub(c,\n!1===b,a)})});var $a=function(a,b,c,d,e){var f=[],g,j,i,n,l,m;i=typeof b;if(!b||\"string\"===i||\"function\"===i||b.length===k)b=[b];i=0;for(n=b.length;i<n;i++){j=b[i]&&b[i].split?b[i].split(\",\"):[b[i]];l=0;for(m=j.length;l<m;l++)(g=c(\"string\"===typeof j[l]?h.trim(j[l]):j[l]))&&g.length&&(f=f.concat(g))}a=v.selector[a];if(a.length){i=0;for(n=a.length;i<n;i++)f=a[i](d,e,f)}return pa(f)},ab=function(a){a||(a={});a.filter&&a.search===k&&(a.search=a.filter);return h.extend({search:\"none\",order:\"current\",\npage:\"all\"},a)},bb=function(a){for(var b=0,c=a.length;b<c;b++)if(0<a[b].length)return a[0]=a[b],a[0].length=1,a.length=1,a.context=[a.context[b]],a;a.length=0;return a},Ba=function(a,b){var c,d,e,f=[],g=a.aiDisplay;c=a.aiDisplayMaster;var j=b.search;d=b.order;e=b.page;if(\"ssp\"==y(a))return\"removed\"===j?[]:W(0,c.length);if(\"current\"==e){c=a._iDisplayStart;for(d=a.fnDisplayEnd();c<d;c++)f.push(g[c])}else if(\"current\"==d||\"applied\"==d)f=\"none\"==j?c.slice():\"applied\"==j?g.slice():h.map(c,function(a){return-1===\nh.inArray(a,g)?a:null});else if(\"index\"==d||\"original\"==d){c=0;for(d=a.aoData.length;c<d;c++)\"none\"==j?f.push(c):(e=h.inArray(c,g),(-1===e&&\"removed\"==j||0<=e&&\"applied\"==j)&&f.push(c))}return f};p(\"rows()\",function(a,b){a===k?a=\"\":h.isPlainObject(a)&&(b=a,a=\"\");var b=ab(b),c=this.iterator(\"table\",function(c){var e=b;return $a(\"row\",a,function(a){var b=Pb(a);if(b!==null&&!e)return[b];var j=Ba(c,e);if(b!==null&&h.inArray(b,j)!==-1)return[b];if(!a)return j;if(typeof a===\"function\")return h.map(j,function(b){var e=\nc.aoData[b];return a(b,e._aData,e.nTr)?b:null});b=Sb(ha(c.aoData,j,\"nTr\"));if(a.nodeName){if(a._DT_RowIndex!==k)return[a._DT_RowIndex];if(a._DT_CellIndex)return[a._DT_CellIndex.row];b=h(a).closest(\"*[data-dt-row]\");return b.length?[b.data(\"dt-row\")]:[]}if(typeof a===\"string\"&&a.charAt(0)===\"#\"){j=c.aIds[a.replace(/^#/,\"\")];if(j!==k)return[j.idx]}return h(b).filter(a).map(function(){return this._DT_RowIndex}).toArray()},c,e)},1);c.selector.rows=a;c.selector.opts=b;return c});p(\"rows().nodes()\",function(){return this.iterator(\"row\",\nfunction(a,b){return a.aoData[b].nTr||k},1)});p(\"rows().data()\",function(){return this.iterator(!0,\"rows\",function(a,b){return ha(a.aoData,b,\"_aData\")},1)});s(\"rows().cache()\",\"row().cache()\",function(a){return this.iterator(\"row\",function(b,c){var d=b.aoData[c];return\"search\"===a?d._aFilterData:d._aSortData},1)});s(\"rows().invalidate()\",\"row().invalidate()\",function(a){return this.iterator(\"row\",function(b,c){ca(b,c,a)})});s(\"rows().indexes()\",\"row().index()\",function(){return this.iterator(\"row\",\nfunction(a,b){return b},1)});s(\"rows().ids()\",\"row().id()\",function(a){for(var b=[],c=this.context,d=0,e=c.length;d<e;d++)for(var f=0,g=this[d].length;f<g;f++){var h=c[d].rowIdFn(c[d].aoData[this[d][f]]._aData);b.push((!0===a?\"#\":\"\")+h)}return new r(c,b)});s(\"rows().remove()\",\"row().remove()\",function(){var a=this;this.iterator(\"row\",function(b,c,d){var e=b.aoData,f=e[c],g,h,i,n,l;e.splice(c,1);g=0;for(h=e.length;g<h;g++)if(i=e[g],l=i.anCells,null!==i.nTr&&(i.nTr._DT_RowIndex=g),null!==l){i=0;for(n=\nl.length;i<n;i++)l[i]._DT_CellIndex.row=g}oa(b.aiDisplayMaster,c);oa(b.aiDisplay,c);oa(a[d],c,!1);Sa(b);c=b.rowIdFn(f._aData);c!==k&&delete b.aIds[c]});this.iterator(\"table\",function(a){for(var c=0,d=a.aoData.length;c<d;c++)a.aoData[c].idx=c});return this});p(\"rows.add()\",function(a){var b=this.iterator(\"table\",function(b){var c,f,g,h=[];f=0;for(g=a.length;f<g;f++)c=a[f],c.nodeName&&\"TR\"===c.nodeName.toUpperCase()?h.push(ma(b,c)[0]):h.push(N(b,c));return h},1),c=this.rows(-1);c.pop();h.merge(c,b);\nreturn c});p(\"row()\",function(a,b){return bb(this.rows(a,b))});p(\"row().data()\",function(a){var b=this.context;if(a===k)return b.length&&this.length?b[0].aoData[this[0]]._aData:k;b[0].aoData[this[0]]._aData=a;ca(b[0],this[0],\"data\");return this});p(\"row().node()\",function(){var a=this.context;return a.length&&this.length?a[0].aoData[this[0]].nTr||null:null});p(\"row.add()\",function(a){a instanceof h&&a.length&&(a=a[0]);var b=this.iterator(\"table\",function(b){return a.nodeName&&\"TR\"===a.nodeName.toUpperCase()?\nma(b,a)[0]:N(b,a)});return this.row(b[0])});var cb=function(a,b){var c=a.context;if(c.length&&(c=c[0].aoData[b!==k?b:a[0]])&&c._details)c._details.remove(),c._detailsShow=k,c._details=k},Vb=function(a,b){var c=a.context;if(c.length&&a.length){var d=c[0].aoData[a[0]];if(d._details){(d._detailsShow=b)?d._details.insertAfter(d.nTr):d._details.detach();var e=c[0],f=new r(e),g=e.aoData;f.off(\"draw.dt.DT_details column-visibility.dt.DT_details destroy.dt.DT_details\");0<G(g,\"_details\").length&&(f.on(\"draw.dt.DT_details\",\nfunction(a,b){e===b&&f.rows({page:\"current\"}).eq(0).each(function(a){a=g[a];a._detailsShow&&a._details.insertAfter(a.nTr)})}),f.on(\"column-visibility.dt.DT_details\",function(a,b){if(e===b)for(var c,d=aa(b),f=0,h=g.length;f<h;f++)c=g[f],c._details&&c._details.children(\"td[colspan]\").attr(\"colspan\",d)}),f.on(\"destroy.dt.DT_details\",function(a,b){if(e===b)for(var c=0,d=g.length;c<d;c++)g[c]._details&&cb(f,c)}))}}};p(\"row().child()\",function(a,b){var c=this.context;if(a===k)return c.length&&this.length?\nc[0].aoData[this[0]]._details:k;if(!0===a)this.child.show();else if(!1===a)cb(this);else if(c.length&&this.length){var d=c[0],c=c[0].aoData[this[0]],e=[],f=function(a,b){if(h.isArray(a)||a instanceof h)for(var c=0,k=a.length;c<k;c++)f(a[c],b);else a.nodeName&&\"tr\"===a.nodeName.toLowerCase()?e.push(a):(c=h(\"<tr><td/></tr>\").addClass(b),h(\"td\",c).addClass(b).html(a)[0].colSpan=aa(d),e.push(c[0]))};f(a,b);c._details&&c._details.remove();c._details=h(e);c._detailsShow&&c._details.insertAfter(c.nTr)}return this});\np([\"row().child.show()\",\"row().child().show()\"],function(){Vb(this,!0);return this});p([\"row().child.hide()\",\"row().child().hide()\"],function(){Vb(this,!1);return this});p([\"row().child.remove()\",\"row().child().remove()\"],function(){cb(this);return this});p(\"row().child.isShown()\",function(){var a=this.context;return a.length&&this.length?a[0].aoData[this[0]]._detailsShow||!1:!1});var ec=/^(.+):(name|visIdx|visible)$/,Wb=function(a,b,c,d,e){for(var c=[],d=0,f=e.length;d<f;d++)c.push(B(a,e[d],b));\nreturn c};p(\"columns()\",function(a,b){a===k?a=\"\":h.isPlainObject(a)&&(b=a,a=\"\");var b=ab(b),c=this.iterator(\"table\",function(c){var e=a,f=b,g=c.aoColumns,j=G(g,\"sName\"),i=G(g,\"nTh\");return $a(\"column\",e,function(a){var b=Pb(a);if(a===\"\")return W(g.length);if(b!==null)return[b>=0?b:g.length+b];if(typeof a===\"function\"){var e=Ba(c,f);return h.map(g,function(b,f){return a(f,Wb(c,f,0,0,e),i[f])?f:null})}var k=typeof a===\"string\"?a.match(ec):\"\";if(k)switch(k[2]){case \"visIdx\":case \"visible\":b=parseInt(k[1],\n10);if(b<0){var m=h.map(g,function(a,b){return a.bVisible?b:null});return[m[m.length+b]]}return[Z(c,b)];case \"name\":return h.map(j,function(a,b){return a===k[1]?b:null});default:return[]}if(a.nodeName&&a._DT_CellIndex)return[a._DT_CellIndex.column];b=h(i).filter(a).map(function(){return h.inArray(this,i)}).toArray();if(b.length||!a.nodeName)return b;b=h(a).closest(\"*[data-dt-column]\");return b.length?[b.data(\"dt-column\")]:[]},c,f)},1);c.selector.cols=a;c.selector.opts=b;return c});s(\"columns().header()\",\n\"column().header()\",function(){return this.iterator(\"column\",function(a,b){return a.aoColumns[b].nTh},1)});s(\"columns().footer()\",\"column().footer()\",function(){return this.iterator(\"column\",function(a,b){return a.aoColumns[b].nTf},1)});s(\"columns().data()\",\"column().data()\",function(){return this.iterator(\"column-rows\",Wb,1)});s(\"columns().dataSrc()\",\"column().dataSrc()\",function(){return this.iterator(\"column\",function(a,b){return a.aoColumns[b].mData},1)});s(\"columns().cache()\",\"column().cache()\",\nfunction(a){return this.iterator(\"column-rows\",function(b,c,d,e,f){return ha(b.aoData,f,\"search\"===a?\"_aFilterData\":\"_aSortData\",c)},1)});s(\"columns().nodes()\",\"column().nodes()\",function(){return this.iterator(\"column-rows\",function(a,b,c,d,e){return ha(a.aoData,e,\"anCells\",b)},1)});s(\"columns().visible()\",\"column().visible()\",function(a,b){var c=this.iterator(\"column\",function(b,c){if(a===k)return b.aoColumns[c].bVisible;var f=b.aoColumns,g=f[c],j=b.aoData,i,n,l;if(a!==k&&g.bVisible!==a){if(a){var m=\nh.inArray(!0,G(f,\"bVisible\"),c+1);i=0;for(n=j.length;i<n;i++)l=j[i].nTr,f=j[i].anCells,l&&l.insertBefore(f[c],f[m]||null)}else h(G(b.aoData,\"anCells\",c)).detach();g.bVisible=a;ea(b,b.aoHeader);ea(b,b.aoFooter);wa(b)}});a!==k&&(this.iterator(\"column\",function(c,e){u(c,null,\"column-visibility\",[c,e,a,b])}),(b===k||b)&&this.columns.adjust());return c});s(\"columns().indexes()\",\"column().index()\",function(a){return this.iterator(\"column\",function(b,c){return\"visible\"===a?$(b,c):c},1)});p(\"columns.adjust()\",\nfunction(){return this.iterator(\"table\",function(a){Y(a)},1)});p(\"column.index()\",function(a,b){if(0!==this.context.length){var c=this.context[0];if(\"fromVisible\"===a||\"toData\"===a)return Z(c,b);if(\"fromData\"===a||\"toVisible\"===a)return $(c,b)}});p(\"column()\",function(a,b){return bb(this.columns(a,b))});p(\"cells()\",function(a,b,c){h.isPlainObject(a)&&(a.row===k?(c=a,a=null):(c=b,b=null));h.isPlainObject(b)&&(c=b,b=null);if(null===b||b===k)return this.iterator(\"table\",function(b){var d=a,e=ab(c),f=\nb.aoData,g=Ba(b,e),j=Sb(ha(f,g,\"anCells\")),i=h([].concat.apply([],j)),l,n=b.aoColumns.length,m,p,r,u,v,s;return $a(\"cell\",d,function(a){var c=typeof a===\"function\";if(a===null||a===k||c){m=[];p=0;for(r=g.length;p<r;p++){l=g[p];for(u=0;u<n;u++){v={row:l,column:u};if(c){s=f[l];a(v,B(b,l,u),s.anCells?s.anCells[u]:null)&&m.push(v)}else m.push(v)}}return m}if(h.isPlainObject(a))return[a];c=i.filter(a).map(function(a,b){return{row:b._DT_CellIndex.row,column:b._DT_CellIndex.column}}).toArray();if(c.length||\n!a.nodeName)return c;s=h(a).closest(\"*[data-dt-row]\");return s.length?[{row:s.data(\"dt-row\"),column:s.data(\"dt-column\")}]:[]},b,e)});var d=this.columns(b,c),e=this.rows(a,c),f,g,j,i,n,l=this.iterator(\"table\",function(a,b){f=[];g=0;for(j=e[b].length;g<j;g++){i=0;for(n=d[b].length;i<n;i++)f.push({row:e[b][g],column:d[b][i]})}return f},1);h.extend(l.selector,{cols:b,rows:a,opts:c});return l});s(\"cells().nodes()\",\"cell().node()\",function(){return this.iterator(\"cell\",function(a,b,c){return(a=a.aoData[b])&&\na.anCells?a.anCells[c]:k},1)});p(\"cells().data()\",function(){return this.iterator(\"cell\",function(a,b,c){return B(a,b,c)},1)});s(\"cells().cache()\",\"cell().cache()\",function(a){a=\"search\"===a?\"_aFilterData\":\"_aSortData\";return this.iterator(\"cell\",function(b,c,d){return b.aoData[c][a][d]},1)});s(\"cells().render()\",\"cell().render()\",function(a){return this.iterator(\"cell\",function(b,c,d){return B(b,c,d,a)},1)});s(\"cells().indexes()\",\"cell().index()\",function(){return this.iterator(\"cell\",function(a,\nb,c){return{row:b,column:c,columnVisible:$(a,c)}},1)});s(\"cells().invalidate()\",\"cell().invalidate()\",function(a){return this.iterator(\"cell\",function(b,c,d){ca(b,c,a,d)})});p(\"cell()\",function(a,b,c){return bb(this.cells(a,b,c))});p(\"cell().data()\",function(a){var b=this.context,c=this[0];if(a===k)return b.length&&c.length?B(b[0],c[0].row,c[0].column):k;jb(b[0],c[0].row,c[0].column,a);ca(b[0],c[0].row,\"data\",c[0].column);return this});p(\"order()\",function(a,b){var c=this.context;if(a===k)return 0!==\nc.length?c[0].aaSorting:k;\"number\"===typeof a?a=[[a,b]]:a.length&&!h.isArray(a[0])&&(a=Array.prototype.slice.call(arguments));return this.iterator(\"table\",function(b){b.aaSorting=a.slice()})});p(\"order.listener()\",function(a,b,c){return this.iterator(\"table\",function(d){Ma(d,a,b,c)})});p(\"order.fixed()\",function(a){if(!a){var b=this.context,b=b.length?b[0].aaSortingFixed:k;return h.isArray(b)?{pre:b}:b}return this.iterator(\"table\",function(b){b.aaSortingFixed=h.extend(!0,{},a)})});p([\"columns().order()\",\n\"column().order()\"],function(a){var b=this;return this.iterator(\"table\",function(c,d){var e=[];h.each(b[d],function(b,c){e.push([c,a])});c.aaSorting=e})});p(\"search()\",function(a,b,c,d){var e=this.context;return a===k?0!==e.length?e[0].oPreviousSearch.sSearch:k:this.iterator(\"table\",function(e){e.oFeatures.bFilter&&fa(e,h.extend({},e.oPreviousSearch,{sSearch:a+\"\",bRegex:null===b?!1:b,bSmart:null===c?!0:c,bCaseInsensitive:null===d?!0:d}),1)})});s(\"columns().search()\",\"column().search()\",function(a,\nb,c,d){return this.iterator(\"column\",function(e,f){var g=e.aoPreSearchCols;if(a===k)return g[f].sSearch;e.oFeatures.bFilter&&(h.extend(g[f],{sSearch:a+\"\",bRegex:null===b?!1:b,bSmart:null===c?!0:c,bCaseInsensitive:null===d?!0:d}),fa(e,e.oPreviousSearch,1))})});p(\"state()\",function(){return this.context.length?this.context[0].oSavedState:null});p(\"state.clear()\",function(){return this.iterator(\"table\",function(a){a.fnStateSaveCallback.call(a.oInstance,a,{})})});p(\"state.loaded()\",function(){return this.context.length?\nthis.context[0].oLoadedState:null});p(\"state.save()\",function(){return this.iterator(\"table\",function(a){wa(a)})});m.versionCheck=m.fnVersionCheck=function(a){for(var b=m.version.split(\".\"),a=a.split(\".\"),c,d,e=0,f=a.length;e<f;e++)if(c=parseInt(b[e],10)||0,d=parseInt(a[e],10)||0,c!==d)return c>d;return!0};m.isDataTable=m.fnIsDataTable=function(a){var b=h(a).get(0),c=!1;h.each(m.settings,function(a,e){var f=e.nScrollHead?h(\"table\",e.nScrollHead)[0]:null,g=e.nScrollFoot?h(\"table\",e.nScrollFoot)[0]:\nnull;if(e.nTable===b||f===b||g===b)c=!0});return c};m.tables=m.fnTables=function(a){var b=!1;h.isPlainObject(a)&&(b=a.api,a=a.visible);var c=h.map(m.settings,function(b){if(!a||a&&h(b.nTable).is(\":visible\"))return b.nTable});return b?new r(c):c};m.camelToHungarian=K;p(\"$()\",function(a,b){var c=this.rows(b).nodes(),c=h(c);return h([].concat(c.filter(a).toArray(),c.find(a).toArray()))});h.each([\"on\",\"one\",\"off\"],function(a,b){p(b+\"()\",function(){var a=Array.prototype.slice.call(arguments);a[0].match(/\\.dt\\b/)||\n(a[0]+=\".dt\");var d=h(this.tables().nodes());d[b].apply(d,a);return this})});p(\"clear()\",function(){return this.iterator(\"table\",function(a){na(a)})});p(\"settings()\",function(){return new r(this.context,this.context)});p(\"init()\",function(){var a=this.context;return a.length?a[0].oInit:null});p(\"data()\",function(){return this.iterator(\"table\",function(a){return G(a.aoData,\"_aData\")}).flatten()});p(\"destroy()\",function(a){a=a||!1;return this.iterator(\"table\",function(b){var c=b.nTableWrapper.parentNode,\nd=b.oClasses,e=b.nTable,f=b.nTBody,g=b.nTHead,j=b.nTFoot,i=h(e),f=h(f),k=h(b.nTableWrapper),l=h.map(b.aoData,function(a){return a.nTr}),p;b.bDestroying=!0;u(b,\"aoDestroyCallback\",\"destroy\",[b]);a||(new r(b)).columns().visible(!0);k.unbind(\".DT\").find(\":not(tbody *)\").unbind(\".DT\");h(D).unbind(\".DT-\"+b.sInstance);e!=g.parentNode&&(i.children(\"thead\").detach(),i.append(g));j&&e!=j.parentNode&&(i.children(\"tfoot\").detach(),i.append(j));b.aaSorting=[];b.aaSortingFixed=[];va(b);h(l).removeClass(b.asStripeClasses.join(\" \"));\nh(\"th, td\",g).removeClass(d.sSortable+\" \"+d.sSortableAsc+\" \"+d.sSortableDesc+\" \"+d.sSortableNone);b.bJUI&&(h(\"th span.\"+d.sSortIcon+\", td span.\"+d.sSortIcon,g).detach(),h(\"th, td\",g).each(function(){var a=h(\"div.\"+d.sSortJUIWrapper,this);h(this).append(a.contents());a.detach()}));f.children().detach();f.append(l);g=a?\"remove\":\"detach\";i[g]();k[g]();!a&&c&&(c.insertBefore(e,b.nTableReinsertBefore),i.css(\"width\",b.sDestroyWidth).removeClass(d.sTable),(p=b.asDestroyStripes.length)&&f.children().each(function(a){h(this).addClass(b.asDestroyStripes[a%\np])}));c=h.inArray(b,m.settings);-1!==c&&m.settings.splice(c,1)})});h.each([\"column\",\"row\",\"cell\"],function(a,b){p(b+\"s().every()\",function(a){var d=this.selector.opts,e=this;return this.iterator(b,function(f,g,h,i,n){a.call(e[b](g,\"cell\"===b?h:d,\"cell\"===b?d:k),g,h,i,n)})})});p(\"i18n()\",function(a,b,c){var d=this.context[0],a=Q(a)(d.oLanguage);a===k&&(a=b);c!==k&&h.isPlainObject(a)&&(a=a[c]!==k?a[c]:a._);return a.replace(\"%d\",c)});m.version=\"1.10.12\";m.settings=[];m.models={};m.models.oSearch={bCaseInsensitive:!0,\nsSearch:\"\",bRegex:!1,bSmart:!0};m.models.oRow={nTr:null,anCells:null,_aData:[],_aSortData:null,_aFilterData:null,_sFilterRow:null,_sRowStripe:\"\",src:null,idx:-1};m.models.oColumn={idx:null,aDataSort:null,asSorting:null,bSearchable:null,bSortable:null,bVisible:null,_sManualType:null,_bAttrSrc:!1,fnCreatedCell:null,fnGetData:null,fnSetData:null,mData:null,mRender:null,nTh:null,nTf:null,sClass:null,sContentPadding:null,sDefaultContent:null,sName:null,sSortDataType:\"std\",sSortingClass:null,sSortingClassJUI:null,\nsTitle:null,sType:null,sWidth:null,sWidthOrig:null};m.defaults={aaData:null,aaSorting:[[0,\"asc\"]],aaSortingFixed:[],ajax:null,aLengthMenu:[10,25,50,100],aoColumns:null,aoColumnDefs:null,aoSearchCols:[],asStripeClasses:null,bAutoWidth:!0,bDeferRender:!1,bDestroy:!1,bFilter:!0,bInfo:!0,bJQueryUI:!1,bLengthChange:!0,bPaginate:!0,bProcessing:!1,bRetrieve:!1,bScrollCollapse:!1,bServerSide:!1,bSort:!0,bSortMulti:!0,bSortCellsTop:!1,bSortClasses:!0,bStateSave:!1,fnCreatedRow:null,fnDrawCallback:null,fnFooterCallback:null,\nfnFormatNumber:function(a){return a.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g,this.oLanguage.sThousands)},fnHeaderCallback:null,fnInfoCallback:null,fnInitComplete:null,fnPreDrawCallback:null,fnRowCallback:null,fnServerData:null,fnServerParams:null,fnStateLoadCallback:function(a){try{return JSON.parse((-1===a.iStateDuration?sessionStorage:localStorage).getItem(\"DataTables_\"+a.sInstance+\"_\"+location.pathname))}catch(b){}},fnStateLoadParams:null,fnStateLoaded:null,fnStateSaveCallback:function(a,b){try{(-1===\na.iStateDuration?sessionStorage:localStorage).setItem(\"DataTables_\"+a.sInstance+\"_\"+location.pathname,JSON.stringify(b))}catch(c){}},fnStateSaveParams:null,iStateDuration:7200,iDeferLoading:null,iDisplayLength:10,iDisplayStart:0,iTabIndex:0,oClasses:{},oLanguage:{oAria:{sSortAscending:\": activate to sort column ascending\",sSortDescending:\": activate to sort column descending\"},oPaginate:{sFirst:\"First\",sLast:\"Last\",sNext:\"Next\",sPrevious:\"Previous\"},sEmptyTable:\"No data available in table\",sInfo:\"Showing _START_ to _END_ of _TOTAL_ entries\",\nsInfoEmpty:\"Showing 0 to 0 of 0 entries\",sInfoFiltered:\"(filtered from _MAX_ total entries)\",sInfoPostFix:\"\",sDecimal:\"\",sThousands:\",\",sLengthMenu:\"Show _MENU_ entries\",sLoadingRecords:\"Loading...\",sProcessing:\"Processing...\",sSearch:\"Search:\",sSearchPlaceholder:\"\",sUrl:\"\",sZeroRecords:\"No matching records found\"},oSearch:h.extend({},m.models.oSearch),sAjaxDataProp:\"data\",sAjaxSource:null,sDom:\"lfrtip\",searchDelay:null,sPaginationType:\"simple_numbers\",sScrollX:\"\",sScrollXInner:\"\",sScrollY:\"\",sServerMethod:\"GET\",\nrenderer:null,rowId:\"DT_RowId\"};X(m.defaults);m.defaults.column={aDataSort:null,iDataSort:-1,asSorting:[\"asc\",\"desc\"],bSearchable:!0,bSortable:!0,bVisible:!0,fnCreatedCell:null,mData:null,mRender:null,sCellType:\"td\",sClass:\"\",sContentPadding:\"\",sDefaultContent:null,sName:\"\",sSortDataType:\"std\",sTitle:null,sType:null,sWidth:null};X(m.defaults.column);m.models.oSettings={oFeatures:{bAutoWidth:null,bDeferRender:null,bFilter:null,bInfo:null,bLengthChange:null,bPaginate:null,bProcessing:null,bServerSide:null,\nbSort:null,bSortMulti:null,bSortClasses:null,bStateSave:null},oScroll:{bCollapse:null,iBarWidth:0,sX:null,sXInner:null,sY:null},oLanguage:{fnInfoCallback:null},oBrowser:{bScrollOversize:!1,bScrollbarLeft:!1,bBounding:!1,barWidth:0},ajax:null,aanFeatures:[],aoData:[],aiDisplay:[],aiDisplayMaster:[],aIds:{},aoColumns:[],aoHeader:[],aoFooter:[],oPreviousSearch:{},aoPreSearchCols:[],aaSorting:null,aaSortingFixed:[],asStripeClasses:null,asDestroyStripes:[],sDestroyWidth:0,aoRowCallback:[],aoHeaderCallback:[],\naoFooterCallback:[],aoDrawCallback:[],aoRowCreatedCallback:[],aoPreDrawCallback:[],aoInitComplete:[],aoStateSaveParams:[],aoStateLoadParams:[],aoStateLoaded:[],sTableId:\"\",nTable:null,nTHead:null,nTFoot:null,nTBody:null,nTableWrapper:null,bDeferLoading:!1,bInitialised:!1,aoOpenRows:[],sDom:null,searchDelay:null,sPaginationType:\"two_button\",iStateDuration:0,aoStateSave:[],aoStateLoad:[],oSavedState:null,oLoadedState:null,sAjaxSource:null,sAjaxDataProp:null,bAjaxDataGet:!0,jqXHR:null,json:k,oAjaxData:k,\nfnServerData:null,aoServerParams:[],sServerMethod:null,fnFormatNumber:null,aLengthMenu:null,iDraw:0,bDrawing:!1,iDrawError:-1,_iDisplayLength:10,_iDisplayStart:0,_iRecordsTotal:0,_iRecordsDisplay:0,bJUI:null,oClasses:{},bFiltered:!1,bSorted:!1,bSortCellsTop:null,oInit:null,aoDestroyCallback:[],fnRecordsTotal:function(){return\"ssp\"==y(this)?1*this._iRecordsTotal:this.aiDisplayMaster.length},fnRecordsDisplay:function(){return\"ssp\"==y(this)?1*this._iRecordsDisplay:this.aiDisplay.length},fnDisplayEnd:function(){var a=\nthis._iDisplayLength,b=this._iDisplayStart,c=b+a,d=this.aiDisplay.length,e=this.oFeatures,f=e.bPaginate;return e.bServerSide?!1===f||-1===a?b+d:Math.min(b+a,this._iRecordsDisplay):!f||c>d||-1===a?d:c},oInstance:null,sInstance:null,iTabIndex:0,nScrollHead:null,nScrollFoot:null,aLastSort:[],oPlugins:{},rowIdFn:null,rowId:null};m.ext=v={buttons:{},classes:{},build:\"dt/dt-1.10.12/r-2.1.0\",errMode:\"alert\",feature:[],search:[],selector:{cell:[],column:[],row:[]},internal:{},legacy:{ajax:null},pager:{},renderer:{pageButton:{},\nheader:{}},order:{},type:{detect:[],search:{},order:{}},_unique:0,fnVersionCheck:m.fnVersionCheck,iApiIndex:0,oJUIClasses:{},sVersion:m.version};h.extend(v,{afnFiltering:v.search,aTypes:v.type.detect,ofnSearch:v.type.search,oSort:v.type.order,afnSortData:v.order,aoFeatures:v.feature,oApi:v.internal,oStdClasses:v.classes,oPagination:v.pager});h.extend(m.ext.classes,{sTable:\"dataTable\",sNoFooter:\"no-footer\",sPageButton:\"paginate_button\",sPageButtonActive:\"current\",sPageButtonDisabled:\"disabled\",sStripeOdd:\"odd\",\nsStripeEven:\"even\",sRowEmpty:\"dataTables_empty\",sWrapper:\"dataTables_wrapper\",sFilter:\"dataTables_filter\",sInfo:\"dataTables_info\",sPaging:\"dataTables_paginate paging_\",sLength:\"dataTables_length\",sProcessing:\"dataTables_processing\",sSortAsc:\"sorting_asc\",sSortDesc:\"sorting_desc\",sSortable:\"sorting\",sSortableAsc:\"sorting_asc_disabled\",sSortableDesc:\"sorting_desc_disabled\",sSortableNone:\"sorting_disabled\",sSortColumn:\"sorting_\",sFilterInput:\"\",sLengthSelect:\"\",sScrollWrapper:\"dataTables_scroll\",sScrollHead:\"dataTables_scrollHead\",\nsScrollHeadInner:\"dataTables_scrollHeadInner\",sScrollBody:\"dataTables_scrollBody\",sScrollFoot:\"dataTables_scrollFoot\",sScrollFootInner:\"dataTables_scrollFootInner\",sHeaderTH:\"\",sFooterTH:\"\",sSortJUIAsc:\"\",sSortJUIDesc:\"\",sSortJUI:\"\",sSortJUIAscAllowed:\"\",sSortJUIDescAllowed:\"\",sSortJUIWrapper:\"\",sSortIcon:\"\",sJUIHeader:\"\",sJUIFooter:\"\"});var Ca=\"\",Ca=\"\",H=Ca+\"ui-state-default\",ia=Ca+\"css_right ui-icon ui-icon-\",Xb=Ca+\"fg-toolbar ui-toolbar ui-widget-header ui-helper-clearfix\";h.extend(m.ext.oJUIClasses,\nm.ext.classes,{sPageButton:\"fg-button ui-button \"+H,sPageButtonActive:\"ui-state-disabled\",sPageButtonDisabled:\"ui-state-disabled\",sPaging:\"dataTables_paginate fg-buttonset ui-buttonset fg-buttonset-multi ui-buttonset-multi paging_\",sSortAsc:H+\" sorting_asc\",sSortDesc:H+\" sorting_desc\",sSortable:H+\" sorting\",sSortableAsc:H+\" sorting_asc_disabled\",sSortableDesc:H+\" sorting_desc_disabled\",sSortableNone:H+\" sorting_disabled\",sSortJUIAsc:ia+\"triangle-1-n\",sSortJUIDesc:ia+\"triangle-1-s\",sSortJUI:ia+\"carat-2-n-s\",\nsSortJUIAscAllowed:ia+\"carat-1-n\",sSortJUIDescAllowed:ia+\"carat-1-s\",sSortJUIWrapper:\"DataTables_sort_wrapper\",sSortIcon:\"DataTables_sort_icon\",sScrollHead:\"dataTables_scrollHead \"+H,sScrollFoot:\"dataTables_scrollFoot \"+H,sHeaderTH:H,sFooterTH:H,sJUIHeader:Xb+\" ui-corner-tl ui-corner-tr\",sJUIFooter:Xb+\" ui-corner-bl ui-corner-br\"});var Mb=m.ext.pager;h.extend(Mb,{simple:function(){return[\"previous\",\"next\"]},full:function(){return[\"first\",\"previous\",\"next\",\"last\"]},numbers:function(a,b){return[ya(a,\nb)]},simple_numbers:function(a,b){return[\"previous\",ya(a,b),\"next\"]},full_numbers:function(a,b){return[\"first\",\"previous\",ya(a,b),\"next\",\"last\"]},_numbers:ya,numbers_length:7});h.extend(!0,m.ext.renderer,{pageButton:{_:function(a,b,c,d,e,f){var g=a.oClasses,j=a.oLanguage.oPaginate,i=a.oLanguage.oAria.paginate||{},k,l,m=0,p=function(b,d){var o,r,u,s,v=function(b){Ta(a,b.data.action,true)};o=0;for(r=d.length;o<r;o++){s=d[o];if(h.isArray(s)){u=h(\"<\"+(s.DT_el||\"div\")+\"/>\").appendTo(b);p(u,s)}else{k=null;\nl=\"\";switch(s){case \"ellipsis\":b.append('<span class=\"ellipsis\">&#x2026;</span>');break;case \"first\":k=j.sFirst;l=s+(e>0?\"\":\" \"+g.sPageButtonDisabled);break;case \"previous\":k=j.sPrevious;l=s+(e>0?\"\":\" \"+g.sPageButtonDisabled);break;case \"next\":k=j.sNext;l=s+(e<f-1?\"\":\" \"+g.sPageButtonDisabled);break;case \"last\":k=j.sLast;l=s+(e<f-1?\"\":\" \"+g.sPageButtonDisabled);break;default:k=s+1;l=e===s?g.sPageButtonActive:\"\"}if(k!==null){u=h(\"<a>\",{\"class\":g.sPageButton+\" \"+l,\"aria-controls\":a.sTableId,\"aria-label\":i[s],\n\"data-dt-idx\":m,tabindex:a.iTabIndex,id:c===0&&typeof s===\"string\"?a.sTableId+\"_\"+s:null}).html(k).appendTo(b);Wa(u,{action:s},v);m++}}}},r;try{r=h(b).find(I.activeElement).data(\"dt-idx\")}catch(o){}p(h(b).empty(),d);r&&h(b).find(\"[data-dt-idx=\"+r+\"]\").focus()}}});h.extend(m.ext.type.detect,[function(a,b){var c=b.oLanguage.sDecimal;return Za(a,c)?\"num\"+c:null},function(a){if(a&&!(a instanceof Date)&&(!ac.test(a)||!bc.test(a)))return null;var b=Date.parse(a);return null!==b&&!isNaN(b)||M(a)?\"date\":\nnull},function(a,b){var c=b.oLanguage.sDecimal;return Za(a,c,!0)?\"num-fmt\"+c:null},function(a,b){var c=b.oLanguage.sDecimal;return Rb(a,c)?\"html-num\"+c:null},function(a,b){var c=b.oLanguage.sDecimal;return Rb(a,c,!0)?\"html-num-fmt\"+c:null},function(a){return M(a)||\"string\"===typeof a&&-1!==a.indexOf(\"<\")?\"html\":null}]);h.extend(m.ext.type.search,{html:function(a){return M(a)?a:\"string\"===typeof a?a.replace(Ob,\" \").replace(Aa,\"\"):\"\"},string:function(a){return M(a)?a:\"string\"===typeof a?a.replace(Ob,\n\" \"):a}});var za=function(a,b,c,d){if(0!==a&&(!a||\"-\"===a))return-Infinity;b&&(a=Qb(a,b));a.replace&&(c&&(a=a.replace(c,\"\")),d&&(a=a.replace(d,\"\")));return 1*a};h.extend(v.type.order,{\"date-pre\":function(a){return Date.parse(a)||0},\"html-pre\":function(a){return M(a)?\"\":a.replace?a.replace(/<.*?>/g,\"\").toLowerCase():a+\"\"},\"string-pre\":function(a){return M(a)?\"\":\"string\"===typeof a?a.toLowerCase():!a.toString?\"\":a.toString()},\"string-asc\":function(a,b){return a<b?-1:a>b?1:0},\"string-desc\":function(a,\nb){return a<b?1:a>b?-1:0}});db(\"\");h.extend(!0,m.ext.renderer,{header:{_:function(a,b,c,d){h(a.nTable).on(\"order.dt.DT\",function(e,f,g,h){if(a===f){e=c.idx;b.removeClass(c.sSortingClass+\" \"+d.sSortAsc+\" \"+d.sSortDesc).addClass(h[e]==\"asc\"?d.sSortAsc:h[e]==\"desc\"?d.sSortDesc:c.sSortingClass)}})},jqueryui:function(a,b,c,d){h(\"<div/>\").addClass(d.sSortJUIWrapper).append(b.contents()).append(h(\"<span/>\").addClass(d.sSortIcon+\" \"+c.sSortingClassJUI)).appendTo(b);h(a.nTable).on(\"order.dt.DT\",function(e,\nf,g,h){if(a===f){e=c.idx;b.removeClass(d.sSortAsc+\" \"+d.sSortDesc).addClass(h[e]==\"asc\"?d.sSortAsc:h[e]==\"desc\"?d.sSortDesc:c.sSortingClass);b.find(\"span.\"+d.sSortIcon).removeClass(d.sSortJUIAsc+\" \"+d.sSortJUIDesc+\" \"+d.sSortJUI+\" \"+d.sSortJUIAscAllowed+\" \"+d.sSortJUIDescAllowed).addClass(h[e]==\"asc\"?d.sSortJUIAsc:h[e]==\"desc\"?d.sSortJUIDesc:c.sSortingClassJUI)}})}}});var Yb=function(a){return\"string\"===typeof a?a.replace(/</g,\"&lt;\").replace(/>/g,\"&gt;\").replace(/\"/g,\"&quot;\"):a};m.render={number:function(a,\nb,c,d,e){return{display:function(f){if(\"number\"!==typeof f&&\"string\"!==typeof f)return f;var g=0>f?\"-\":\"\",h=parseFloat(f);if(isNaN(h))return Yb(f);f=Math.abs(h);h=parseInt(f,10);f=c?b+(f-h).toFixed(c).substring(2):\"\";return g+(d||\"\")+h.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g,a)+f+(e||\"\")}}},text:function(){return{display:Yb}}};h.extend(m.ext.internal,{_fnExternApiFunc:Nb,_fnBuildAjax:ra,_fnAjaxUpdate:lb,_fnAjaxParameters:ub,_fnAjaxUpdateDraw:vb,_fnAjaxDataSrc:sa,_fnAddColumn:Ea,_fnColumnOptions:ja,\n_fnAdjustColumnSizing:Y,_fnVisibleToColumnIndex:Z,_fnColumnIndexToVisible:$,_fnVisbleColumns:aa,_fnGetColumns:la,_fnColumnTypes:Ga,_fnApplyColumnDefs:ib,_fnHungarianMap:X,_fnCamelToHungarian:K,_fnLanguageCompat:Da,_fnBrowserDetect:gb,_fnAddData:N,_fnAddTr:ma,_fnNodeToDataIndex:function(a,b){return b._DT_RowIndex!==k?b._DT_RowIndex:null},_fnNodeToColumnIndex:function(a,b,c){return h.inArray(c,a.aoData[b].anCells)},_fnGetCellData:B,_fnSetCellData:jb,_fnSplitObjNotation:Ja,_fnGetObjectDataFn:Q,_fnSetObjectDataFn:R,\n_fnGetDataMaster:Ka,_fnClearTable:na,_fnDeleteIndex:oa,_fnInvalidate:ca,_fnGetRowElements:Ia,_fnCreateTr:Ha,_fnBuildHead:kb,_fnDrawHead:ea,_fnDraw:O,_fnReDraw:T,_fnAddOptionsHtml:nb,_fnDetectHeader:da,_fnGetUniqueThs:qa,_fnFeatureHtmlFilter:pb,_fnFilterComplete:fa,_fnFilterCustom:yb,_fnFilterColumn:xb,_fnFilter:wb,_fnFilterCreateSearch:Pa,_fnEscapeRegex:Qa,_fnFilterData:zb,_fnFeatureHtmlInfo:sb,_fnUpdateInfo:Cb,_fnInfoMacros:Db,_fnInitialise:ga,_fnInitComplete:ta,_fnLengthChange:Ra,_fnFeatureHtmlLength:ob,\n_fnFeatureHtmlPaginate:tb,_fnPageChange:Ta,_fnFeatureHtmlProcessing:qb,_fnProcessingDisplay:C,_fnFeatureHtmlTable:rb,_fnScrollDraw:ka,_fnApplyToChildren:J,_fnCalculateColumnWidths:Fa,_fnThrottle:Oa,_fnConvertToWidth:Fb,_fnGetWidestNode:Gb,_fnGetMaxLenString:Hb,_fnStringToCss:x,_fnSortFlatten:V,_fnSort:mb,_fnSortAria:Jb,_fnSortListener:Va,_fnSortAttachListener:Ma,_fnSortingClasses:va,_fnSortData:Ib,_fnSaveState:wa,_fnLoadState:Kb,_fnSettingsFromNode:xa,_fnLog:L,_fnMap:E,_fnBindAction:Wa,_fnCallbackReg:z,\n_fnCallbackFire:u,_fnLengthOverflow:Sa,_fnRenderer:Na,_fnDataSource:y,_fnRowAttributes:La,_fnCalculateEnd:function(){}});h.fn.dataTable=m;m.$=h;h.fn.dataTableSettings=m.settings;h.fn.dataTableExt=m.ext;h.fn.DataTable=function(a){return h(this).dataTable(a).api()};h.each(m,function(a,b){h.fn.DataTable[a]=b});return h.fn.dataTable});\n\n\n/*!\n Responsive 2.1.0\n 2014-2016 SpryMedia Ltd - datatables.net/license\n*/\n(function(c){\"function\"===typeof define&&define.amd?define([\"jquery\",\"datatables.net\"],function(l){return c(l,window,document)}):\"object\"===typeof exports?module.exports=function(l,k){l||(l=window);if(!k||!k.fn.dataTable)k=require(\"datatables.net\")(l,k).$;return c(k,l,l.document)}:c(jQuery,window,document)})(function(c,l,k,p){var m=c.fn.dataTable,j=function(a,b){if(!m.versionCheck||!m.versionCheck(\"1.10.3\"))throw\"DataTables Responsive requires DataTables 1.10.3 or newer\";this.s={dt:new m.Api(a),columns:[],\ncurrent:[]};this.s.dt.settings()[0].responsive||(b&&\"string\"===typeof b.details?b.details={type:b.details}:b&&!1===b.details?b.details={type:!1}:b&&!0===b.details&&(b.details={type:\"inline\"}),this.c=c.extend(!0,{},j.defaults,m.defaults.responsive,b),a.responsive=this,this._constructor())};c.extend(j.prototype,{_constructor:function(){var a=this,b=this.s.dt,d=b.settings()[0],e=c(l).width();b.settings()[0]._responsive=this;c(l).on(\"resize.dtr orientationchange.dtr\",m.util.throttle(function(){var b=\nc(l).width();b!==e&&(a._resize(),e=b)}));d.oApi._fnCallbackReg(d,\"aoRowCreatedCallback\",function(e){-1!==c.inArray(!1,a.s.current)&&c(\"td, th\",e).each(function(e){e=b.column.index(\"toData\",e);!1===a.s.current[e]&&c(this).css(\"display\",\"none\")})});b.on(\"destroy.dtr\",function(){b.off(\".dtr\");c(b.table().body()).off(\".dtr\");c(l).off(\"resize.dtr orientationchange.dtr\");c.each(a.s.current,function(b,e){!1===e&&a._setColumnVis(b,!0)})});this.c.breakpoints.sort(function(a,b){return a.width<b.width?1:a.width>\nb.width?-1:0});this._classLogic();this._resizeAuto();d=this.c.details;!1!==d.type&&(a._detailsInit(),b.on(\"column-visibility.dtr\",function(){a._classLogic();a._resizeAuto();a._resize()}),b.on(\"draw.dtr\",function(){a._redrawChildren()}),c(b.table().node()).addClass(\"dtr-\"+d.type));b.on(\"column-reorder.dtr\",function(){a._classLogic();a._resizeAuto();a._resize()});b.on(\"column-sizing.dtr\",function(){a._resizeAuto();a._resize()});b.on(\"init.dtr\",function(){a._resizeAuto();a._resize();c.inArray(false,\na.s.current)&&b.columns.adjust()});this._resize()},_columnsVisiblity:function(a){var b=this.s.dt,d=this.s.columns,e,f,g=d.map(function(a,b){return{columnIdx:b,priority:a.priority}}).sort(function(a,b){return a.priority!==b.priority?a.priority-b.priority:a.columnIdx-b.columnIdx}),h=c.map(d,function(b){return b.auto&&null===b.minWidth?!1:!0===b.auto?\"-\":-1!==c.inArray(a,b.includeIn)}),n=0;e=0;for(f=h.length;e<f;e++)!0===h[e]&&(n+=d[e].minWidth);e=b.settings()[0].oScroll;e=e.sY||e.sX?e.iBarWidth:0;b=\nb.table().container().offsetWidth-e-n;e=0;for(f=h.length;e<f;e++)d[e].control&&(b-=d[e].minWidth);n=!1;e=0;for(f=g.length;e<f;e++){var i=g[e].columnIdx;\"-\"===h[i]&&(!d[i].control&&d[i].minWidth)&&(n||0>b-d[i].minWidth?(n=!0,h[i]=!1):h[i]=!0,b-=d[i].minWidth)}g=!1;e=0;for(f=d.length;e<f;e++)if(!d[e].control&&!d[e].never&&!h[e]){g=!0;break}e=0;for(f=d.length;e<f;e++)d[e].control&&(h[e]=g);-1===c.inArray(!0,h)&&(h[0]=!0);return h},_classLogic:function(){var a=this,b=this.c.breakpoints,d=this.s.dt,e=\nd.columns().eq(0).map(function(a){var b=this.column(a),e=b.header().className,a=d.settings()[0].aoColumns[a].responsivePriority;a===p&&(b=c(b.header()).data(\"priority\"),a=b!==p?1*b:1E4);return{className:e,includeIn:[],auto:!1,control:!1,never:e.match(/\\bnever\\b/)?!0:!1,priority:a}}),f=function(a,b){var d=e[a].includeIn;-1===c.inArray(b,d)&&d.push(b)},g=function(c,d,i,g){if(i)if(\"max-\"===i){g=a._find(d).width;d=0;for(i=b.length;d<i;d++)b[d].width<=g&&f(c,b[d].name)}else if(\"min-\"===i){g=a._find(d).width;\nd=0;for(i=b.length;d<i;d++)b[d].width>=g&&f(c,b[d].name)}else{if(\"not-\"===i){d=0;for(i=b.length;d<i;d++)-1===b[d].name.indexOf(g)&&f(c,b[d].name)}}else e[c].includeIn.push(d)};e.each(function(a,e){for(var d=a.className.split(\" \"),f=!1,j=0,l=d.length;j<l;j++){var k=c.trim(d[j]);if(\"all\"===k){f=!0;a.includeIn=c.map(b,function(a){return a.name});return}if(\"none\"===k||a.never){f=!0;return}if(\"control\"===k){f=!0;a.control=!0;return}c.each(b,function(a,b){var d=b.name.split(\"-\"),c=k.match(RegExp(\"(min\\\\-|max\\\\-|not\\\\-)?(\"+\nd[0]+\")(\\\\-[_a-zA-Z0-9])?\"));c&&(f=!0,c[2]===d[0]&&c[3]===\"-\"+d[1]?g(e,b.name,c[1],c[2]+c[3]):c[2]===d[0]&&!c[3]&&g(e,b.name,c[1],c[2]))})}f||(a.auto=!0)});this.s.columns=e},_detailsDisplay:function(a,b){var d=this,e=this.s.dt,f=this.c.details;if(f&&!1!==f.type){var g=f.display(a,b,function(){return f.renderer(e,a[0],d._detailsObj(a[0]))});(!0===g||!1===g)&&c(e.table().node()).triggerHandler(\"responsive-display.dt\",[e,a,g,b])}},_detailsInit:function(){var a=this,b=this.s.dt,d=this.c.details;\"inline\"===\nd.type&&(d.target=\"td:first-child, th:first-child\");b.on(\"draw.dtr\",function(){a._tabIndexes()});a._tabIndexes();c(b.table().body()).on(\"keyup.dtr\",\"td, th\",function(a){a.keyCode===13&&c(this).data(\"dtr-keyboard\")&&c(this).click()});var e=d.target;c(b.table().body()).on(\"click.dtr mousedown.dtr mouseup.dtr\",\"string\"===typeof e?e:\"td, th\",function(d){if(c(b.table().node()).hasClass(\"collapsed\")&&b.row(c(this).closest(\"tr\")).length){if(typeof e===\"number\"){var g=e<0?b.columns().eq(0).length+e:e;if(b.cell(this).index().column!==\ng)return}g=b.row(c(this).closest(\"tr\"));d.type===\"click\"?a._detailsDisplay(g,false):d.type===\"mousedown\"?c(this).css(\"outline\",\"none\"):d.type===\"mouseup\"&&c(this).blur().css(\"outline\",\"\")}})},_detailsObj:function(a){var b=this,d=this.s.dt;return c.map(this.s.columns,function(e,c){if(!e.never&&!e.control)return{title:d.settings()[0].aoColumns[c].sTitle,data:d.cell(a,c).render(b.c.orthogonal),hidden:d.column(c).visible()&&!b.s.current[c],columnIndex:c,rowIndex:a}})},_find:function(a){for(var b=this.c.breakpoints,\nd=0,c=b.length;d<c;d++)if(b[d].name===a)return b[d]},_redrawChildren:function(){var a=this,b=this.s.dt;b.rows({page:\"current\"}).iterator(\"row\",function(c,e){b.row(e);a._detailsDisplay(b.row(e),!0)})},_resize:function(){var a=this,b=this.s.dt,d=c(l).width(),e=this.c.breakpoints,f=e[0].name,g=this.s.columns,h,j=this.s.current.slice();for(h=e.length-1;0<=h;h--)if(d<=e[h].width){f=e[h].name;break}var i=this._columnsVisiblity(f);this.s.current=i;e=!1;h=0;for(d=g.length;h<d;h++)if(!1===i[h]&&!g[h].never&&\n!g[h].control){e=!0;break}c(b.table().node()).toggleClass(\"collapsed\",e);var k=!1;b.columns().eq(0).each(function(b,c){i[c]!==j[c]&&(k=!0,a._setColumnVis(b,i[c]))});k&&(this._redrawChildren(),c(b.table().node()).trigger(\"responsive-resize.dt\",[b,this.s.current]))},_resizeAuto:function(){var a=this.s.dt,b=this.s.columns;if(this.c.auto&&-1!==c.inArray(!0,c.map(b,function(a){return a.auto}))){a.table().node();var d=a.table().node().cloneNode(!1),e=c(a.table().header().cloneNode(!1)).appendTo(d),f=c(a.table().body()).clone(!1,\n!1).empty().appendTo(d),g=a.columns().header().filter(function(b){return a.column(b).visible()}).to$().clone(!1).css(\"display\",\"table-cell\");c(f).append(c(a.rows({page:\"current\"}).nodes()).clone(!1)).find(\"th, td\").css(\"display\",\"\");if(f=a.table().footer()){var f=c(f.cloneNode(!1)).appendTo(d),h=a.columns().footer().filter(function(b){return a.column(b).visible()}).to$().clone(!1).css(\"display\",\"table-cell\");c(\"<tr/>\").append(h).appendTo(f)}c(\"<tr/>\").append(g).appendTo(e);\"inline\"===this.c.details.type&&\nc(d).addClass(\"dtr-inline collapsed\");c(d).find(\"[name]\").removeAttr(\"name\");d=c(\"<div/>\").css({width:1,height:1,overflow:\"hidden\"}).append(d);d.insertBefore(a.table().node());g.each(function(c){c=a.column.index(\"fromVisible\",c);b[c].minWidth=this.offsetWidth||0});d.remove()}},_setColumnVis:function(a,b){var d=this.s.dt,e=b?\"\":\"none\";c(d.column(a).header()).css(\"display\",e);c(d.column(a).footer()).css(\"display\",e);d.column(a).nodes().to$().css(\"display\",e)},_tabIndexes:function(){var a=this.s.dt,\nb=a.cells({page:\"current\"}).nodes().to$(),d=a.settings()[0],e=this.c.details.target;b.filter(\"[data-dtr-keyboard]\").removeData(\"[data-dtr-keyboard]\");c(\"number\"===typeof e?\":eq(\"+e+\")\":e,a.rows({page:\"current\"}).nodes()).attr(\"tabIndex\",d.iTabIndex).data(\"dtr-keyboard\",1)}});j.breakpoints=[{name:\"desktop\",width:Infinity},{name:\"tablet-l\",width:1024},{name:\"tablet-p\",width:768},{name:\"mobile-l\",width:480},{name:\"mobile-p\",width:320}];j.display={childRow:function(a,b,d){if(b){if(c(a.node()).hasClass(\"parent\"))return a.child(d(),\n\"child\").show(),!0}else{if(a.child.isShown())return a.child(!1),c(a.node()).removeClass(\"parent\"),!1;a.child(d(),\"child\").show();c(a.node()).addClass(\"parent\");return!0}},childRowImmediate:function(a,b,d){if(!b&&a.child.isShown()||!a.responsive.hasHidden())return a.child(!1),c(a.node()).removeClass(\"parent\"),!1;a.child(d(),\"child\").show();c(a.node()).addClass(\"parent\");return!0},modal:function(a){return function(b,d,e){if(d)c(\"div.dtr-modal-content\").empty().append(e());else{var f=function(){g.remove();\nc(k).off(\"keypress.dtr\")},g=c('<div class=\"dtr-modal\"/>').append(c('<div class=\"dtr-modal-display\"/>').append(c('<div class=\"dtr-modal-content\"/>').append(e())).append(c('<div class=\"dtr-modal-close\">&times;</div>').click(function(){f()}))).append(c('<div class=\"dtr-modal-background\"/>').click(function(){f()})).appendTo(\"body\");c(k).on(\"keyup.dtr\",function(a){27===a.keyCode&&(a.stopPropagation(),f())})}a&&a.header&&c(\"div.dtr-modal-content\").prepend(\"<h2>\"+a.header(b)+\"</h2>\")}}};j.renderer={listHidden:function(){return function(a,\nb,d){return(a=c.map(d,function(a){return a.hidden?'<li data-dtr-index=\"'+a.columnIndex+'\" data-dt-row=\"'+a.rowIndex+'\" data-dt-column=\"'+a.columnIndex+'\"><span class=\"dtr-title\">'+a.title+'</span> <span class=\"dtr-data\">'+a.data+\"</span></li>\":\"\"}).join(\"\"))?c('<ul data-dtr-index=\"'+b+'\"/>').append(a):!1}},tableAll:function(a){a=c.extend({tableClass:\"\"},a);return function(b,d,e){b=c.map(e,function(a){return'<tr data-dt-row=\"'+a.rowIndex+'\" data-dt-column=\"'+a.columnIndex+'\"><td>'+a.title+\":</td> <td>\"+\na.data+\"</td></tr>\"}).join(\"\");return c('<table class=\"'+a.tableClass+'\" width=\"100%\"/>').append(b)}}};j.defaults={breakpoints:j.breakpoints,auto:!0,details:{display:j.display.childRow,renderer:j.renderer.listHidden(),target:0,type:\"inline\"},orthogonal:\"display\"};var o=c.fn.dataTable.Api;o.register(\"responsive()\",function(){return this});o.register(\"responsive.index()\",function(a){a=c(a);return{column:a.data(\"dtr-index\"),row:a.parent().data(\"dtr-index\")}});o.register(\"responsive.rebuild()\",function(){return this.iterator(\"table\",\nfunction(a){a._responsive&&a._responsive._classLogic()})});o.register(\"responsive.recalc()\",function(){return this.iterator(\"table\",function(a){a._responsive&&(a._responsive._resizeAuto(),a._responsive._resize())})});o.register(\"responsive.hasHidden()\",function(){var a=this.context[0];return a._responsive?-1!==c.inArray(!1,a._responsive.s.current):!1});j.version=\"2.1.0\";c.fn.dataTable.Responsive=j;c.fn.DataTable.Responsive=j;c(k).on(\"preInit.dt.dtr\",function(a,b){if(\"dt\"===a.namespace&&(c(b.nTable).hasClass(\"responsive\")||\nc(b.nTable).hasClass(\"dt-responsive\")||b.oInit.responsive||m.defaults.responsive)){var d=b.oInit.responsive;!1!==d&&new j(b,c.isPlainObject(d)?d:{})}});return j});\n\n","/***\n* ██████╗  █████╗ ██████╗      ██████╗██╗  ██╗ █████╗ ██████╗ ████████╗\n* ██╔══██╗██╔══██╗██╔══██╗    ██╔════╝██║  ██║██╔══██╗██╔══██╗╚══██╔══╝\n* ██████╔╝███████║██████╔╝    ██║     ███████║███████║██████╔╝   ██║\n* ██╔══██╗██╔══██║██╔══██╗    ██║     ██╔══██║██╔══██║██╔══██╗   ██║\n* ██████╔╝██║  ██║██║  ██║    ╚██████╗██║  ██║██║  ██║██║  ██║   ██║\n* ╚═════╝ ╚═╝  ╚═╝╚═╝  ╚═╝     ╚═════╝╚═╝  ╚═╝╚═╝  ╚═╝╚═╝  ╚═╝   ╚═╝\n*\n*      ____   _                   _    _\n*     |  _ \\ (_) _ __  ___   ___ | |_ (_)__   __ ___\n*     | | | || || '__|/ _ \\ / __|| __|| |\\ \\ / // _ \\\n*     | |_| || || |  |  __/| (__ | |_ | | \\ V /|  __/\n*     |____/ |_||_|   \\___| \\___| \\__||_|  \\_/  \\___|\n*\n*    This directive renders a bar chart.\n*/\n\nPARTICLE.directive('smartChart', function ($parse, $window, $timeout) {\n\n  /* Usage:\n    1. <needle-chart></needle-chart> is semantically\n\n    Attr Params:\n      1. config\n      2. datasets*/\n\n    var directiveDefinitionObject = {\n        //Restrict use to an element\n        restrict: 'E',\n        //Do NOT overwrite our directive declaration in the HTML mark-up\n        replace: false,\n        //Chart data and config passed thru attributes\n        scope: {\n            config: '=',\n            datasets: \"=\",\n            colors: \"=\",\n            percentcomplete: \"=\",\n            successpercent: \"=\",\n            max:\"=\",\n            min:\"=\",\n            mockup:\"=\",\n            index:\"=\"\n        },\n    link: function (scope, element, attrs) {\n        var drawn = 0;\n\n    $timeout(function() {\n        if (element.parent().height()) {\n            if(drawn===0){\n                drawMe();\n                drawn=1;\n            }\n        }\n    },\n    1);\n\n    var drawMe = function(indexval) {\n\n      console.log(\"BARCHART DARW\");\n        if (indexval === null) {\n            return null;\n        }\n        var width, height, dataset, layers;\n\n        /***\n         *    DEFAULT\n         *          _                          _              _    _    _\n         *     ___ |_| ___  ___    ___  ___  _| |   ___  ___ | |_ | |_ |_| ___  ___  ___\n         *    |_ -|| ||- _|| -_|  | .'||   || . |  |_ -|| -_||  _||  _|| ||   || . ||_ -|\n         *    |___||_||___||___|  |__,||_|_||___|  |___||___||_|  |_|  |_||_|_||_  ||___|\n         *                                                                     |___|\n         *\n\n                  chartInset  :: istance from the edge of the drawn SVG\n                  margin      :: standard top, right...... in pixels - no being used at moment....\n                  barWidth    :: thickness/width of bar in pixels, might make this a percent in the future...\n                  successIndicatorDegWidth      :: the number of degrees the success indicator should span from its start point\n                                                :: set to 0 to make it go to the very end of the chart\n\n          **********************************************/\n          var config = {\n              chartInset:0,\n              hasSuccessIndicator:true,\n              hasBandIndicator:false,\n              margin: {\n                  top: 20,\n                  right: 20,\n                  bottom: 60,\n                  left: 60\n              },\n              barWidth:10,\n              widthPercentSize:1.1,\n              needLength:1,\n              colors: {\n                  primary_fill: \"color-pewter\",\n                  color_2: \"boldorange-0-fade-1\",\n                  success: \"color-bluepuddy-0-fade-5\",\n                  needle: \"color-pewter-0-fade-0\",\n                  bg: \"color-white-6-fade-8\",\n                  legend:\"color-bluepuddy-8-fade-0\"\n              },\n              max:100,\n              min:0\n          }; // End config\n\n          /***\n          *                                     _                _       ___            _  _\n          *     ___  _ _  ___  ___  _ _ _  ___ |_|| |_  ___    _| | ___ |  _| ___  _ _ | || |_  ___\n          *    | . || | || -_||  _|| | | ||  _|| ||  _|| -_|  | . || -_||  _|| .'|| | || ||  _||_ -|\n          *    |___| \\_/ |___||_|  |_____||_|  |_||_|  |___|  |___||___||_|  |__,||___||_||_|  |___|\n          *\n          */\n\n          if (scope.config !== undefined){\n              Object.keys(scope.config).forEach(function(key,index) {\n                  config[key] = scope.config[key];\n              });\n          }\n\n          /***\n          *                 _                                         _\n          *     _____  ___ |_| ___    ___  ___  ___  ___  ___  ___  _| | _ _  ___  ___\n          *    |     || .'|| ||   |  | . ||  _|| . ||  _|| -_|| -_|| . || | ||  _|| -_|\n          *    |_|_|_||__,||_||_|_|  |  _||_|  |___||___||___||___||___||___||_|  |___|\n          *                          |_|\n          */\n\n          /***\n          *\n          *     ___\n          *    |_  |\n          *     _| |_  _\n          *    |_____||_|   Select the directive element to push our SVG into:\n          *\n          */\n\n          el = d3.select(element[0]);\n\n          /***\n          *\n          *     ___\n          *    |_  |\n          *    |  _| _     Calculate the width of the width and height of the chart\n          *    |___||_|    Height is fixed to 200, width varies with parent element width\n          *\n          */\n\n          width = element[0].parentElement.clientWidth;\n          height = 200;\n\n          /***\n          *     ___\n          *    |_  |\n          *    |_  | _\n          *    |___||_|    Prepare dataset to be used by D3\n          *                Update this section to match updated dataset\n          */\n\n          dataset = scope.datasets;\n          var spending = [\"DME\", \"OM\"];\n          var parseDate = d3.time.format(\"%m/%Y\").parse;\n\n              // Function below establishes start and end dates for the graph and removes\n              // the values that fall outside the range. It also parses data elements in X and Y\n              // components that will be used for plotting.\n\n\n\n              // Parse the data\n              layers = sub.map(function(d) {\n                  return {x: d.date, y: +d.rating, y0: +0};\n              });\n\n            layers = d3.layout.stack()(spending.map(function(c) {\n                return dataset.map(function(d) {\n                    return {x: d.date, y: d[c]};\n                });\n            }));\n          /***\n          *     ___\n          *    | | |\n          *    |_  | _\n          *      |_||_|    Create Chart Objects: X/Y Scales, Primary Chart Object,\n          *                X/Y Axes, and Data Bars.\n          */\n\n              // Define X Scale\n              xScale = d3.time.scale()\n                  .domain([startdate, enddate])\n                  .range([0 + config.margin.left, width - config.margin.right]);\n\n              // Define Y Scale\n              yScale = d3.scale.linear()\n                  .domain([0, 5])\n                  .range([height-config.margin.bottom, config.margin.top])\n                  .nice();\n\n              var x = d3.scale.ordinal()\n                  .rangeRoundBands([0, width]);\n\n              var y = d3.scale.linear()\n                  .rangeRound([height, 0]);\n\n              var z = d3.scale.category10();\n\n              var chart = el.append(\"svg\")\n                  .attr(\"height\",height)\n                  .attr(\"width\",width)\n                  .attr(\"class\", \"chart\");\n\n              var xAxis = d3.svg.axis()\n                  .scale(x)\n                  .orient(\"bottom\")\n                  .tickFormat(d3.time.format(\"%b\"));\n\n              var yAxis = d3.svg.axis()\n                  .scale(y)\n                  .orient(\"left\");\n\n              var x_axis = chart.append(\"g\") // Draw axes: x axis\n                  .attr(\"id\",\"xaxis\"+indexval)\n                  .attr(\"class\", \"axis x\")\n                  .attr(\"transform\",\"translate(0, \" + (height - config.margin.bottom) + \")\")\n                  .call(xAxis)\n                      .selectAll(\"text\")\n                      .style(\"text-anchor\", function(d) {\n                          if(d.getMonth() !== 0){\n                              return \"middle\";\n                          } else {\n                              return \"start\";\n                          }\n                      })\n                      .attr(\"dy\", \"10px\")\n                      .attr(\"transform\", function(d) {\n                          if(d.getMonth() !== 0){\n                              return \"translate(\" + xtickdist/2 + \", 0)\";\n                          }\n                      })\n                      .style(\"font-weight\", function(d) {\n                          if(d.getMonth() === 0){\n                              return \"bold\";\n                          }\n                      });\n\n              var y_axis = chart.append(\"g\") // Draw axes: y axis\n                  .attr(\"id\",\"yaxis\"+indexval)\n                  .attr(\"class\", \"axis y\")\n                  .attr(\"transform\",\"translate(\" + config.margin.left + \",0)\")\n                  .call(yAxis)\n                      .selectAll(\"text\")\n                      .attr(\"transform\",\"translate(0, \" + ytickdist/2 + \")\")\n                      .style(\"text-anchor\", \"middle\")\n                      .text(function(d) {\n                          if(d == \"0\"){\n                              return null;\n                          } else {\n                              return d;\n                          }\n                      });\n              var yTick = (height - config.margin.top - config.margin.bottom)/yticks;\n              console.log(yTick);\n              d3.select(\"#yaxis\"+indexval)\n                  .append(\"text\")\n                  .attr(\"x\", (-height + config.margin.bottom + config.margin.top)/2 - config.margin.top)\n                  .attr(\"y\", -config.margin.left/2)\n                  .attr(\"transform\", \"rotate(-90)\")\n                  .attr(\"text-anchor\", \"middle\")\n                  .style(\"font-weight\", \"bold\")\n                  .text(\"Rating\");\n\n              d3.select(\"#xaxis\"+indexval)\n                  .append(\"text\")\n                  .attr(\"y\", 50)\n                  .attr(\"x\", (0.5 * width))\n                  .attr(\"text-anchor\", \"middle\")\n                  .style(\"font-weight\", \"bold\")\n                  .text(\"Submission Date\");\n\n              var bars = chart.selectAll(\"rect\") // Create Bars\n                  .data(layers)\n                  .enter()\n                  .append(\"rect\")\n                      .attr(\"x\",function(d){\n                          return xScale(d.x);\n                      })\n                      .attr(\"y\", function(d) {\n                          return yScale(d.y0 + d.y);\n                      })\n                      .attr(\"width\", config.barWidth)\n                      .attr(\"height\", function(d) {\n                          return yScale(d.y0) - yScale(d.y + d.y0);\n                      })\n                      .attr(\"date\", function(d) {\n                          return d.x;\n                      })\n                      .attr(\"rating\", function(d){\n                          return d.y;\n                      })\n                      .style(\"fill\", function(d) {\n                          if(d.y == 3) {\n                              return \"#f78c00\";\n                          } else if (d.y == \"1\" | d.y == \"2\") {\n                              return \"#b30000\";\n                          } else if (d.y == \"4\" | d.y == \"5\") {\n                              return \"#007844\";\n                          } else {\n                              return \"#000\";\n                          }\n                      });\n\n      }; // DrawMe end\n\n          /***\n          *     ___\n          *    |  _|\n          *    |_  | _\n          *    |___||_|    Run code and return visualization (D3) object\n          */\n\n    drawMe();\n    } // link end\n\n  }; // directiveDefinitionObject end\n  return directiveDefinitionObject;\n}); //End Directive","//=============================================\n//***************\n//***********\n//*****\n\n/***\n *    ██████╗ ██╗   ██╗██╗     ██╗     ███████╗████████╗     ██████╗██╗  ██╗ █████╗ ██████╗ ████████╗\n *    ██╔══██╗██║   ██║██║     ██║     ██╔════╝╚══██╔══╝    ██╔════╝██║  ██║██╔══██╗██╔══██╗╚══██╔══╝\n *    ██████╔╝██║   ██║██║     ██║     █████╗     ██║       ██║     ███████║███████║██████╔╝   ██║\n *    ██╔══██╗██║   ██║██║     ██║     ██╔══╝     ██║       ██║     ██╔══██║██╔══██║██╔══██╗   ██║\n *    ██████╔╝╚██████╔╝███████╗███████╗███████╗   ██║       ╚██████╗██║  ██║██║  ██║██║  ██║   ██║\n *    ╚═════╝  ╚═════╝ ╚══════╝╚══════╝╚══════╝   ╚═╝        ╚═════╝╚═╝  ╚═╝╚═╝  ╚═╝╚═╝  ╚═╝   ╚═╝\n *      ____   _                   _    _\n *     |  _ \\ (_) _ __  ___   ___ | |_ (_)__   __ ___\n *     | | | || || '__|/ _ \\ / __|| __|| |\\ \\ / // _ \\\n *     | |_| || || |  |  __/| (__ | |_ | | \\ V /|  __/\n *     |____/ |_||_|   \\___| \\___| \\__||_|  \\_/  \\___|\n *\n *    This directive renders a bullet chart.\n */\n\nPARTICLE.directive('bulletChart', function ($parse, $window, $timeout) {\n    //explicitly creating a directive definition variable\n    //this may look verbose but is good for clarification purposes\n    //in real life you'd want to simply return the object {...}\n    var directiveDefinitionObject = {\n        //We restrict its use to an element\n        //as usually  <bars-chart> is semantically\n        //more understandable\n        restrict: 'E',\n        //this is important,\n        //we don't want to overwrite our directive declaration\n        //in the HTML mark-up\n        replace: true,\n        //our data source would be an array\n        //passed thru chart-data attribute\n      scope: {\n        member: '=',\n        target: \"=\",\n        rangestart: \"=\",\n        rangeend: \"=\",\n        current: \"=\",\n        colors: \"=\",\n        ratio: \"=\",\n        delay: \"=\",\n        alttext:\"=\"\n      },\n        link: function (scope, element, attrs) {\n          //in D3, any selection[0] contains the group\n          //selection[0][0] is the DOM node\n          //but we won't need that this time\n          //a little of magic: setting it's width based\n          //on the data value (d)\n          //and text all with a smooth transition\n\n          //---------------------------------------\n\n          //console.log(attrs)\n          //console.log(scope.member.graph);\n          var drawn = 0;\n          var margin = {top: 20, right: 0, bottom: 30, left: 40}, width, height;\n          var drawDelay = 250;\n          width = element.parent().innerWidth() * 0.98;\n          height = element.parent().innerHeight();//$window.innerHeight * .75 - margin.top - margin.bottom;\n          if (width<150) width = 205;\n          if (height <= width ){  height = width;}\n          height = width;\n\n          // var unregister = scope.$watch(\n          // function() { return element.parent().parent().parent().is(\":visible\"); },\n          // function() {\n          //   $timeout(function() {\n          //\n          //               if (element.parent().height()) {\n          //                 //width = 300;//.6*element.parent().innerWidth(),\n          //                 //height = 300;//.6*element.parent().innerHeight();//$window.innerHeight * .75 - margin.top - margin.bottom;\n          //\n          //                 if(drawn===0){drawMe(width,height);drawn=1;\n          //                 }\n          //               }\n          //           }, 0);\n          //\n          //\n          // });\n\n   $timeout(function() {\n       if (element.parent().height()) {\n         if(drawn===0){drawMe(width,height);drawn=1;\n         }\n       }\n   }, 5000 + scope.delay * drawDelay );\n\n        scope.rangestart = scope.rangestart || 0;\n\n\n        var plainTextFromHTML =  function(text) {\n          return  text ? String(text).replace(/<[^>]+>/gm, '') : '';\n        };\n\n\n        var drawMe = function(width,height) {\n\n          if (scope.rangestart < scope.rangeend) {\n            if(scope.current > scope.rangeend) {\n              scope.current = scope.rangeend;\n            }\n          } else {\n            if(scope.current < scope.rangeend) {\n              scope.current = scope.rangeend;\n            }\n          }\n\n          var w = width,\n              h = height,\n              ah = h / scope.ratio;\n\n          var margins = {\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            texmargin:15\n          },\n          legendPanel = {\n            width: 0\n          },\n\n          dataset = [\n          {\n            name: 'x',\n            data: [{\n              month: 'x',\n              count: scope.rangeend,\n              start:50\n            }]\n          },\n          {\n            name: 'y',\n            data: [{\n              month: 'y',\n              count: scope.current,\n              start:0\n            }]\n          },\n          // {\n //            name: 'z',\n //            data: [{\n //              month: 'z',\n //              count: scope.rangeend * .6,\n //              start:22\n //            }]\n //          }\n          ],\n          series = dataset.map(function (d) {\n            return d.name;\n          });\n          dataset = dataset.map(function (d) {\n            return d.data.map(function (o, i) {\n              // Structure it so that your numeric\n              // axis (the stacked amount) is y\n              return {\n                y: o.count,\n                x: o.month,\n                s: o.start\n              };\n            });\n          });\n          stack = d3.layout.stack();\n\n          stack(dataset);\n\n          dataset = dataset.map(function (group) {\n            return group.map(function (d) {\n              // Invert the x and y values, and y0 becomes x0\n              console.log(\"dataset.map\",d);\n              return {\n                x: d.y,\n                y: d.x,\n                x0: d.y0,\n                start:d.s\n              };\n            });\n          });\n\n\n          //console.log(\"scope.target\",scope.target,\"scope.rangestart\",scope.rangestart,\"scope.rangeend\",scope.rangeend)\n            var svg = d3.select(element[0])\n              .append('svg')\n              .attr(\"viewBox\", \"0 0 \" + w + \" \" + ah + \"\")\n              .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n              .append('g')\n              .attr('transform', 'translate(' + margins.left + ',' + margins.top + ')')\n              .attr('alt',plainTextFromHTML(scope.alttext)),\n            xMax = d3.max(dataset, function (group) {\n              return d3.max(group, function (d) {\n                return d.x + d.x0;\n              });\n            });\n\n           console.log(\"[scope.rangestart, width*.9]\",[scope.rangestart, width * 0.9]);\n\n            var xScale = d3.scale.linear()\n              .domain([scope.rangestart, scope.rangeend])\n              .range([scope.rangestart, width * 0.9]);\n\n            var xScaleRev = d3.scale.linear()\n              .domain([scope.rangeend, scope.rangestart])\n              .range([scope.rangestart, width * 0.9]);\n\n            var months = dataset[0].map(function (d) {\n              return d.y;\n            }),\n            yScale = d3.scale.ordinal()\n              .domain(months)\n              .rangeRoundBands([0, height], 0.5);\n\n            var xAxis = d3.svg.axis()\n              .scale(xScale)\n              .ticks(7)\n              .innerTickSize(-ah);\n\n            var xAxisRev = d3.svg.axis()\n              .scale(xScaleRev)\n              .ticks(7)\n              .innerTickSize(-ah),\n\n            //var colours = d3.scale.category10()\n\n            groups = svg.selectAll('g')\n              .data(dataset)\n              .enter()\n              .append('g')\n              .attr('class', function (d, i) {\n                return  \"bg-\" + scope.colors[i];\n              }),\n\n            rects = groups.selectAll()\n              .data(function (d) {\n                return d;\n              })\n              .enter()\n              .append('rect')\n              .attr('x', 1.5*margins.texmargin)\n              .attr('y', 2 *margins.texmargin)\n              .attr('height', ah - 2 * margins.texmargin)\n              .attr('width', function (d) {\n                return xScale(d.x);\n              }),\n\n            triangles = groups.selectAll('rect');\n\n\n            console.log(\"scope.rangeend = \" + scope.rangeend +\" - scope.target = \"+ scope.target ,Math.abs(scope.rangeend - scope.target));\n            var successBarWidth = 3;\n            if (scope.rangeend != scope.target) {\n              successBarWidth = Math.abs(xScale(scope.target) - xScale(scope.rangeend));\n            } {\n              //successBarWidth = Math.abs(xScale(scope.target) - xScale(scope.rangeend))\n              //scope.target = scope.target * .97\n              Math.abs(xScale(scope.target) - xScale(scope.target * 0.97));\n            }\n\n\n\n            var bar = svg.append('g');\n            bar.append('rect')\n            .attr('width', successBarWidth )\n            .attr('height', ah)\n            .attr('x', xScale(scope.target) + 1.5*margins.texmargin)\n            .attr('y', 0)\n            .attr('id',\"MU MU ZIPO ZIPO\")\n            .attr('class',\"bg-lillypad-0-fade-6\");\n\n            // .each(function(d) {\n            //   var lb = xScale(d.x) - 5,\n            //       mb = xScale(d.x),\n            //       rb = xScale(d.x) + 5,\n            //       pointsTop = lb + \",0 \" + rb + \",0 \" + mb + \",10\",\n            //       pointsBot = lb + \",\" + ah + \" \" + rb + \",\" + ah + \" \" + mb + \",\" + (ah - 10),\n            //       old_rect = this.outerHTML,\n            //       new_rect = '<g>' + old_rect + '<polygon points=\"' + pointsTop + '\"/><polygon points=\"' + pointsBot + '\"/><line x1=\"' + xScale(d.x) + '\" y1=\"0\" x2=\"' + xScale(d.x) + '\" y2=\"' + ah + '\"/></g>';\n            //   $(this).parent().html(new_rect);\n            //   return;\n            // });\n            //\n\n          svg.append('g')\n            .attr('class', 'axis color-white')\n            .call(xAxis);\n\n          svg.selectAll(\".axis line\")\n            .attr(\"transform\", function(d) {\n               return \"translate(\"+ 1.5 * margins.texmargin +\",\" + (ah+1.75*margins.texmargin) + \")\";\n           });\n\n          svg.selectAll(\".axis text\")\n            .attr(\"transform\", function(d) {\n               return \"translate(\" + 1.5 * margins.texmargin + \",\" + margins.texmargin/2 + \")rotate(0)\";\n           });\n\n        };\n      }\n     };\n     return directiveDefinitionObject;\n  });\n","/***\n *     ██████╗ ██████╗ ██╗     ██╗     ███████╗ ██████╗████████╗██╗ ██████╗ ███╗   ██╗\n *    ██╔════╝██╔═══██╗██║     ██║     ██╔════╝██╔════╝╚══██╔══╝██║██╔═══██╗████╗  ██║\n *    ██║     ██║   ██║██║     ██║     █████╗  ██║        ██║   ██║██║   ██║██╔██╗ ██║\n *    ██║     ██║   ██║██║     ██║     ██╔══╝  ██║        ██║   ██║██║   ██║██║╚██╗██║\n *    ╚██████╗╚██████╔╝███████╗███████╗███████╗╚██████╗   ██║   ██║╚██████╔╝██║ ╚████║\n *     ╚═════╝ ╚═════╝ ╚══════╝╚══════╝╚══════╝ ╚═════╝   ╚═╝   ╚═╝ ╚═════╝ ╚═╝  ╚═══╝\n *    ███╗   ███╗███████╗███╗   ███╗██████╗ ███████╗██████╗ ███████╗\n *    ████╗ ████║██╔════╝████╗ ████║██╔══██╗██╔════╝██╔══██╗██╔════╝\n *    ██╔████╔██║█████╗  ██╔████╔██║██████╔╝█████╗  ██████╔╝███████╗\n *    ██║╚██╔╝██║██╔══╝  ██║╚██╔╝██║██╔══██╗██╔══╝  ██╔══██╗╚════██║\n *    ██║ ╚═╝ ██║███████╗██║ ╚═╝ ██║██████╔╝███████╗██║  ██║███████║\n *    ╚═╝     ╚═╝╚══════╝╚═╝     ╚═╝╚═════╝ ╚══════╝╚═╝  ╚═╝╚══════╝\n *      ____   _                   _    _\n *     |  _ \\ (_) _ __  ___   ___ | |_ (_)__   __ ___  ___\n *     | | | || || '__|/ _ \\ / __|| __|| |\\ \\ / // _ \\/ __|\n *     | |_| || || |  |  __/| (__ | |_ | | \\ V /|  __/\\__ \\\n *     |____/ |_||_|   \\___| \\___| \\__||_|  \\_/  \\___||___/\n *\n *    These directives render various structural components of the page,\n *    based on information in the UI object returned by the data source.\n */\n\nPARTICLE.directive('foo', function ($timeout) {\n    return {\n        restrict: 'E',\n        replace: true,\n        transclude: true,\n        scope: {\n            typeclass: \"=\",\n            message: \"=\"\n        },\n        template: '<div class=\"{{typeclass}}\"></div>',\n        link: function (scope, element, attrs) {\n        }\n    };\n});\n\nPARTICLE.directive(\"vBlock\", function() {\n    return {\n        templateUrl: \"/directives/value_block.html\",\n        transclude:true,\n        scope: {\n            lab: \"=?\",\n            value: \"=?\",\n            units: \"=?\",\n            pack: \"=?\",\n            assignto: \"=?\",\n            unitcolor: \"=?\",\n            bgcolor: \"=?\",\n            labelwidth: \"=?\",\n            valuewidth: \"=?\"\n        },\n        link: function(scope, element, attrs, ctrl, transclude) {\n            scope.controlClick = function(evt,obj) {\n                scope.isActive = !scope.isActive;\n            };\n        }\n    };\n});\n\nPARTICLE.directive(\"invHeaderBlock\", function() {\n    return {\n        templateUrl: \"/directives/inv_header_block.html\",\n        transclude:true,\n        scope: {\n            label:\"=?\",\n            value:\"=?\",\n            fade: \"=?\",\n            lgsize: \"=?\",\n            color: \"=?\",\n            labelcolor: \"=?\"\n        }\n    };\n});\n\nPARTICLE.directive(\"projectAlert\", function() {\n    return {\n        templateUrl: \"/directives/project_alert.html\",\n        transclude:true,\n        scope: {\n            label:\"=?\",\n            value:\"=?\",\n            units: \"=?\",\n            flag: \"=?\"\n        }\n    };\n});\n\nPARTICLE.directive(\"uiPod\", function() {\n    return {\n        template: \"\",\n        transclude:true,\n        scope: {\n            pack: \"=\",\n            assignto:\"=\",\n            ui: \"=\"\n        },\n        link: function(scope, element, attrs, ctrl, transclude) {\n            scope[scope.assignto] = scope.pack;\n            //scope.isActive = true;\n            scope.controlClick = function(evt,obj) {\n                scope.isActive = !scope.isActive;\n            };\n            transclude(scope.$new(),function(clone,scope) {\n                element.append(clone);\n            });\n        }\n    };\n});\n\nPARTICLE.directive('collection', function () {\n    return {\n        restrict: \"E\",\n        replace: true,\n        scope: {\n            collection: '=',\n            requirements: \"=\",\n            toggle: '&',\n            myData: '&'\n        },\n        template: \"<div class='row flex'><member ng-repeat='widget in collection' requirements='requirements' member='widget'></member></div>\",\n    };\n});\n\nPARTICLE.directive('member', function ($compile, $rootScope, $timeout) {\n    return {\n        restrict: \"E\",\n        replace: true,\n        scope: {\n            member: '=',\n            requirements: \"=\"\n        },\n        templateUrl: \"directives/item-block.html\",\n        link: function (scope, element, attrs) {\n            var collectionSt = '<collection collection=\"member.widgets\"></collection>';\n            scope.$on(\"message\", function (e, msg) {\n\n                // If I am messaged then I need to toggle myself\n                if (msg[0] == scope.member.id_class) {\n                    scope.member.toggle = !scope.member.toggle;\n                }\n\n                // Futher I also need to turn off all those in my group\n                if (msg[1] == scope.member.group_class && msg[0] != scope.member.id_class) {\n                    scope.member.toggle = 0;\n                }\n\n            });\n\n            if (angular.isArray(scope.member.widgets)) {\n                $compile(collectionSt)(scope, function (cloned, scope) {\n                    element.append(cloned);\n                });\n            }\n        },\n        controller: function ($scope) {\n\n            var initial_state = $scope.member.toggle;\n            $scope.member.toggle = 1;\n\n            $timeout(function () {\n                $scope.member.toggle = initial_state;\n            }, 100);\n\n            $scope.f = function (id) {\n                if (this.member.disable_hide_show !== true) {\n                    if (this.member.hides) {\n                        $rootScope.$broadcast('message', [id, this.member.hides]);\n                    } else {\n                        $rootScope.$broadcast('message', [id, \"LACKAHIDES\"]);\n                    }\n                }\n            };\n\n        }\n\n    };\n});","/***\n *    ██████╗ ██╗███████╗     ██████╗██╗  ██╗ █████╗ ██████╗ ████████╗\n *    ██╔══██╗██║██╔════╝    ██╔════╝██║  ██║██╔══██╗██╔══██╗╚══██╔══╝\n *    ██████╔╝██║█████╗      ██║     ███████║███████║██████╔╝   ██║\n *    ██╔═══╝ ██║██╔══╝      ██║     ██╔══██║██╔══██║██╔══██╗   ██║\n *    ██║     ██║███████╗    ╚██████╗██║  ██║██║  ██║██║  ██║   ██║\n *    ╚═╝     ╚═╝╚══════╝     ╚═════╝╚═╝  ╚═╝╚═╝  ╚═╝╚═╝  ╚═╝   ╚═╝\n *      ____   _                   _    _\n *     |  _ \\ (_) _ __  ___   ___ | |_ (_)__   __ ___\n *     | | | || || '__|/ _ \\ / __|| __|| |\\ \\ / // _ \\\n *     | |_| || || |  |  __/| (__ | |_ | | \\ V /|  __/\n *     |____/ |_||_|   \\___| \\___| \\__||_|  \\_/  \\___|\n *\n *    This directive renders a donut chart.\n */\n\nPARTICLE.directive('donutChart', function ($parse, $window, $timeout) {\n    //explicitly creating a directive definition variable\n    //this may look verbose but is good for clarification purposes\n    //in real life you'd want to simply return the object {...}\n    var directiveDefinitionObject = {\n        //We restrict its use to an element\n        //as usually  <bars-chart> is semantically\n        //more understandable\n        restrict: 'E',\n        //this is important,\n        //we don't want to overwrite our directive declaration\n        //in the HTML mark-up\n        replace: false,\n        //our data source would be an array\n        //passed thru chart-data attribute\n        scope: {data: '=chartData', whoamiin: '=whoamiin', member: '=member'},\n        link: function (scope, element, attrs) {\n            //in D3, any selection[0] contains the group\n            //selection[0][0] is the DOM node\n            //but we won't need that this time\n            //a little of magic: setting it's width based\n            //on the data value (d)\n            //and text all with a smooth transition\n\n            //---------------------------------------\n\n            //console.log(attrs)\n            //console.log(scope.member);\n            var drawn = 0;\n            var margin = {top: 20, right: 0, bottom: 30, left: 40}, width, height;\n            width = element.parent().innerWidth() * 0.98;\n            height = element.parent().innerHeight();//$window.innerHeight * 0.75 - margin.top - margin.bottom;\n            if (width < 150) width = 205;\n            if (height <= width) {\n                height = width;\n            }\n            height = width;\n            //console.log(\"progressMeter\",width,height);\n\n            var unregister = scope.$watch(\n                function () {\n                    return element.parent().parent().parent().is(\":visible\");\n                },\n                function () {\n                    $timeout(function () {\n\n                        if (element.parent().height()) {\n                            //width = 300;//.6*element.parent().innerWidth(),\n                            //height = 300;//.6*element.parent().innerHeight();//$window.innerHeight * .75 - margin.top - margin.bottom;\n\n                            if (drawn === 0) {\n                                drawMe();\n                                drawn = 1;\n                            }\n                        }\n                    }, 0);\n\n\n                });\n\n\n            var drawMe = function () {\n\n                var dataset = [100, 90, 80, 70, 60, 50];\n                var radius = Math.min(width, height) / 2;\n\n                var w = width,\n                    h = height,\n                    tw = ( w / 2 ) * ( w / h ),\n                    th = ( h / 2 );\n\n                var svg = d3.select(element[0])\n                    .append(\"svg\")\n                    .attr(\"viewBox\", \"0 0 \" + ( tw * 2 ) + \" \" + ( th * 2 ) + \"\")\n                    .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n                    .append(\"g\")\n                    .attr(\"transform\", \"translate(\" + tw + \",\" + th + \")\");\n                var color = d3.scale.ordinal()\n                    .range([\"#009DD9\", \"#FF8300\", \"#B21DAC\", \"#D70036\", \"#707276\", \"#000000\"]);\n                var pie = d3.layout.pie()\n                    .sort(null);\n                var arc = d3.svg.arc()\n                    .innerRadius(( width / 2 ) - ( width / 4 ))\n                    .outerRadius(( width / 2 ));\n                var path = svg.selectAll(\"path\")\n                    .data(pie(dataset))\n                    .enter().append(\"path\")\n                    .attr(\"fill\", function (d, i) {\n                        return color(i);\n                    })\n                    .attr(\"d\", arc)\n                    .attr('class', function (d, i) {\n                        return 'fill-color-' + i;\n                    })\n                    .each(function (d) {\n                        this._current = d;\n                    }); // store the initial values\n                function change(newdata) {\n                    path = path.data(pie(newdata)); // update the data\n                    path.transition().duration(750).attrTween(\"d\", arcTween); // redraw the arcs\n                }\n\n                // Store the displayed angles in _current.\n                // Then, interpolate from _current to the new angles.\n                // During the transition, _current is updated in-place by d3.interpolate.\n                function arcTween(a) {\n                    var i = d3.interpolate(this._current, a);\n                    this._current = i(0);\n                    return function (t) {\n                        return arc(i(t));\n                    };\n                }\n\n            };\n        }\n    };\n    return directiveDefinitionObject;\n});\n","/***\n *    ███████╗██╗██╗     ██╗          ██████╗██╗  ██╗ █████╗ ██████╗ ████████╗\n *    ██╔════╝██║██║     ██║         ██╔════╝██║  ██║██╔══██╗██╔══██╗╚══██╔══╝\n *    █████╗  ██║██║     ██║         ██║     ███████║███████║██████╔╝   ██║\n *    ██╔══╝  ██║██║     ██║         ██║     ██╔══██║██╔══██║██╔══██╗   ██║\n *    ██║     ██║███████╗███████╗    ╚██████╗██║  ██║██║  ██║██║  ██║   ██║\n *    ╚═╝     ╚═╝╚══════╝╚══════╝     ╚═════╝╚═╝  ╚═╝╚═╝  ╚═╝╚═╝  ╚═╝   ╚═╝\n *      ____   _                   _    _\n *     |  _ \\ (_) _ __  ___   ___ | |_ (_)__   __ ___\n *     | | | || || '__|/ _ \\ / __|| __|| |\\ \\ / // _ \\\n *     | |_| || || |  |  __/| (__ | |_ | | \\ V /|  __/\n *     |____/ |_||_|   \\___| \\___| \\__||_|  \\_/  \\___|\n *\n *    This directive renders a fill chart.\n */\n\nPARTICLE.directive('fillChart', function ($parse, $window, $timeout) {\n    //explicitly creating a directive definition variable\n    //this may look verbose but is good for clarification purposes\n    //in real life you'd want to simply return the object {...}\n    var directiveDefinitionObject = {\n        //We restrict its use to an element\n        //as usually  <bars-chart> is semantically\n        //more understandable\n        restrict: 'E',\n        //this is important,\n        //we don't want to overwrite our directive declaration\n        //in the HTML mark-up\n        replace: false,\n        //our data source would be an array\n        //passed thru chart-data attribute\n        scope: {\n            data: '=chartData',\n            whoamiin: '=whoamiin',\n            member: '=member',\n            elementid: \"=elementid\"\n        },\n        link: function (scope, element, attrs) {\n            //in D3, any selection[0] contains the group\n            //selection[0][0] is the DOM node\n            //but we won't need that this time\n            //a little of magic: setting it's width based\n            //on the data value (d)\n            //and text all with a smooth transition\n\n            //---------------------------------------\n\n            //console.log(attrs)\n            //console.log(scope.member.graph);\n            var drawn = 0;\n            var margin = {top: 20, right: 0, bottom: 30, left: 40}, width, height;\n            width = element.parent().innerWidth() * 0.98;\n            height = element.parent().innerHeight();//$window.innerHeight * .75 - margin.top - margin.bottom;\n            if (width < 150) width = 205;\n            if (height <= width) {\n                height = width;\n            }\n            height = width;\n\n            var unregister = scope.$watch(\n                function () {\n                    return element.parent().parent().parent().is(\":visible\");\n                },\n                function () {\n                    $timeout(function () {\n\n                        if (element.parent().height()) {\n                            //width = 300;//.6*element.parent().innerWidth(),\n                            //height = 300;//.6*element.parent().innerHeight();//$window.innerHeight * .75 - margin.top - margin.bottom;\n\n                            if (drawn === 0) {\n                                drawMe();\n                                drawn = 1;\n                            }\n                        }\n                    }, 0);\n\n\n                });\n\n\n            var drawMe = function () {\n\n                var w = width,\n                    h = height,\n                    tw = ( w / 2 ) * ( w / h ),\n                    th = ( h / 2 ),\n                    el = scope.elementid;\n\n                d3.select(element[0])\n                    .append(\"svg\")\n                    .attr(\"viewBox\", \"0 0 \" + ( tw * 2.05 ) + \" \" + ( th * 2.05 ) + \"\")\n                    .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n                    .attr(\"id\", el);\n\n                var gauge2 = loadLiquidFillGauge(el, 70);\n                var config2 = liquidFillGaugeDefaultSettings();\n\n                function NewValue() {\n                    if (Math.random() > 0.5) {\n                        return Math.round(Math.random() * 100);\n                    } else {\n                        return (Math.random() * 100).toFixed(1);\n                    }\n                }\n\n            };\n        }\n    };\n    return directiveDefinitionObject;\n});\n","/***\n *    ██╗████████╗███████╗███╗   ███╗    ██████╗ ██╗      ██████╗  ██████╗██╗  ██╗\n *    ██║╚══██╔══╝██╔════╝████╗ ████║    ██╔══██╗██║     ██╔═══██╗██╔════╝██║ ██╔╝\n *    ██║   ██║   █████╗  ██╔████╔██║    ██████╔╝██║     ██║   ██║██║     █████╔╝\n *    ██║   ██║   ██╔══╝  ██║╚██╔╝██║    ██╔══██╗██║     ██║   ██║██║     ██╔═██╗\n *    ██║   ██║   ███████╗██║ ╚═╝ ██║    ██████╔╝███████╗╚██████╔╝╚██████╗██║  ██╗\n *    ╚═╝   ╚═╝   ╚══════╝╚═╝     ╚═╝    ╚═════╝ ╚══════╝ ╚═════╝  ╚═════╝╚═╝  ╚═╝\n *      ____   _                   _    _\n *     |  _ \\ (_) _ __  ___   ___ | |_ (_)__   __ ___\n *     | | | || || '__|/ _ \\ / __|| __|| |\\ \\ / // _ \\\n *     | |_| || || |  |  __/| (__ | |_ | | \\ V /|  __/\n *     |____/ |_||_|   \\___| \\___| \\__||_|  \\_/  \\___|\n *\n *    This directive renders a structural component of the page, based on information\n *    in the UI object returned by the data source.\n */\n\nPARTICLE.directive('itemBlock', function ($compile, $rootScope, $timeout) {\n    return {\n        restrict: \"E\",\n        replace: true,\n        scope: {\n            member: '=',\n        },\n        templateUrl: \"/directives/iblock.html\",\n        link: function (scope, element, attrs) {\n\n            scope.$watch(attrs.member, function () {\n                //check new value to be what you expect.\n                if (scope.member !== undefined) {\n                    console.log(\"WATCH Fired\", scope.member);\n                }\n\n            });\n\n            var collectionSt = '<collection collection=\"member.widgets\"></collection>';\n            scope.$on(\"message\", function (e, msg) {\n\n                // If I am messaged then I need to toggle myself\n                if (msg[0] == scope.member.id_class) {\n                    scope.member.toggle = !scope.member.toggle;\n                }\n\n                // Futher I also need to turn off all those in my group\n                if (msg[1] == scope.member.group_class && msg[0] != scope.member.id_class) {\n                    scope.member.toggle = 0;\n                }\n\n            });\n            if (!scope.member) {\n                // console.log(\"NOT DEFINED\");\n            } else if (angular.isArray(scope.member.widgets)) {\n                $compile(collectionSt)(scope, function (cloned, scope) {\n                    element.append(cloned);\n                });\n            }\n        },\n        controller: function ($scope) {\n\n            if ($scope.member !== undefined) {\n                var initial_state = $scope.member.toggle;\n                $scope.member.toggle = 1;\n\n                $timeout(function () {\n                    $scope.member.toggle = initial_state;\n                }, 100);\n            }\n\n\n            $scope.f = function (id) {\n                if (this.member.disable_hide_show !== true) {\n                    if (this.member.hides) {\n                        $rootScope.$broadcast('message', [id, this.member.hides]);\n                    } else {\n                        $rootScope.$broadcast('message', [id, \"LACKAHIDES\"]);\n                    }\n                }\n            };\n\n        }\n\n    };\n});\n","/***\n* ███╗   ███╗██╗   ██╗██╗  ████████╗██╗██████╗ ██╗     ███████╗    ████████╗██╗███╗   ███╗███████╗██╗     ██╗███╗   ██╗███████╗\n* ████╗ ████║██║   ██║██║  ╚══██╔══╝██║██╔══██╗██║     ██╔════╝    ╚══██╔══╝██║████╗ ████║██╔════╝██║     ██║████╗  ██║██╔════╝\n* ██╔████╔██║██║   ██║██║     ██║   ██║██████╔╝██║     █████╗         ██║   ██║██╔████╔██║█████╗  ██║     ██║██╔██╗ ██║█████╗\n* ██║╚██╔╝██║██║   ██║██║     ██║   ██║██╔═══╝ ██║     ██╔══╝         ██║   ██║██║╚██╔╝██║██╔══╝  ██║     ██║██║╚██╗██║██╔══╝\n* ██║ ╚═╝ ██║╚██████╔╝███████╗██║   ██║██║     ███████╗███████╗       ██║   ██║██║ ╚═╝ ██║███████╗███████╗██║██║ ╚████║███████╗\n* ╚═╝     ╚═╝ ╚═════╝ ╚══════╝╚═╝   ╚═╝╚═╝     ╚══════╝╚══════╝       ╚═╝   ╚═╝╚═╝     ╚═╝╚══════╝╚══════╝╚═╝╚═╝  ╚═══╝╚══════╝\n*\n*      ____   _                   _    _\n*     |  _ \\ (_) _ __  ___   ___ | |_ (_)__   __ ___\n*     | | | || || '__|/ _ \\ / __|| __|| |\\ \\ / // _ \\\n*     | |_| || || |  |  __/| (__ | |_ | | \\ V /|  __/\n*     |____/ |_||_|   \\___| \\___| \\__||_|  \\_/  \\___|\n*\n*    This directive renders a trend chart.\n*/\n\nPARTICLE.directive('multipleTimeline', function ($parse, $window, $timeout) {\n\n  /* Usage:\n    1. <needle-chart></needle-chart> is semantically\n\n    Attr Params:\n      1. config\n      2. datasets*/\n\n    var directiveDefinitionObject = {\n        //Restrict use to an element\n        restrict: 'E',\n        //Do NOT overwrite our directive declaration in the HTML mark-up\n        replace: false,\n        //Chart data and config passed thru attributes\n        scope: {\n            config: '=',\n            datasets: \"=\",\n            colors: \"=\",\n            max:\"=\",\n            min:\"=\",\n            mockup:\"=\",\n            index:\"=\"\n        },\n\n    link: function (scope, element, attrs) {\n        var drawn = 0;\n\n    $timeout(function() {\n        if (element.parent().height()) {\n            if(drawn===0){\n                drawMe(scope.index);\n                drawn=1;\n            }\n        }\n    },\n    1);\n\n    var drawMe = function(index) {\n        var width, height, dataset, layers, chart;\n\n        /***\n        *    DEFAULT\n        *          _                          _              _    _    _\n        *     ___ |_| ___  ___    ___  ___  _| |   ___  ___ | |_ | |_ |_| ___  ___  ___\n        *    |_ -|| ||- _|| -_|  | .'||   || . |  |_ -|| -_||  _||  _|| ||   || . ||_ -|\n        *    |___||_||___||___|  |__,||_|_||___|  |___||___||_|  |_|  |_||_|_||_  ||___|\n        *                                                                     |___|\n        *\n        *\n        *        chartInset  :: istance from the edge of the drawn SVG\n        *        margin      :: standard top, right...... in pixels - no being used at moment....\n        *        barWidth    :: thickness/width of bar in pixels, might make this a percent in the future...\n        *        successIndicatorDegWidth      :: the number of degrees the success indicator should span from its start point\n        *                                      :: set to 0 to make it go to the very end of the chart\n        *\n        ***/\n          var config = {\n              chartInset:0,\n              hasSuccessIndicator:true,\n              hasBandIndicator:false,\n              margin: {\n                  top: 20,\n                  right: 80,\n                  bottom: 40,\n                  left: 90\n              },\n              barWidth:10,\n              widthPercentSize:1.1,\n              needLength:1,\n              colors: {\n                  primary_fill: \"color-pewter\",\n                  color_2: \"boldorange-0-fade-1\",\n                  success: \"color-bluepuddy-0-fade-5\",\n                  needle: \"color-pewter-0-fade-0\",\n                  bg: \"color-white-6-fade-8\",\n                  legend:\"color-bluepuddy-8-fade-0\"\n              },\n              max:100,\n              min:0\n          }; // End config\n\n          /***\n          *                                     _                _       ___            _  _\n          *     ___  _ _  ___  ___  _ _ _  ___ |_|| |_  ___    _| | ___ |  _| ___  _ _ | || |_  ___\n          *    | . || | || -_||  _|| | | ||  _|| ||  _|| -_|  | . || -_||  _|| .'|| | || ||  _||_ -|\n          *    |___| \\_/ |___||_|  |_____||_|  |_||_|  |___|  |___||___||_|  |__,||___||_||_|  |___|\n          *\n          */\n\n          if (scope.config !== undefined){\n              Object.keys(scope.config).forEach(function(key,index) {\n                  config[key] = scope.config[key];\n              });\n          }\n\n          /***\n          *                 _                                         _\n          *     _____  ___ |_| ___    ___  ___  ___  ___  ___  ___  _| | _ _  ___  ___\n          *    |     || .'|| ||   |  | . ||  _|| . ||  _|| -_|| -_|| . || | ||  _|| -_|\n          *    |_|_|_||__,||_||_|_|  |  _||_|  |___||___||___||___||___||___||_|  |___|\n          *                          |_|\n          */\n\n          /***\n          *\n          *     ___\n          *    |_  |\n          *     _| |_  _\n          *    |_____||_|   Select the directive element to push our SVG into:\n          *\n          */\n\n          el = d3.select(element[0]);\n\n          /***\n          *\n          *     ___\n          *    |_  |\n          *    |  _| _     Calculate the width of the width and height of the chart\n          *    |___||_|    Height is fixed to 400, width varies with parent element width\n          *\n          */\n\n          width = element[0].parentElement.clientWidth;\n          height = 275;\n\n          /***\n          *     ___\n          *    |_  |\n          *    |_  | _\n          *    |___||_|    Prepare dataset to be used by D3\n          *                Update this section to match updated dataset\n          */\n\n          dataset = scope.datasets;\n          dataset.forEach(function(d){\n              d.date = new Date(d.date);\n          });\n\n          var color = d3.scale.category10();\n          color.domain(d3.keys(dataset[0]).filter(function(key) { return key !== \"date\"; }));\n\n          /***\n          *     ___\n          *    | | |\n          *    |_  | _\n          *      |_||_|    Create Chart Objects: X/Y Scales, Primary Chart Object,\n          *                X/Y Axes, and Data Bars.\n          */\n\n          // Define X Scale\n          var xScale = d3.time.scale()\n              .domain([new Date(2015, 05, 31), new Date(2016, 07, 01)]) //d3.extent(dataset, function(d) { return d.date; })\n              .range([0 + config.margin.left, width - config.margin.right]);\n\n          // Define Y Scale\n          var fields = [\"replan\", \"correction\", \"rebaseline\"];\n          var yScale = d3.scale.ordinal()\n              .domain(fields)\n              .rangePoints([height-config.margin.bottom, config.margin.top]);\n\n          var xticks = dataset.length;\n\n          chart = el.append(\"svg\")\n              .attr(\"viewBox\", \"0 0 \" + width + \" \" + height + \"\")\n              .attr(\"preserveAspectRatio\", \"xMinYMin slice\")\n              .attr(\"height\",height)\n              .attr(\"width\",width);\n\n          /*chart = el.append(\"svg\")\n              .attr(\"viewBox\", \"0 0 \" + width + \" \" + height + \"\")\n              .attr(\"preserveAspectRatio\", \"xMinYMin slice\")\n              .attr(\"class\", \"chart\")\n              .append('g')\n              .attr(\"height\",height)\n              .attr(\"width\",width);*/\n\n          var xAxis = d3.svg.axis()\n              .scale(xScale)\n              .orient(\"bottom\")\n              .innerTickSize(-height + config.margin.top + config.margin.bottom)\n              .outerTickSize(0)\n              .tickPadding(20);\n\n          var yAxis = d3.svg.axis()\n              .scale(yScale)\n              .orient(\"left\")\n              .ticks(fields.length)\n              .innerTickSize(-width + config.margin.left + config.margin.right)\n              .outerTickSize(0)\n              .tickPadding(20);\n\n          var x_axis = chart.append(\"g\") // Draw axes: x axis\n              .attr(\"id\",\"xaxis\")\n              .attr(\"class\", \"color-white-0\")\n              .attr(\"transform\",\"translate(0, \" + (height - config.margin.bottom) + \")\")\n              .call(xAxis)\n                  .selectAll(\"text\")\n                  .style(\"text-anchor\", \"middle\")\n                  .attr(\"dy\", \"10px\")\n                  .style(\"font-weight\", function(d) {\n                      if(d.getMonth() === 0){\n                          return \"bold\";\n                      }\n                  });\n\n          var y_axis = chart.append(\"g\") // Draw axes: y axis\n              .attr(\"id\",\"yaxis\")\n              .attr(\"class\", \"color-white-0\")\n              .attr(\"transform\",\"translate(\" + config.margin.left + \",0)\")\n              .call(yAxis)\n                  .selectAll(\"text\")\n                  .style(\"text-anchor\", \"end\")\n                  .text(function(d) {\n                      return d.charAt(0).toUpperCase() + d.slice(1);\n                  });\n\n          var point = chart.append(\"g\")\n                .attr(\"class\", \"line-point\");\n\n          point.selectAll('circle')\n              .data(dataset)\n              .enter()\n              .append('circle')\n                .attr(\"cx\", function(d) { return xScale(d.date); })\n                .attr(\"cy\", function(d) { return yScale(d.type); })\n                .attr(\"r\", 10)\n                .attr(\"class\", \"color-white-0-fade-5\")\n                .style(\"stroke\", function(d) { return color(d.type); })\n                .style(\"stroke-width\", \"4px\");\n\n      }; // DrawMe end\n\n          /***\n          *     ___\n          *    |  _|\n          *    |_  | _\n          *    |___||_|    Run code and return visualization (D3) object\n          */\n\n    } // link end\n\n  }; // directiveDefinitionObject end\n  return directiveDefinitionObject;\n}); //End Directive","/***\n *    ███╗   ██╗███████╗███████╗██████╗ ██╗     ███████╗     ██████╗██╗  ██╗ █████╗ ██████╗ ████████╗\n *    ████╗  ██║██╔════╝██╔════╝██╔══██╗██║     ██╔════╝    ██╔════╝██║  ██║██╔══██╗██╔══██╗╚══██╔══╝\n *    ██╔██╗ ██║█████╗  █████╗  ██║  ██║██║     █████╗      ██║     ███████║███████║██████╔╝   ██║\n *    ██║╚██╗██║██╔══╝  ██╔══╝  ██║  ██║██║     ██╔══╝      ██║     ██╔══██║██╔══██║██╔══██╗   ██║\n *    ██║ ╚████║███████╗███████╗██████╔╝███████╗███████╗    ╚██████╗██║  ██║██║  ██║██║  ██║   ██║\n *    ╚═╝  ╚═══╝╚══════╝╚══════╝╚═════╝ ╚══════╝╚══════╝     ╚═════╝╚═╝  ╚═╝╚═╝  ╚═╝╚═╝  ╚═╝   ╚═╝\n *      ____   _                   _    _\n *     |  _ \\ (_) _ __  ___   ___ | |_ (_)__   __ ___\n *     | | | || || '__|/ _ \\ / __|| __|| |\\ \\ / // _ \\\n *     | |_| || || |  |  __/| (__ | |_ | | \\ V /|  __/\n *     |____/ |_||_|   \\___| \\___| \\__||_|  \\_/  \\___|\n *\n *    This directive renders a needle chart.\n */\n\nPARTICLE.directive('needleChart', function ($parse,$window,$timeout) {\n\n  /* Usage:\n    1. <needle-chart></needle-chart> is semantically\n\n    Attr Params:\n      1. config\n      2. datasets\n  */\n\n  var directiveDefinitionObject = {\n\n    //Restrict use to an element\n    restrict: 'E',\n    //Do NOT overwrite our directive declaration in the HTML mark-up\n    replace: false,\n    //Chart data and config passed thru attributes\n    scope: {\n      config: '=',\n      datasets: \"=\",\n      colors: \"=\",\n      percentcomplete: \"=\",\n      successpercent: \"=\",\n      max:\"=\",\n      min:\"=\",\n      mockup:\"=\",\n      alttext:\"=\"\n    },\n    link: function (scope, element, attrs) {\n\n      var drawn = 0;\n\n      $timeout(function() {\n        if (element.parent().height()) {\n          if(drawn===0){\n            drawMe();\n            drawn=1;\n          }\n        }\n      }, 100);\n\n\n      var plainTextFromHTML =  function(text) {\n        return  text ? String(text).replace(/<[^>]+>/gm, '') : '';\n      };\n\n      var drawMe = function() {\n\n      var chart, degToRad, repaintGauge, success_per,\n      height, margin, numSections, padRad, percToDeg, percToRad,\n      percent, radius, sectionIndx, svg, totalPercent, width;\n\n\n      //Set the percent for the CURRENT bale\n      padRad = 0.025;\n\n    /***\n     *    DEFAULT\n     *          _                          _              _    _    _\n     *     ___ |_| ___  ___    ___  ___  _| |   ___  ___ | |_ | |_ |_| ___  ___  ___\n     *    |_ -|| ||- _|| -_|  | .'||   || . |  |_ -|| -_||  _||  _|| ||   || . ||_ -|\n     *    |___||_||___||___|  |__,||_|_||___|  |___||___||_|  |_|  |_||_|_||_  ||___|\n     *                                                                     |___|\n     *\n\n              chartInset  :: istance from the edge of the drawn SVG\n              margin      :: standard top, right...... in pixels - no being used at moment....\n              barWidth    :: thickness/width of bar in pixels, might make this a percent in the future...\n              successIndicatorDegWidth      :: the number of degrees the success indicator should span from its start point\n                                            :: set to 0 to make it go to the very end of the chart\n\n      **********************************************/\n      var config = {\n        chartInset:20,\n        hasSuccessIndicator:true,\n        hasBandIndicator:false,\n        margin: {\n          top: 0,\n          right: 20,\n          bottom: 0,\n          left: 20\n        },\n        barWidth:100,\n        widthPercentSize:1.1,\n        successIndicatorDegWidth:0,\n        startAngle:-110,\n        endAngle:110,\n        needLength:1,\n        colors: {\n          primary_fill: \"color-pewter\",\n          color_2: \"boldorange-0-fade-1\",\n          success: \"color-bluepuddy-0-fade-5\",\n          needle: \"color-pewter-0-fade-0\",\n          bg: \"color-white-6-fade-8\",\n          legend:\"color-bluepuddy-8-fade-0\"\n        },\n        labelFormat          : d3.format(',g'),\n        max:100,\n        min:0,\n        units:\"%\"\n      };\n\n    /***\n     *\n     *                                     _  _             _       ___            _  _\n     *     ___  _ _  ___  ___  _ _ _  ___ |_|| |_  ___    _| | ___ |  _| ___  _ _ | || |_  ___\n     *    | . || | || -_||  _|| | | ||  _|| ||  _|| -_|  | . || -_||  _|| .'|| | || ||  _||_ -|\n     *    |___| \\_/ |___||_|  |_____||_|  |_||_|  |___|  |___||___||_|  |__,||___||_||_|  |___|\n     *\n     */\n      if (scope.config !== undefined){\n        Object.keys(scope.config).forEach(function(key,index) {\n             config[key] = scope.config[key];\n        });\n      }\n\n      /***\n       *\n       *          _    _  _  _  _                       _    _           _\n       *     _ _ | |_ |_|| ||_|| |_  _ _    _____  ___ | |_ | |_  ___  _| | ___\n       *    | | ||  _|| || || ||  _|| | |  |     || -_||  _||   || . || . ||_ -|\n       *    |___||_|  |_||_||_||_|  |_  |  |_|_|_||___||_|  |_|_||___||___||___|\n       *                            |___|\n       *\n      **********************************************/\n      percToDeg = function(perc) {\n        //return perc * 360;\n        return 360 - (totalAngle * perc + config.startAngle);\n      };\n\n      percToRad = function(perc) {\n        return degToRad(percToDeg(perc));\n      };\n\n      degToRad = function(deg) {\n        return deg * Math.PI / 180;\n      };\n\n\n      /***\n       *\n       *                 _                                         _\n       *     _____  ___ |_| ___    ___  ___  ___  ___  ___  ___  _| | _ _  ___  ___\n       *    |     || .'|| ||   |  | . ||  _|| . ||  _|| -_|| -_|| . || | ||  _|| -_|\n       *    |_|_|_||__,||_||_|_|  |  _||_|  |___||___||___||___||___||___||_|  |___|\n       *                          |_|\n       */\n\n      /***\n       *\n       *     ___\n       *    |_  |\n       *     _| |_  _\n       *    |_____||_|   Select the directive element to push our SVG into:\n       *\n       */\n      el = d3.select(element[0]);\n\n\n      /***\n       *\n       *     ___\n       *    |_  |\n       *    |  _| _\n       *    |___||_|    Calculate the width of the width, height and radius of the chart\n       *\n       */\n      width = element.innerWidth();\n      radius =width * 0.5 ;\n\t\t\theight = (radius + Math.sin(degToRad(config.endAngle-90))*radius) ;\n      /***\n       *\n       *     ___\n       *    |_  |\n       *    |_  | _\n       *    |___||_|    Create the primary SVG element,\n       *                Set the preserveAspectRatio so it scales as the screen size changes\n       *\n       */\n      console.log(\"config.widthPercentSize\",config.widthPercentSize);\n      svg = el.append('svg')\n            .attr(\"viewBox\", \"0 0 \" + ( width * config.widthPercentSize ) + \" \" + ( height * config.widthPercentSize ) + \"\")\n            .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n            .append(\"g\").attr('transform', \"translate(\" + ( config.widthPercentSize  * (width)/2 ) + \", \" + config.widthPercentSize * (width/2) + \")\")\n            .attr('width', width).attr('height', height)\n            .attr('alt',plainTextFromHTML(scope.alttext));\n\n      /***\n       *\n       *     ___\n       *    | | |\n       *    |_  | _\n       *      |_||_|    Add layer for the gauge itself\n       *                Also add the paths for the three archs\n       *                NOTE: the additional identifying classes such as primary_band, bg_band and success_band\n       *                Which are used to identify and select them later\n       *\n       */\n      chart = svg.append('g');\n      chart.append('path').attr('class', \"arc \" + config.colors.primary_fill + \" primary_band\" );\n      chart.append('path').attr('class', \"arc \" + config.colors.success  + \" success_band\");\n      chart.append('path').attr('class', \"arc \" + config.colors.bg  + \" bg_band\");\n\n      function centerTranslation() {\n        return 'translate('+radius/2 +','+ radius/2 +')';\n      }\n      var centerTx = centerTranslation();\n\n      var scale = d3.scale.linear().range([0,1]).domain([config.min, config.max]);\n\n  var range = config.endAngle - config.startAngle;\n  var ticks = scale.ticks(9);\n\n  var lg = svg.append('g').attr('class', 'color-white').attr('transform' , 'translate(0,0)');\n\n      lg.selectAll('text')\n      .data(ticks)\n      .enter().append('text')\n      .attr('transform', function(d) {\n\n        var ratio = scale(d);\n        var newAngle = degToRad(config.startAngle + (ratio * range));\n        newAngle = degToRad(180 - (range * ratio + config.startAngle));\n\n        var turnAngle = range * ratio;\n        console.log(turnAngle,\",turnAngle\");\n\n        var xpos = Math.sin(newAngle) * (radius + config.chartInset) ;//- ( Math.sin(newAngle) * config.chartInset);\n        var ypos = Math.cos(newAngle) * (radius + config.chartInset);\n\n        console.log(\"xpos,ypos\", xpos, ypos);\n        console.log(\"radius\",radius);\n        return 'rotate(' + 0 +') translate('+ (xpos -10) + \",\" + (ypos +5) +')';\n        //return 'rotate(' + turnAngle +') translate('+ (-100) + \",\" + 100 +')';\n\n      })\n      .text(config.labelFormat);\n\n\n      /***\n       *\n       *     ___\n       *    |  _|\n       *    |_  | _\n       *    |___||_|    set the inner and outer radius of the arts, they are all the same at the moment.\n       *\n       */\n      var arc_Background = d3.svg.arc().outerRadius(radius - config.chartInset).innerRadius(radius - config.chartInset - config.barWidth);\n      var arc_Progress = d3.svg.arc().outerRadius(radius - config.chartInset).innerRadius(radius - config.chartInset - config.barWidth);\n      var arc_Success = d3.svg.arc().outerRadius(radius - config.chartInset).innerRadius(0);\n\n      /***\n       *\n       *     ___\n       *    |  _|\n       *    | . | _\n       *    |___||_|    set the values for percent complete and the success point on the gauge.\n       *                uses 25% if it undefined for mocking up interface\n       *                uses 85% for default success unless\n       *\n       */\n\n      if (config.max != 100 || config.min !== 0) {\n        var gaugeRange;\n        if (config.max > config.min) {\n          gaugeRange = Math.abs(config.max - config.min);\n          success_per = (scope.successpercent - config.min)/gaugeRange;\n        } else {\n          gaugeRange = Math.abs(config.min - config.max);\n          success_per = (config.min-scope.successpercent)/gaugeRange;\n        }\n        percent =  scope.percentcomplete/100;\n\n      } else {\n        percent = scope.percentcomplete/100 ;\n        if ( scope.successpercent == 100 ) {\n          success_per = 0.99;\n        } else {\n          success_per = scope.successpercent/100;\n        }\n        percent = scope.percentcomplete/100;\n      }\n\n      if (percent > 1) { percent = 1; }\n\n\n      /***\n       *\n       *     ___\n       *    |_  |\n       *      | | _\n       *      |_||_|    Calulate the start and end Rads along with the total degress of the gauge\n       *\n       */\n      var startAngleRad = degToRad(config.startAngle);\n      var endAngleRad = degToRad(config.endAngle);\n      var totalAngle = config.endAngle - config.startAngle;\n\n     // percent = .75\n\n      var perAngle = (totalAngle * percent + config.startAngle);\n      var successAngle = (totalAngle * success_per + config.startAngle);\n\n      var successAngleEnd;\n      if (config.successIndicatorDegWidth !== undefined && config.successIndicatorDegWidth > 0) {\n        successAngleEnd = (totalAngle * success_per + config.startAngle + config.successIndicatorDegWidth);\n      } else {\n        successAngleEnd = config.endAngle;\n      }\n\n\n      arc_Background.startAngle(degToRad(config.startAngle)).endAngle(endAngleRad);\n      chart.select(\".bg_band\").attr('d', arc_Background);\n\n      if (config.hasSuccessIndicator) {\n        arc_Success.startAngle(degToRad(successAngle)).endAngle(degToRad(successAngleEnd));\n        chart.select(\".success_band\").attr('d', arc_Success);\n      }\n\n      if (config.hasBandIndicator) {\n        arc_Progress.startAngle(startAngleRad).endAngle(degToRad(perAngle));\n        chart.select(\".primary_band\").attr('d', arc_Progress);\n      }\n\n      repaintGauge = function (perc)\n      {\n\n        //console.log(\"repaintGauge perc\",perc)\n        // //console.log(\"repaintGauge\",perc)\n //        var next_start = totalPercent;\n //\n //        arcStartRad = percToRad(next_start);\n //        arcEndRad = arcStartRad + percToRad(perc / 2);\n //        next_start += perc / 2;\n //\n //\n //        arc_Progress.startAngle(arcStartRad).endAngle(arcEndRad);\n //\n //        arcStartRad = percToRad(next_start);\n //        arcEndRad = arcStartRad + percToRad((1 - perc) / 2);\n //\n //        arc_Background.startAngle(arcStartRad + padRad).endAngle(arcEndRad);\n //\n //\n //\n //\n //        chart.select(\".primary_band\").attr('d', arc_Progress);\n //        chart.select(\".bg_band\").attr('d', arc_Background);\n //\n\n      };\n\n      var needle;\n\n\n      var Needle = (function() {\n\n        /**\n          * Helper function that returns the `d` value\n          * for moving the needle\n        **/\n        var recalcPointerPos = function(perc) {\n          var centerX, centerY, leftX, leftY, rightX, rightY, thetaRad, topX, topY;\n          thetaRad = degToRad(360 - (totalAngle * perc + config.startAngle));\n          //thetaRad = percToDeg()\n          centerX = 0;\n          centerY = 0;\n          //console.log(Math.sin(Math.abs(startAngleRad)),\"COS of startAngleRad\" , startAngleRad)\n          topX = centerX - this.len * Math.sin(thetaRad);\n          topY = centerY - this.len * Math.cos(thetaRad);\n          leftX = centerX - this.radius * Math.sin(thetaRad - Math.PI / 2);\n          leftY = centerY - this.radius * Math.cos(thetaRad - Math.PI / 2);\n          rightX = centerX - this.radius * Math.sin(thetaRad + Math.PI / 2);\n          rightY = centerY - this.radius * Math.cos(thetaRad + Math.PI / 2);\n          return \"M \" + leftX + \" \" + leftY + \" L \" + topX + \" \" + topY + \" L \" + rightX + \" \" + rightY;\n        };\n\n        function Needle(el) {\n          this.el = el;\n          this.len = radius * config.needLength - config.barWidth * 0.5 ;\n          this.radius = this.len * 0.2;\n        }\n\n        Needle.prototype.render = function() {\n          this.el.append('circle').attr('class', 'needle-center ' + config.colors.needle).attr('cx', 0).attr('cy', 0).attr('r', this.radius);\n          return this.el.append('path').attr('class', 'needle ' + config.colors.needle).attr('d', recalcPointerPos.call(this, 0));\n        };\n\n        Needle.prototype.moveTo = function(perc) {\n          var self,\n              oldValue = this.perc || 0;\n              this.perc = perc;\n              self = this;\n\n          // Reset pointer position\n          this.el.transition().delay(100).ease('quad').duration(500).select('.needle').tween('reset-progress', function() {\n            return function(percentOfPercent) {\n              var progress = (1 - percentOfPercent) * oldValue;\n              repaintGauge(progress);\n              return d3.select(this).attr('d', recalcPointerPos.call(self, progress));\n            };\n          });\n\n          this.el.transition().delay(300).ease('bounce').duration(1500).select('.needle').tween('progress', function() {\n            return function(percentOfPercent) {\n              var progress = percentOfPercent * perc;\n\n              repaintGauge(progress);\n              return d3.select(this).attr('d', recalcPointerPos.call(self, progress));\n            };\n          });\n\n        };\n\n\n\n          return Needle;\n\n      })();\n\n      needle = new Needle(chart);\n      needle.render();\n\n      console.log(\"Org Percent\",percent);\n      needle.moveTo(percent);\n\n\n      };\n    }\n  };\n  return directiveDefinitionObject;\n});","/***\n *    ██████╗ ██╗███████╗     ██████╗██╗  ██╗ █████╗ ██████╗ ████████╗\n *    ██╔══██╗██║██╔════╝    ██╔════╝██║  ██║██╔══██╗██╔══██╗╚══██╔══╝\n *    ██████╔╝██║█████╗      ██║     ███████║███████║██████╔╝   ██║\n *    ██╔═══╝ ██║██╔══╝      ██║     ██╔══██║██╔══██║██╔══██╗   ██║\n *    ██║     ██║███████╗    ╚██████╗██║  ██║██║  ██║██║  ██║   ██║\n *    ╚═╝     ╚═╝╚══════╝     ╚═════╝╚═╝  ╚═╝╚═╝  ╚═╝╚═╝  ╚═╝   ╚═╝\n *    ██╗      █████╗ ██████╗ ███████╗██╗\n *    ██║     ██╔══██╗██╔══██╗██╔════╝██║\n *    ██║     ███████║██████╔╝█████╗  ██║\n *    ██║     ██╔══██║██╔══██╗██╔══╝  ██║\n *    ███████╗██║  ██║██████╔╝███████╗███████╗\n *    ╚══════╝╚═╝  ╚═╝╚═════╝ ╚══════╝╚══════╝\n *      ____   _                   _    _\n *     |  _ \\ (_) _ __  ___   ___ | |_ (_)__   __ ___\n *     | | | || || '__|/ _ \\ / __|| __|| |\\ \\ / // _ \\\n *     | |_| || || |  |  __/| (__ | |_ | | \\ V /|  __/\n *     |____/ |_||_|   \\___| \\___| \\__||_|  \\_/  \\___|\n *\n *    This directive renders the labels for a pie chart.\n */\n\nPARTICLE.directive('pieChartLabel', function ($parse, $window, $timeout) {\n    //explicitly creating a directive definition variable\n    //this may look verbose but is good for clarification purposes\n    //in real life you'd want to simply return the object {...}\n    var directiveDefinitionObject = {\n        //We restrict its use to an element\n        //as usually  <bars-chart> is semantically\n        //more understandable\n        restrict: 'E',\n        //this is important,\n        //we don't want to overwrite our directive declaration\n        //in the HTML mark-up\n        replace: false,\n        //our data source would be an array\n        //passed thru chart-data attribute\n        scope: {data: '=chartData', whoamiin: '=whoamiin', member: '=member'},\n        link: function (scope, element, attrs) {\n            //in D3, any selection[0] contains the group\n            //selection[0][0] is the DOM node\n            //but we won't need that this time\n            //a little of magic: setting it's width based\n            //on the data value (d)\n            //and text all with a smooth transition\n\n            //---------------------------------------\n\n            //console.log(attrs)\n            //console.log(scope.member.graph);\n            var drawn = 0;\n            var margin = {top: 20, right: 0, bottom: 30, left: 40}, width, height;\n            width = element.parent().innerWidth() * 0.98;\n            height = element.parent().innerHeight();//$window.innerHeight * 0.75 - margin.top - margin.bottom;\n            if (width < 150) width = 205;\n            if (height <= width) {\n                height = width;\n            }\n            height = width;\n            //console.log(\"progressMeter\",width,height);\n\n            var unregister = scope.$watch(\n                function () {\n                    return element.parent().parent().parent().is(\":visible\");\n                },\n                function () {\n                    $timeout(function () {\n\n                        if (element.parent().height()) {\n                            //width = 300;//.6*element.parent().innerWidth(),\n                            //height = 300;//.6*element.parent().innerHeight();//$window.innerHeight * .75 - margin.top - margin.bottom;\n\n                            if (drawn === 0) {\n                                drawMe();\n                                drawn = 1;\n                            }\n                        }\n                    }, 0);\n\n\n                });\n\n\n            var drawMe = function () {\n\n                var w = width,\n                    h = height,\n                    tw = ( w / 2 ) * ( w / h ),\n                    th = ( h / 2 ),\n                    radius = Math.min(width, height) / 2;\n\n                var svg = d3.select(element[0])\n                    .append(\"svg\")\n                    .attr(\"viewBox\", \"0 0 \" + ( w ) + \" \" + ( h ) + \"\")\n                    .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n                    .append(\"g\");\n\n                svg.append(\"g\")\n                    .attr(\"class\", \"slices\");\n                svg.append(\"g\")\n                    .attr(\"class\", \"labels\");\n                svg.append(\"g\")\n                    .attr(\"class\", \"lines\");\n\n                var pie = d3.layout.pie()\n                    .sort(null)\n                    .value(function (d) {\n                        return d.value;\n                    });\n\n                var arc = d3.svg.arc()\n                    .outerRadius(radius * 0.8)\n                    .innerRadius(radius * 0.4);\n\n                var outerArc = d3.svg.arc()\n                    .innerRadius(radius * 0.9)\n                    .outerRadius(radius * 0.9);\n\n                svg.attr(\"transform\", \"translate(\" + w + \",\" + th + \")\");\n\n                var key = function (d) {\n                    return d.data.label;\n                };\n\n                var color = d3.scale.ordinal()\n                    .domain([\"Lorem ipsum\", \"dolor sit\", \"amet\", \"consectetur\", \"adipisicing\", \"elit\", \"sed\", \"do\", \"eiusmod\", \"tempor\", \"incididunt\"])\n                    .range([\"#98abc5\", \"#8a89a6\", \"#7b6888\", \"#6b486b\", \"#a05d56\", \"#d0743c\", \"#ff8c00\"]);\n\n                function randomData() {\n                    var labels = color.domain();\n                    return labels.map(function (label) {\n                        return {label: label, value: Math.random()};\n                    });\n                }\n\n                change(randomData());\n\n                d3.select(\".randomize\")\n                    .on(\"click\", function () {\n                        change(randomData());\n                    });\n\n\n                function change(data) {\n\n                    /* ------- PIE SLICES -------*/\n                    var slice = svg.select(\".slices\").selectAll(\"path.slice\")\n                        .data(pie(data), key);\n\n                    slice.enter()\n                        .insert(\"path\")\n                        .attr('class', function (d, i) {\n                            return 'slice fill-color-' + i;\n                        });\n\n                    slice\n                        .transition().duration(1000)\n                        .attrTween(\"d\", function (d) {\n                            this._current = this._current || d;\n                            var interpolate = d3.interpolate(this._current, d);\n                            this._current = interpolate(0);\n                            return function (t) {\n                                return arc(interpolate(t));\n                            };\n                        });\n\n                    slice.exit()\n                        .remove();\n\n                    /* ------- TEXT LABELS -------*/\n\n                    var text = svg.select(\".labels\").selectAll(\"text\")\n                        .data(pie(data), key);\n\n                    text.enter()\n                        .append(\"text\")\n                        .attr(\"dy\", \".35em\")\n                        .text(function (d) {\n                            return d.data.label;\n                        });\n\n                    function midAngle(d) {\n                        return d.startAngle + (d.endAngle - d.startAngle) / 2;\n                    }\n\n                    text.transition().duration(1000)\n                        .attrTween(\"transform\", function (d) {\n                            this._current = this._current || d;\n                            var interpolate = d3.interpolate(this._current, d);\n                            this._current = interpolate(0);\n                            return function (t) {\n                                var d2 = interpolate(t);\n                                var pos = outerArc.centroid(d2);\n                                pos[0] = radius * (midAngle(d2) < Math.PI ? 1 : -1);\n                                return \"translate(\" + pos + \")\";\n                            };\n                        })\n                        .styleTween(\"text-anchor\", function (d) {\n                            this._current = this._current || d;\n                            var interpolate = d3.interpolate(this._current, d);\n                            this._current = interpolate(0);\n                            return function (t) {\n                                var d2 = interpolate(t);\n                                return midAngle(d2) < Math.PI ? \"start\" : \"end\";\n                            };\n                        });\n\n                    text.exit()\n                        .remove();\n\n                    /* ------- SLICE TO TEXT POLYLINES -------*/\n\n                    var polyline = svg.select(\".lines\").selectAll(\"polyline\")\n                        .data(pie(data), key);\n\n                    polyline.enter()\n                        .append(\"polyline\");\n\n                    polyline.transition().duration(1000)\n                        .attrTween(\"points\", function (d) {\n                            this._current = this._current || d;\n                            var interpolate = d3.interpolate(this._current, d);\n                            this._current = interpolate(0);\n                            return function (t) {\n                                var d2 = interpolate(t);\n                                var pos = outerArc.centroid(d2);\n                                pos[0] = radius * 0.95 * (midAngle(d2) < Math.PI ? 1 : -1);\n                                return [arc.centroid(d2), outerArc.centroid(d2), pos];\n                            };\n                        });\n\n                    polyline.exit()\n                        .remove();\n                }\n\n            };\n        }\n    };\n    return directiveDefinitionObject;\n});\n","/***\n *    ██████╗ ██╗███████╗     ██████╗██╗  ██╗ █████╗ ██████╗ ████████╗\n *    ██╔══██╗██║██╔════╝    ██╔════╝██║  ██║██╔══██╗██╔══██╗╚══██╔══╝\n *    ██████╔╝██║█████╗      ██║     ███████║███████║██████╔╝   ██║\n *    ██╔═══╝ ██║██╔══╝      ██║     ██╔══██║██╔══██║██╔══██╗   ██║\n *    ██║     ██║███████╗    ╚██████╗██║  ██║██║  ██║██║  ██║   ██║\n *    ╚═╝     ╚═╝╚══════╝     ╚═════╝╚═╝  ╚═╝╚═╝  ╚═╝╚═╝  ╚═╝   ╚═╝\n *      ____   _                   _    _\n *     |  _ \\ (_) _ __  ___   ___ | |_ (_)__   __ ___\n *     | | | || || '__|/ _ \\ / __|| __|| |\\ \\ / // _ \\\n *     | |_| || || |  |  __/| (__ | |_ | | \\ V /|  __/\n *     |____/ |_||_|   \\___| \\___| \\__||_|  \\_/  \\___|\n *\n *    This directive renders a pie chart.\n */\n\nPARTICLE.directive('pieChart', function ($parse, $window, $timeout) {\n    //explicitly creating a directive definition variable\n    //this may look verbose but is good for clarification purposes\n    //in real life you'd want to simply return the object {...}\n    var directiveDefinitionObject = {\n        //We restrict its use to an element\n        //as usually  <bars-chart> is semantically\n        //more understandable\n        restrict: 'E',\n        //this is important,\n        //we don't want to overwrite our directive declaration\n        //in the HTML mark-up\n        replace: false,\n        //our data source would be an array\n        //passed thru chart-data attribute\n        scope: {data: '=chartData', whoamiin: '=whoamiin', member: '=member'},\n        link: function (scope, element, attrs) {\n            //in D3, any selection[0] contains the group\n            //selection[0][0] is the DOM node\n            //but we won't need that this time\n            //a little of magic: setting it's width based\n            //on the data value (d)\n            //and text all with a smooth transition\n\n            //---------------------------------------\n\n            //console.log(attrs)\n            //console.log(scope.member);\n            var drawn = 0;\n            var margin = {top: 20, right: 0, bottom: 30, left: 40}, width, height;\n            width = element.parent().innerWidth() * 0.98;\n            height = element.parent().innerHeight();//$window.innerHeight * 0.75 - margin.top - margin.bottom;\n            if (width < 150) width = 205;\n            if (height <= width) {\n                height = width;\n            }\n            height = width;\n            //console.log(\"progressMeter\",width,height);\n\n            var unregister = scope.$watch(\n                function () {\n                    return element.parent().parent().parent().is(\":visible\");\n                },\n                function () {\n                    $timeout(function () {\n\n                        if (element.parent().height()) {\n                            //width = 300;//.6*element.parent().innerWidth(),\n                            //height = 300;//.6*element.parent().innerHeight();//$window.innerHeight * .75 - margin.top - margin.bottom;\n\n                            if (drawn === 0) {\n                                drawMe();\n                                drawn = 1;\n                            }\n                        }\n                    }, 0);\n\n\n                });\n\n\n            var drawMe = function () {\n\n                var dataset = [100, 90, 80, 70, 60, 50];\n                var radius = Math.min(width, height) / 2;\n\n                var w = width,\n                    h = height,\n                    tw = ( w / 2 ) * ( w / h ),\n                    th = ( h / 2 );\n\n                var svg = d3.select(element[0])\n                    .append(\"svg\")\n                    .attr(\"viewBox\", \"0 0 \" + ( tw * 2 ) + \" \" + ( th * 2 ) + \"\")\n                    .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n                    .append(\"g\")\n                    .attr(\"transform\", \"translate(\" + tw + \",\" + th + \")\");\n                var color = d3.scale.ordinal()\n                    .range([\"#009DD9\", \"#FF8300\", \"#B21DAC\", \"#D70036\", \"#707276\", \"#000000\"]);\n                var pie = d3.layout.pie()\n                    .sort(null);\n                var arc = d3.svg.arc()\n                    .innerRadius(( width / 2 ) - ( width / 4 ))\n                    .outerRadius(( width / 2 ));\n                var path = svg.selectAll(\"path\")\n                    .data(pie(dataset))\n                    .enter().append(\"path\")\n                    .attr(\"fill\", function (d, i) {\n                        return color(i);\n                    })\n                    .attr(\"d\", arc)\n                    .attr('class', function (d, i) {\n                        return 'fill-color-' + i;\n                    })\n                    .each(function (d) {\n                        this._current = d;\n                    }); // store the initial values\n                function change(newdata) {\n                    path = path.data(pie(newdata)); // update the data\n                    path.transition().duration(750).attrTween(\"d\", arcTween); // redraw the arcs\n                }\n\n                // Store the displayed angles in _current.\n                // Then, interpolate from _current to the new angles.\n                // During the transition, _current is updated in-place by d3.interpolate.\n                function arcTween(a) {\n                    var i = d3.interpolate(this._current, a);\n                    this._current = i(0);\n                    return function (t) {\n                        return arc(i(t));\n                    };\n                }\n\n            };\n        }\n    };\n    return directiveDefinitionObject;\n});\n","/***\n *    ██████╗ ██████╗  ██████╗  ██████╗ ██████╗ ███████╗███████╗███████╗\n *    ██╔══██╗██╔══██╗██╔═══██╗██╔════╝ ██╔══██╗██╔════╝██╔════╝██╔════╝\n *    ██████╔╝██████╔╝██║   ██║██║  ███╗██████╔╝█████╗  ███████╗███████╗\n *    ██╔═══╝ ██╔══██╗██║   ██║██║   ██║██╔══██╗██╔══╝  ╚════██║╚════██║\n *    ██║     ██║  ██║╚██████╔╝╚██████╔╝██║  ██║███████╗███████║███████║\n *    ╚═╝     ╚═╝  ╚═╝ ╚═════╝  ╚═════╝ ╚═╝  ╚═╝╚══════╝╚══════╝╚══════╝\n *    ███╗   ███╗███████╗████████╗███████╗██████╗\n *    ████╗ ████║██╔════╝╚══██╔══╝██╔════╝██╔══██╗\n *    ██╔████╔██║█████╗     ██║   █████╗  ██████╔╝\n *    ██║╚██╔╝██║██╔══╝     ██║   ██╔══╝  ██╔══██╗\n *    ██║ ╚═╝ ██║███████╗   ██║   ███████╗██║  ██║\n *    ╚═╝     ╚═╝╚══════╝   ╚═╝   ╚══════╝╚═╝  ╚═╝\n *      ____   _                   _    _\n *     |  _ \\ (_) _ __  ___   ___ | |_ (_)__   __ ___\n *     | | | || || '__|/ _ \\ / __|| __|| |\\ \\ / // _ \\\n *     | |_| || || |  |  __/| (__ | |_ | | \\ V /|  __/\n *     |____/ |_||_|   \\___| \\___| \\__||_|  \\_/  \\___|\n *\n *    This directive renders a progress meter chart.\n */\n\nPARTICLE.directive('progressMeter', function ($parse, $window, $timeout) {\n    //explicitly creating a directive definition variable\n    //this may look verbose but is good for clarification purposes\n    //in real life you'd want to simply return the object {...}\n    var directiveDefinitionObject = {\n        //We restrict its use to an element\n        //as usually  <bars-chart> is semantically\n        //more understandable\n        restrict: 'E',\n        //this is important,\n        //we don't want to overwrite our directive declaration\n        //in the HTML mark-up\n        replace: false,\n        //our data source would be an array\n        //passed thru chart-data attribute\n        scope: {\n            colors: '=',\n            datasets: \"=\"\n        },\n        link: function (scope, element, attrs) {\n\n            var drawn = 0;\n            var margin = {top: 20, right: 0, bottom: 30, left: 40}, width, height;\n            width = element.parent().innerWidth() * 0.98;\n            height = element.parent().innerHeight();//$window.innerHeight * 0.75 - margin.top - margin.bottom;\n            if (width < 150) width = 205;\n            if (height <= width) {\n                height = width;\n            }\n            height = width;\n\n            var unregister = scope.$watch(\n                function () {\n                    return element.parent().parent().parent().is(\":visible\");\n                },\n                function () {\n                    $timeout(function () {\n\n                        if (element.parent().height()) {\n                            if (drawn === 0) {\n                                drawMe();\n                                drawn = 1;\n                            }\n                        }\n                    }, 0);\n\n\n                });\n\t\t\t\t\t    /***\n\t\t\t\t\t     *    DEFAULT\n\t\t\t\t\t     *          _                          _              _    _    _\n\t\t\t\t\t     *     ___ |_| ___  ___    ___  ___  _| |   ___  ___ | |_ | |_ |_| ___  ___  ___\n\t\t\t\t\t     *    |_ -|| ||- _|| -_|  | .'||   || . |  |_ -|| -_||  _||  _|| ||   || . ||_ -|\n\t\t\t\t\t     *    |___||_||___||___|  |__,||_|_||___|  |___||___||_|  |_|  |_||_|_||_  ||___|\n\t\t\t\t\t     *                                                                     |___|\n\t\t\t\t\t     *\n\n\t\t\t\t\t              chartInset  :: istance from the edge of the drawn SVG\n\t\t\t\t\t              margin      :: standard top, right...... in pixels - no being used at moment....\n\t\t\t\t\t              barWidth    :: thickness/width of bar in pixels, might make this a percent in the future...\n\t\t\t\t\t              successIndicatorDegWidth      :: the number of degrees the success indicator should span from its start point\n\t\t\t\t\t                                            :: set to 0 to make it go to the very end of the chart\n\n\t\t\t\t\t      **********************************************/\n\t\t\t\t\t      var config = {\n\t\t\t\t\t        chartInset:0,\n\t\t\t\t\t        hasSuccessIndicator:true,\n\t\t\t\t\t        hasBandIndicator:false,\n\t\t\t\t\t        margin: {\n\t\t\t\t\t          top: 0,\n\t\t\t\t\t          right: 0,\n\t\t\t\t\t          bottom: 0,\n\t\t\t\t\t          left: 0\n\t\t\t\t\t        },\n\t\t\t\t\t        barWidth:0.20,\n\t\t\t\t\t        successIndicatorDegWidth:0,\n\t\t\t\t\t        startAngle:-110,\n\t\t\t\t\t        endAngle:110,\n\t\t\t\t\t        needLength:1,\n\t\t\t\t\t        colors: {\n\t\t\t\t\t          primary_fill: \"color-pewter\",\n\t\t\t\t\t          color_2: \"boldorange-0-fade-1\",\n\t\t\t\t\t          success: \"color-bluepuddy-0-fade-5\",\n\t\t\t\t\t          needle: \"color-bluepuddy-0-fade-0\",\n\t\t\t\t\t          bg: \"color-white-6-fade-8\",\n\t\t\t\t\t          legend:\"color-bluepuddy-8-fade-0\"\n\t\t\t\t\t        }\n\t\t\t\t\t      };\n\n            var drawMe = function () {\n                var twoPi = 2 * Math.PI;\n\n                var dataset = {\n                    progress: Math.floor(Math.random() * 100),\n                    total: 100\n                };\n\n\n                var dataset2 = {\n                    progress: Math.floor(Math.random() * 100),\n                    total: 100\n                };\n                var i, bits = 3;\n                var dataSets = [], archs = [],\n                    bandWidth = ((width - dataSets.length * 2) * 0.25) / dataSets.length;\n\n                for (i = 0; i < bits; i++) {\n                    dataSets.push({progress: Math.floor(Math.random() * 100), total: 100});\n                }\n\n                var arcs = [];\n\n\n                var arc = d3.svg.arc()\n                    .innerRadius(width * 0.25 - width / (2 * dataSets.length) / 2)\n                    .outerRadius(width * 0.50)\n                    .startAngle(0);\n\n                var arc2 = d3.svg.arc()\n                    .innerRadius(width * 0.29)\n                    .outerRadius(width * 0.395)\n                    .startAngle(0);\n\n                var w = width,\n                    h = height,\n                    tw = ( w / 2 ) * ( w / h ),\n                    th = ( h / 2 );\n\n                var svg = d3.select(element[0])\n                    .append(\"svg\")\n                    .attr(\"viewBox\", \"0 0 \" + ( tw * 2 ) + \" \" + ( th * 2 ) + \"\")\n                    .attr(\"preserveAspectRatio\", \"xMinYMin slice\")\n                    .append(\"g\")\n                    .attr(\"transform\", \"translate(\" + tw + \",\" + th + \")\");\n\n\n                var meter = svg.append(\"g\")\n                    .attr(\"class\", \"info\");\n\n                var background = meter.append(\"path\")\n                    .datum({endAngle: twoPi})\n                    .attr(\"class\", config.colors.bg)\n                    .attr(\"d\", arc);\n\n\n                var text = meter.append(\"text\")\n                    .attr(\"text-anchor\", \"middle\")\n                    .attr(\"dy\", \".35em\")\n                    .attr(\"font-size\", \"4em\")\n                    .attr(\"font-weight\", \"300\")\n                    .text((scope.datasets[0] * 100) + \"%\");\n\n                var words = meter.append(\"text\")\n                    .attr(\"text-anchor\", \"middle\")\n                    .attr(\"dy\", \"3em\")\n                    .attr(\"font-size\", \"1em\")\n                    .attr(\"font-weight\", \"300\")\n                    .text(\"Complete\");\n\n\n                var foreground = meter.append(\"path\")\n                    .datum({endAngle: 0})\n                    .attr(\"class\", \"bg-\" + (scope.datasets[0] > 0.5  ? config.colors.success : config.colors.needle))\n                    .attr(\"d\", arc);\n                // var background2 = meter.append(\"path\")\n                //          .datum({endAngle: twoPi})\n                //          .attr(\"class\", \"bg-\"+scope.colors.bg)\n                //          .attr(\"d\", arc2);\n                //\n                //      var foreground2 = meter.append(\"path\")\n                //          .datum({endAngle:0})\n                //          .attr(\"class\", \"bg-\"+(scope.datasets[1]>scope.colors.min_success[1]?scope.colors.success:scope.colors.color_2))\n                //          .attr(\"d\", arc2);\n                //\n                //          console.log(scope.datasets)\n\n                foreground.transition()\n                    .duration(1000)\n                    .ease(\"linear\")\n                    .attrTween(\"d\", function (d) {\n                        var interpolate = d3.interpolate(d.endAngle, twoPi * scope.datasets[0]);\n                        return function (t) {\n                            d.endAngle = interpolate(t);\n                            return arc(d);\n                        };\n                    });\n\n\n                // foreground2.transition()\n                //         .duration(1000)\n                //         .ease(\"linear\")\n                //         .attrTween(\"d\", function(d) {\n                //                    var interpolate = d3.interpolate(d.endAngle, twoPi *  scope.datasets[1])\n                //                    return function(t) {\n                //                       d.endAngle = interpolate(t);\n                //                       return arc2(d);\n                //                    }\n                //                 });\n\n\n            };\n        }\n    };\n    return directiveDefinitionObject;\n});\n","/***\n *    ███████╗███████╗ ██████╗████████╗██╗ ██████╗ ███╗   ██╗\n *    ██╔════╝██╔════╝██╔════╝╚══██╔══╝██║██╔═══██╗████╗  ██║\n *    ███████╗█████╗  ██║        ██║   ██║██║   ██║██╔██╗ ██║\n *    ╚════██║██╔══╝  ██║        ██║   ██║██║   ██║██║╚██╗██║\n *    ███████║███████╗╚██████╗   ██║   ██║╚██████╔╝██║ ╚████║\n *    ╚══════╝╚══════╝ ╚═════╝   ╚═╝   ╚═╝ ╚═════╝ ╚═╝  ╚═══╝\n *    ██╗  ██╗███████╗ █████╗ ██████╗ ███████╗██████╗\n *    ██║  ██║██╔════╝██╔══██╗██╔══██╗██╔════╝██╔══██╗\n *    ███████║█████╗  ███████║██║  ██║█████╗  ██████╔╝\n *    ██╔══██║██╔══╝  ██╔══██║██║  ██║██╔══╝  ██╔══██╗\n *    ██║  ██║███████╗██║  ██║██████╔╝███████╗██║  ██║\n *    ╚═╝  ╚═╝╚══════╝╚═╝  ╚═╝╚═════╝ ╚══════╝╚═╝  ╚═╝\n *      ____   _                   _    _\n *     |  _ \\ (_) _ __  ___   ___ | |_ (_)__   __ ___\n *     | | | || || '__|/ _ \\ / __|| __|| |\\ \\ / // _ \\\n *     | |_| || || |  |  __/| (__ | |_ | | \\ V /|  __/\n *     |____/ |_||_|   \\___| \\___| \\__||_|  \\_/  \\___|\n *\n *    This directive renders a structural component of the page,\n *    based on information in the UI object returned by the data source.\n */\n\nPARTICLE.directive('sectionHeader', function () {\n    return {\n        restrict: \"E\",\n        scope: {\n            item: \"=\"\n        },\n        templateUrl: \"/directives/sectionheader.html\"\n    };\n});\n","/***\n* ██████╗  █████╗ ██████╗      ██████╗██╗  ██╗ █████╗ ██████╗ ████████╗\n* ██╔══██╗██╔══██╗██╔══██╗    ██╔════╝██║  ██║██╔══██╗██╔══██╗╚══██╔══╝\n* ██████╔╝███████║██████╔╝    ██║     ███████║███████║██████╔╝   ██║\n* ██╔══██╗██╔══██║██╔══██╗    ██║     ██╔══██║██╔══██║██╔══██╗   ██║\n* ██████╔╝██║  ██║██║  ██║    ╚██████╗██║  ██║██║  ██║██║  ██║   ██║\n* ╚═════╝ ╚═╝  ╚═╝╚═╝  ╚═╝     ╚═════╝╚═╝  ╚═╝╚═╝  ╚═╝╚═╝  ╚═╝   ╚═╝\n*\n*      ____   _                   _    _\n*     |  _ \\ (_) _ __  ___   ___ | |_ (_)__   __ ___\n*     | | | || || '__|/ _ \\ / __|| __|| |\\ \\ / // _ \\\n*     | |_| || || |  |  __/| (__ | |_ | | \\ V /|  __/\n*     |____/ |_||_|   \\___| \\___| \\__||_|  \\_/  \\___|\n*\n*    This directive renders a bar chart.\n*/\n\nPARTICLE.directive('stackedBarchart', function ($parse, $window, $timeout) {\n\n  /* Usage:\n    1. <needle-chart></needle-chart> is semantically\n\n    Attr Params:\n      1. config\n      2. datasets*/\n\n    var directiveDefinitionObject = {\n        //Restrict use to an element\n        restrict: 'E',\n        //Do NOT overwrite our directive declaration in the HTML mark-up\n        replace: false,\n        //Chart data and config passed thru attributes\n        scope: {\n            config: '=',\n            datasets: \"=\",\n            colors: \"=\",\n            percentcomplete: \"=\",\n            successpercent: \"=\",\n            max:\"=\",\n            min:\"=\",\n            mockup:\"=\",\n            index:\"=\"\n        },\n    link: function (scope, element, attrs) {\n        var drawn = 0;\n\n    $timeout(function() {\n\n            if(drawn===0){\n                drawMe();\n                drawn=1;\n            }\n\n    }, 50);\n\n    var drawMe = function() {\n\n        var width, height, dataset, layers, spending, x, y, z, chart, xAxis, yAxis, layer;\n\n        /***\n         *    DEFAULT\n         *          _                          _              _    _    _\n         *     ___ |_| ___  ___    ___  ___  _| |   ___  ___ | |_ | |_ |_| ___  ___  ___\n         *    |_ -|| ||- _|| -_|  | .'||   || . |  |_ -|| -_||  _||  _|| ||   || . ||_ -|\n         *    |___||_||___||___|  |__,||_|_||___|  |___||___||_|  |_|  |_||_|_||_  ||___|\n         *                                                                     |___|\n         *\n\n                  chartInset  :: istance from the edge of the drawn SVG\n                  margin      :: standard top, right...... in pixels - no being used at moment....\n                  barWidth    :: thickness/width of bar in pixels, might make this a percent in the future...\n                  successIndicatorDegWidth      :: the number of degrees the success indicator should span from its start point\n                                                :: set to 0 to make it go to the very end of the chart\n\n          **********************************************/\n          var config = {\n              chartInset:0,\n              hasSuccessIndicator:true,\n              hasBandIndicator:false,\n              margin: {\n                  top: 20,\n                  right: 20,\n                  bottom: 30,\n                  left: 50\n              },\n              barWidth:10,\n              widthPercentSize:1.1,\n              needLength:1,\n              colors: {\n                  primary_fill: \"color-pewter\",\n                  color_2: \"boldorange-0-fade-1\",\n                  success: \"color-bluepuddy-0-fade-5\",\n                  needle: \"color-pewter-0-fade-0\",\n                  bg: \"color-white-6-fade-8\",\n                  legend:\"color-bluepuddy-8-fade-0\"\n              },\n              max:100,\n              min:0\n          }; // End config\n\n          /***\n          *                                     _                _       ___            _  _\n          *     ___  _ _  ___  ___  _ _ _  ___ |_|| |_  ___    _| | ___ |  _| ___  _ _ | || |_  ___\n          *    | . || | || -_||  _|| | | ||  _|| ||  _|| -_|  | . || -_||  _|| .'|| | || ||  _||_ -|\n          *    |___| \\_/ |___||_|  |_____||_|  |_||_|  |___|  |___||___||_|  |__,||___||_||_|  |___|\n          *\n          */\n\n          if (scope.config !== undefined){\n              Object.keys(scope.config).forEach(function(key,index) {\n                  config[key] = scope.config[key];\n              });\n          }\n\n          /***\n          *                 _                                         _\n          *     _____  ___ |_| ___    ___  ___  ___  ___  ___  ___  _| | _ _  ___  ___\n          *    |     || .'|| ||   |  | . ||  _|| . ||  _|| -_|| -_|| . || | ||  _|| -_|\n          *    |_|_|_||__,||_||_|_|  |  _||_|  |___||___||___||___||___||___||_|  |___|\n          *                          |_|\n          */\n\n          /***\n          *\n          *     ___\n          *    |_  |\n          *     _| |_  _\n          *    |_____||_|   Select the directive element to push our SVG into:\n          *\n          */\n\n          el = d3.select(element[0]);\n\n          /***\n          *\n          *     ___\n          *    |_  |\n          *    |  _| _     Calculate the width of the width and height of the chart\n          *    |___||_|    Height is fixed to 200, width varies with parent element width\n          *\n          */\n\n          width = element[0].parentElement.clientWidth;\n          height = 200;\n\n          /***\n          *     ___\n          *    |_  |\n          *    |_  | _\n          *    |___||_|    Prepare dataset to be used by D3\n          *                Update this section to match updated dataset\n          */\n\n          dataset = scope.datasets;\n          spending = [\"DME\", \"OM\"];\n\n          // Parse the data\n          layers = d3.layout.stack()(spending.map(function(c) {\n              return dataset.map(function(d) {\n                return {x: d.year, y: d[c]};\n            });\n          }));\n\n         /***\n          *     ___\n          *    | | |\n          *    |_  | _\n          *      |_||_|    Create Chart Objects: X/Y Scales, Primary Chart Object,\n          *                X/Y Axes, and Data Bars.\n          */\n\n          x = d3.scale.ordinal()\n              .rangeRoundBands([config.margin.left, width - config.margin.right], 0.2)\n              .domain(layers[0].map(function(d) { return d.x; }));\n\n          y = d3.scale.linear()\n              .rangeRound([height - config.margin.bottom, config.margin.top])\n              .domain([0, d3.max(layers[layers.length - 1], function(d) { return d.y0 + d.y; })])\n              .nice();\n\n          z = d3.scale.category10();\n\n          /*chart = el.append(\"svg\")\n              .attr(\"height\",height)\n              .attr(\"width\",width)\n              .attr(\"class\", \"chart\");*/\n\n\n\n\n      chart = d3.select(element[0])\n          .append(\"svg\")\n          .attr(\"viewBox\", \"0 0 \" + width + \" \" + height + \"\")\n          .attr(\"preserveAspectRatio\", \"xMinYMin slice\")\n          .append('g')\n          .attr(\"height\",height)\n          .attr(\"width\",width);\n\n\n          xAxis = d3.svg.axis()\n              .scale(x)\n              .orient(\"bottom\")\n              .outerTickSize(0);\n\n          yAxis = d3.svg.axis()\n              .scale(y)\n              .orient(\"left\")\n              .innerTickSize(- width + config.margin.left + config.margin.right)\n              .outerTickSize(0)\n              .ticks(5)\n              .tickPadding(10);\n\n          layer = chart.selectAll(\".layer\")\n              .data(layers)\n            .enter().append(\"g\")\n              .attr(\"class\", \"layer\")\n              .style(\"fill\", function(d, i) { return z(i); });\n\n          layer.selectAll(\"rect\")\n              .data(function(d) { return d; })\n            .enter().append(\"rect\")\n              .attr(\"x\", function(d) { return x(d.x); })\n              .attr(\"y\", function(d) { return y(d.y + d.y0); })\n              .attr(\"height\", function(d) { return y(d.y0) - y(d.y + d.y0); })\n              .attr(\"width\", x.rangeBand() - 1);\n\n          var x_axis = chart.append(\"g\")\n              .attr(\"class\", \"axis axis--x\")\n              .attr(\"transform\", \"translate(0,\" + (height - config.margin.bottom) + \")\")\n              .attr(\"class\", \"color-white-0\")\n              .call(xAxis);\n\n          var y_axis = chart.append(\"g\")\n              .attr(\"class\", \"axis axis--y\")\n              .attr(\"transform\", \"translate(\" + (config.margin.left) + \",0)\")\n              .attr(\"class\", \"color-white-0\")\n              .call(yAxis);\n\n          y_axis.selectAll(\"text\")\n              .text(function(d){\n                  return (\"$ \" + d + \"M\");\n              });\n\n      }; // DrawMe end\n\n          /***\n          *     ___\n          *    |  _|\n          *    |_  | _\n          *    |___||_|    Run code and return visualization (D3) object\n          */\n\n\n    } // link end\n\n  }; // directiveDefinitionObject end\n  return directiveDefinitionObject;\n}); //End Directive","/***\n* ████████╗██╗███╗   ███╗███████╗███████╗███████╗██████╗ ██╗███████╗███████╗    ██████╗  █████╗ ██████╗ ██████╗ ██╗      ██████╗ ████████╗\n* ╚══██╔══╝██║████╗ ████║██╔════╝██╔════╝██╔════╝██╔══██╗██║██╔════╝██╔════╝    ██╔══██╗██╔══██╗██╔══██╗██╔══██╗██║     ██╔═══██╗╚══██╔══╝\n*    ██║   ██║██╔████╔██║█████╗  ███████╗█████╗  ██████╔╝██║█████╗  ███████╗    ██████╔╝███████║██████╔╝██████╔╝██║     ██║   ██║   ██║\n*    ██║   ██║██║╚██╔╝██║██╔══╝  ╚════██║██╔══╝  ██╔══██╗██║██╔══╝  ╚════██║    ██╔══██╗██╔══██║██╔══██╗██╔═══╝ ██║     ██║   ██║   ██║\n*    ██║   ██║██║ ╚═╝ ██║███████╗███████║███████╗██║  ██║██║███████╗███████║    ██████╔╝██║  ██║██║  ██║██║     ███████╗╚██████╔╝   ██║\n*    ╚═╝   ╚═╝╚═╝     ╚═╝╚══════╝╚══════╝╚══════╝╚═╝  ╚═╝╚═╝╚══════╝╚══════╝    ╚═════╝ ╚═╝  ╚═╝╚═╝  ╚═╝╚═╝     ╚══════╝ ╚═════╝    ╚═╝\n*\n*      ____   _                   _    _\n*     |  _ \\ (_) _ __  ___   ___ | |_ (_)__   __ ___\n*     | | | || || '__|/ _ \\ / __|| __|| |\\ \\ / // _ \\\n*     | |_| || || |  |  __/| (__ | |_ | | \\ V /|  __/\n*     |____/ |_||_|   \\___| \\___| \\__||_|  \\_/  \\___|\n*\n*    This directive renders a timeseries barplot.\n*/\n\nPARTICLE.directive('timeseriesBarplot', function ($parse, $window, $timeout) {\n\n  /* Usage:\n    1. <needle-chart></needle-chart> is semantically\n\n    Attr Params:\n      1. config\n      2. datasets*/\n\n    var directiveDefinitionObject = {\n        //Restrict use to an element\n        restrict: 'E',\n        //Do NOT overwrite our directive declaration in the HTML mark-up\n        replace: false,\n        //Chart data and config passed thru attributes\n        scope: {\n            config: '=',\n            datasets: \"=\",\n            colors: \"=\",\n            percentcomplete: \"=\",\n            successpercent: \"=\",\n            max:\"=\",\n            min:\"=\",\n            mockup:\"=\",\n            index:\"=\"\n        },\n    link: function (scope, element, attrs) {\n\n    var drawn = 0;\n\n    $timeout(function() {\n            if(drawn===0){\n                drawMe();\n                drawn=1;\n            }\n    }, 1);\n\n    var drawMe = function() {\n\n        var width, height, datasetfull, dataset, layers;\n\n        /***\n         *    DEFAULT\n         *          _                          _              _    _    _\n         *     ___ |_| ___  ___    ___  ___  _| |   ___  ___ | |_ | |_ |_| ___  ___  ___\n         *    |_ -|| ||- _|| -_|  | .'||   || . |  |_ -|| -_||  _||  _|| ||   || . ||_ -|\n         *    |___||_||___||___|  |__,||_|_||___|  |___||___||_|  |_|  |_||_|_||_  ||___|\n         *                                                                     |___|\n         *\n\n                  chartInset  :: istance from the edge of the drawn SVG\n                  margin      :: standard top, right...... in pixels - no being used at moment....\n                  barWidth    :: thickness/width of bar in pixels, might make this a percent in the future...\n                  successIndicatorDegWidth      :: the number of degrees the success indicator should span from its start point\n                                                :: set to 0 to make it go to the very end of the chart\n\n          **********************************************/\n          var config = {\n              chartInset:0,\n              hasSuccessIndicator:true,\n              hasBandIndicator:false,\n              margin: {\n                  top: 20,\n                  right: 20,\n                  bottom: 60,\n                  left: 60\n              },\n              barWidth:20,\n              widthPercentSize:1.1,\n              needLength:1,\n              colors: {\n                  primary_fill: \"color-pewter\",\n                  color_2: \"boldorange-0-fade-1\",\n                  success: \"color-bluepuddy-0-fade-5\",\n                  needle: \"color-pewter-0-fade-0\",\n                  bg: \"color-white-6-fade-8\",\n                  legend:\"color-bluepuddy-8-fade-0\"\n              },\n              max:100,\n              min:0,\n              endDate: new Date(),\n              startDate: new Date() - 1000*60*60*24*365\n          }; // End config\n\n          console.log('timeseries dates', config.endDate, config.startDate);\n\n          /***\n          *                                     _                _       ___            _  _\n          *     ___  _ _  ___  ___  _ _ _  ___ |_|| |_  ___    _| | ___ |  _| ___  _ _ | || |_  ___\n          *    | . || | || -_||  _|| | | ||  _|| ||  _|| -_|  | . || -_||  _|| .'|| | || ||  _||_ -|\n          *    |___| \\_/ |___||_|  |_____||_|  |_||_|  |___|  |___||___||_|  |__,||___||_||_|  |___|\n          *\n          */\n\n          if (scope.config !== undefined){\n              Object.keys(scope.config).forEach(function(key,index) {\n                  config[key] = scope.config[key];\n              });\n          }\n\n          /***\n          *                 _                                         _\n          *     _____  ___ |_| ___    ___  ___  ___  ___  ___  ___  _| | _ _  ___  ___\n          *    |     || .'|| ||   |  | . ||  _|| . ||  _|| -_|| -_|| . || | ||  _|| -_|\n          *    |_|_|_||__,||_||_|_|  |  _||_|  |___||___||___||___||___||___||_|  |___|\n          *                          |_|\n          */\n\n          /***\n          *\n          *     ___\n          *    |_  |\n          *     _| |_  _\n          *    |_____||_|   Select the directive element to push our SVG into:\n          *\n          */\n\n          el = d3.select(element[0]);\n\n          /***\n          *\n          *     ___\n          *    |_  |\n          *    |  _| _     Calculate the width of the width and height of the chart\n          *    |___||_|    Height is fixed to 200, width varies with parent element width\n          *\n          */\n\n          width = element[0].parentElement.clientWidth;\n          height = 275;\n\n          /***\n          *     ___\n          *    |_  |\n          *    |_  | _\n          *    |___||_|    Prepare dataset to be used by D3\n          *                Update this section to match updated dataset\n          */\n\n          dataset = scope.datasets;\n          readDate = d3.time.format(\"%m/%d/%y\").parse;\n          dataset.forEach(function(d){\n              d.date = new Date(d.date);\n          });\n\n              // Function below establishes start and end dates for the graph and removes\n              // the values that fall outside the range. It also parses data elements in X and Y\n              // components that will be used for plotting.\n\n              var startdate = readDate(\"06/30/15\");\n              var enddate = readDate(\"06/30/16\");\n              var sub = [];\n              for(var i = 0; i < dataset.length; i++){\n                  if(dataset[i].date >= startdate & dataset[i].date <= enddate){\n                      sub.push(d3.values(dataset)[i]);\n                  }\n                  else {}\n              }\n\n              // Parse the data\n              layers = sub.map(function(d) {\n                  return {x: d.date, y: +d.rating, y0: +0};\n              });\n\n          /***\n          *     ___\n          *    | | |\n          *    |_  | _\n          *      |_||_|    Create Chart Objects: X/Y Scales, Primary Chart Object,\n          *                X/Y Axes, and Data Bars.\n          */\n\n              // Define X Scale\n              xScale = d3.time.scale()\n                  .domain([startdate, enddate])\n                  .range([0 + config.margin.left, width - config.margin.right]);\n\n              // Define Y Scale\n              yScale = d3.scale.linear()\n                  .domain([0, 5])\n                  .range([height-config.margin.bottom, config.margin.top])\n                  .nice();\n\n              var yticks = 5;\n              var xticks = 12;\n              var ytickdist = (height-config.margin.bottom - config.margin.top)/yticks;\n              var xtickdist = (width - config.margin.right - config.margin.left)/xticks;\n\n              var chart = el.append(\"svg\")\n                  .attr(\"viewBox\", \"0 0 \" + width + \" \" + height + \"\")\n                  .attr(\"preserveAspectRatio\", \"xMinYMin slice\")\n                  .append('g')\n                  .attr(\"height\",height)\n                  .attr(\"width\",width);\n\n              var xAxis = d3.svg.axis()\n                  .scale(xScale)\n                  .orient(\"bottom\")\n                  .outerTickSize(0);\n\n              var yAxis = d3.svg.axis()\n                  .scale(yScale)\n                  .orient(\"left\")\n                  .ticks(yticks)\n                  .innerTickSize(- width + config.margin.left + config.margin.right)\n                  .outerTickSize(0)\n                  .tickPadding(10);\n\n              var x_axis = chart.append(\"g\") // Draw axes: x axis\n                  // .attr(\"id\",\"xaxis\"+indexval)\n                  .attr(\"class\", \"axis x\")\n                  .attr(\"transform\",\"translate(0, \" + (height - config.margin.bottom) + \")\")\n                  .call(xAxis)\n                      .selectAll(\"text\")\n                    .attr(\"class\",\"color-white\")\n                      .style(\"text-anchor\", function(d) {\n                          if(d.getMonth() !== 0){\n                              return \"middle\";\n                          } else {\n                              return \"start\";\n                          }\n                      })\n                      .attr(\"dy\", \"10px\")\n                      .attr(\"transform\", function(d) {\n                          if(d.getMonth() !== 0){\n                              return \"translate(\" + xtickdist/2 + \", 0)\";\n                          }\n                      })\n                      .style(\"font-weight\", function(d) {\n                          if(d.getMonth() === 0){\n                              return \"bold\";\n                          }\n                      });\n\n              var y_axis = chart.append(\"g\") // Draw axes: y axis\n                  // .attr(\"id\",\"yaxis\"+indexval)\n                  .attr(\"class\", \"axis y\")\n                  .attr(\"transform\",\"translate(\" + config.margin.left + \",0)\")\n                  .call(yAxis)\n                      .selectAll(\"text\")\n                      .attr(\"class\",\"color-white\")\n                      .attr(\"transform\",\"translate(0, \" + ytickdist/2 + \")\")\n                      .style(\"text-anchor\", \"middle\")\n                      .text(function(d) {\n                          if(d == \"0\"){\n                              return null;\n                          } else {\n                              return d;\n                          }\n                      });\n              var yTick = (height - config.margin.top - config.margin.bottom)/yticks;\n              y_axis.append(\"g\")\n                  .append(\"text\")\n                  .attr(\"x\", (-height + config.margin.bottom + config.margin.top)/2 - config.margin.top)\n                  .attr(\"y\", -config.margin.left/2)\n                  .attr(\"transform\", \"rotate(-90)\")\n                  .attr(\"text-anchor\", \"middle\")\n                  .style(\"font-weight\", \"bold\")\n                  .attr(\"class\",\"color-white\")\n                  .text(\"Rating\");\n\n              x_axis.append(\"g\")\n                  .append(\"text\")\n                  .attr(\"y\", 50)\n                  .attr(\"x\", (0.5 * width))\n                  .attr(\"text-anchor\", \"middle\")\n                  .style(\"font-weight\", \"bold\")\n                  .attr(\"class\",\"color-white\")\n                  .text(\"Submission Date\");\n\n              var bars = chart.selectAll(\"rect\") // Create Bars\n                  .data(layers)\n                  .enter()\n                  .append(\"rect\")\n                      .attr(\"x\",function(d){\n                          return xScale(d.x);\n                      })\n                      .attr(\"y\", function(d) {\n                          return yScale(d.y0 + d.y);\n                      })\n                      .attr(\"width\", config.barWidth)\n                      .attr(\"height\", function(d) {\n                          return yScale(d.y0) - yScale(d.y + d.y0);\n                      })\n                      .attr(\"date\", function(d) {\n                          return d.x;\n                      })\n                      .attr(\"rating\", function(d){\n                          return d.y;\n                      })\n                      .attr(\"class\", function(d) {\n                          if(d.y == 3) {\n                              return \"bg-color-offgold-0-fade-4\";\n                          } else if (d.y == \"1\" | d.y == \"2\") {\n                              return \"bg-color-boldred-0-fade-4\";\n                          } else if (d.y == \"4\" | d.y == \"5\") {\n                              return \"bg-color-lillypad-0-fade-4\";\n                          } else {\n                              return \"#000\";\n                          }\n                      });\n\n      }; // DrawMe end\n\n          /***\n          *     ___\n          *    |  _|\n          *    |_  | _\n          *    |___||_|    Run code and return visualization (D3) object\n          *\n          */\n\n    } // link end\n\n  }; // directiveDefinitionObject end\n  return directiveDefinitionObject;\n}); //End Directive\n\n\n\n\n\n\n\n","/***\n* ████████╗██████╗ ███████╗███╗   ██╗██████╗      ██████╗██╗  ██╗ █████╗ ██████╗ ████████╗\n* ╚══██╔══╝██╔══██╗██╔════╝████╗  ██║██╔══██╗    ██╔════╝██║  ██║██╔══██╗██╔══██╗╚══██╔══╝\n*    ██║   ██████╔╝█████╗  ██╔██╗ ██║██║  ██║    ██║     ███████║███████║██████╔╝   ██║\n*    ██║   ██╔══██╗██╔══╝  ██║╚██╗██║██║  ██║    ██║     ██╔══██║██╔══██║██╔══██╗   ██║\n*    ██║   ██║  ██║███████╗██║ ╚████║██████╔╝    ╚██████╗██║  ██║██║  ██║██║  ██║   ██║\n*    ╚═╝   ╚═╝  ╚═╝╚══════╝╚═╝  ╚═══╝╚═════╝      ╚═════╝╚═╝  ╚═╝╚═╝  ╚═╝╚═╝  ╚═╝   ╚═╝\n*\n*      ____   _                   _    _\n*     |  _ \\ (_) _ __  ___   ___ | |_ (_)__   __ ___\n*     | | | || || '__|/ _ \\ / __|| __|| |\\ \\ / // _ \\\n*     | |_| || || |  |  __/| (__ | |_ | | \\ V /|  __/\n*     |____/ |_||_|   \\___| \\___| \\__||_|  \\_/  \\___|\n*\n*    This directive renders a trend chart.\n*/\n\nPARTICLE.directive('trendChart', function ($parse, $window, $timeout) {\n\n  /* Usage:\n    1. <needle-chart></needle-chart> is semantically\n\n    Attr Params:\n      1. config\n      2. datasets*/\n\n    var directiveDefinitionObject = {\n        //Restrict use to an element\n        restrict: 'E',\n        //Do NOT overwrite our directive declaration in the HTML mark-up\n        replace: false,\n        //Chart data and config passed thru attributes\n        scope: {\n            config: '=',\n            datasets: \"=\",\n            colors: \"=\",\n            percentcomplete: \"=\",\n            successpercent: \"=\",\n            max:\"=\",\n            min:\"=\",\n            mockup:\"=\",\n            index:\"=\"\n        },\n\n    link: function (scope, element, attrs) {\n        var drawn = 0;\n\n    $timeout(function() {\n        if (element.parent().height()) {\n            if(drawn===0){\n                drawMe(scope.index);\n                drawn=1;\n            }\n        }\n    }, 5);\n    var drawMe = function(indexval) {\n\n\n        var width, height, dataset, layers;\n\n        /***\n        *    DEFAULT\n        *          _                          _              _    _    _\n        *     ___ |_| ___  ___    ___  ___  _| |   ___  ___ | |_ | |_ |_| ___  ___  ___\n        *    |_ -|| ||- _|| -_|  | .'||   || . |  |_ -|| -_||  _||  _|| ||   || . ||_ -|\n        *    |___||_||___||___|  |__,||_|_||___|  |___||___||_|  |_|  |_||_|_||_  ||___|\n        *                                                                     |___|\n        *\n        *\n        *        chartInset  :: istance from the edge of the drawn SVG\n        *        margin      :: standard top, right...... in pixels - no being used at moment....\n        *        barWidth    :: thickness/width of bar in pixels, might make this a percent in the future...\n        *        successIndicatorDegWidth      :: the number of degrees the success indicator should span from its start point\n        *                                      :: set to 0 to make it go to the very end of the chart\n        *\n        ***/\n          var config = {\n              chartInset:0,\n              hasSuccessIndicator:true,\n              hasBandIndicator:false,\n              margin: {\n                  top: 10,\n                  right: 40,\n                  bottom: 60,\n                  left: 70\n              },\n              barWidth:10,\n              widthPercentSize:1.1,\n              needLength:1,\n              colors: {\n                  primary_fill: \"color-pewter\",\n                  color_2: \"boldorange-0-fade-9\",\n                  success: \"color-bluepuddy-0-fade-5\",\n                  needle: \"color-pewter-0-fade-0\",\n                  bg: \"color-white-6-fade-8\",\n                  legend:\"color-bluepuddy-8-fade-0\"\n              },\n              max:100,\n              min:0\n          }; // End config\n\n          /***\n          *                                     _                _       ___            _  _\n          *     ___  _ _  ___  ___  _ _ _  ___ |_|| |_  ___    _| | ___ |  _| ___  _ _ | || |_  ___\n          *    | . || | || -_||  _|| | | ||  _|| ||  _|| -_|  | . || -_||  _|| .'|| | || ||  _||_ -|\n          *    |___| \\_/ |___||_|  |_____||_|  |_||_|  |___|  |___||___||_|  |__,||___||_||_|  |___|\n          *\n          */\n\n          if (scope.config !== undefined){\n              Object.keys(scope.config).forEach(function(key,index) {\n                  config[key] = scope.config[key];\n              });\n          }\n\n          /***\n          *                 _                                         _\n          *     _____  ___ |_| ___    ___  ___  ___  ___  ___  ___  _| | _ _  ___  ___\n          *    |     || .'|| ||   |  | . ||  _|| . ||  _|| -_|| -_|| . || | ||  _|| -_|\n          *    |_|_|_||__,||_||_|_|  |  _||_|  |___||___||___||___||___||___||_|  |___|\n          *                          |_|\n          */\n\n          /***\n          *\n          *     ___\n          *    |_  |\n          *     _| |_  _\n          *    |_____||_|   Select the directive element to push our SVG into:\n          *\n          */\n\n          el = d3.select(element[0]);\n\n          /***\n          *\n          *     ___\n          *    |_  |\n          *    |  _| _     Calculate the width of the width and height of the chart\n          *    |___||_|    Height is fixed to 400, width varies with parent element width\n          *\n          */\n\n          width = element[0].parentElement.clientWidth;\n          height = 275;\n\n          /***\n          *     ___\n          *    |_  |\n          *    |_  | _\n          *    |___||_|    Prepare dataset to be used by D3\n          *                Update this section to match updated dataset\n          */\n\n          dataset = scope.datasets;\n          dataset.forEach(function(d){\n              d.date = new Date(d.date);\n          });\n\n          var color = d3.scale.category10();\n          color.domain(d3.keys(dataset[0]).filter(function(key) { return key !== \"date\" & key !== \"label\"; }));\n\n          var metrics = color.domain().map(function(name) {\n              return {\n                  name: name,\n                  values: dataset.map(function(d) {\n                      return {date: d.date, value: +d[name]};\n                  })\n              };\n          });\n\n          var xTickValues = [];\n          metrics[0].values.forEach(function(d){\n              xTickValues.push(d.date);\n          });\n\n          var  date_format = d3.time.format(\"%b %y\");\n\n          /***\n          *     ___\n          *    | | |\n          *    |_  | _\n          *      |_||_|    Create Chart Objects: X/Y Scales, Primary Chart Object,\n          *                X/Y Axes, and Data Bars.\n          */\n\n          // Define X Scale\n          xScale = d3.time.scale()\n              .domain(d3.extent(dataset, function(d) { return d.date; }))\n              .range([0 + config.margin.left, width - config.margin.right]);\n\n          // Define Y Scale\n          yScale = d3.scale.linear()\n              .domain([0, 100])\n              .range([height-config.margin.bottom, config.margin.top]);\n\n          var yticks = 5;\n          var xticks = dataset.length;\n\n\n      var chart = d3.select(element[0])\n          .append(\"svg\")\n          .attr(\"viewBox\", \"0 0 \" + width + \" \" + height + \"\")\n          .attr(\"preserveAspectRatio\", \"xMinYMin slice\")\n          .append('g')\n          .attr(\"height\",height)\n          .attr(\"width\",width);\n\n          var xAxis = d3.svg.axis()\n              .scale(xScale)\n              .orient(\"bottom\")\n              .innerTickSize(-height + config.margin.top + config.margin.bottom)\n              .outerTickSize(0)\n              .tickPadding(10)\n              .tickValues(xTickValues)\n              .tickFormat(date_format);\n\n          var yAxis = d3.svg.axis()\n              .scale(yScale)\n              .orient(\"left\")\n              .ticks(yticks)\n              .innerTickSize(- width + config.margin.left + config.margin.right)\n              .outerTickSize(0)\n              .tickPadding(5);\n\n          var x_axis = chart.append(\"g\") // Draw axes: x axis\n              .attr(\"id\",\"xaxis\")\n              .attr(\"class\", \"color-white\")\n              .attr(\"transform\",\"translate(0, \" + (height - config.margin.bottom) + \")\")\n              .call(xAxis)\n                  .selectAll(\"text\")\n                  .style(\"text-anchor\", \"middle\")\n                  .attr(\"dy\", \"10px\")\n                  .style(\"font-weight\", function(d) {\n                      if(d.getMonth() === 0){\n                          return \"bold\";\n                      }\n                  });\n\n          var y_axis = chart.append(\"g\") // Draw axes: y axis\n              .attr(\"id\",\"yaxis\"+indexval)\n              .attr(\"class\", \"color-white\")\n              .attr(\"transform\",\"translate(\" + config.margin.left + \",0)\")\n              .call(yAxis)\n                  .selectAll(\"text\")\n                  .style(\"text-anchor\", \"end\")\n                  .text(function(d) {\n                      return d + \"%\";\n                  });\n\n          d3.select(\"#yaxis\"+indexval)\n              .append(\"text\")\n              .attr(\"x\", (-height + config.margin.bottom + config.margin.top)/2 - config.margin.top)\n              .attr(\"y\", -config.margin.left/1.5)\n              .attr(\"transform\", \"rotate(-90)\")\n              .attr(\"text-anchor\", \"middle\")\n              .style(\"font-weight\", \"bold\")\n              .text(\"Performance\");\n\n          d3.select(\"#xaxis\")\n              .append(\"text\")\n              .attr(\"y\", 40)\n              .attr(\"x\", (0.5 * width))\n              .attr(\"text-anchor\", \"middle\")\n              .text(\"Snapshot Date\");\n\n          var line = d3.svg.line()\n              .interpolate(\"linear\")\n              .x(function(d) {\n                  return xScale(d.date);\n              })\n              .y(function(d) {\n                  return yScale(d.value);\n              });\n\n          var metric = chart.selectAll(\".metric\")\n              .data(metrics)\n              .enter()\n              .append(\"g\")\n                .attr(\"class\", \"metric\"\n                     )\n                .attr(\"value\", function(d){\n                    return d.value;\n                });\n\n          metric.append(\"path\")\n              .attr(\"class\", \"line\")\n              .attr(\"d\", function(d) {\n                  return line(d.values);\n              })\n              .style(\"stroke\", function(d) { return color(d.name); })\n              .style(\"stroke-width\", \"8px\")\n              .style(\"fill\", \"none\");\n\n          var point = metric.append(\"g\")\n              .attr(\"class\", \"line-point\");\n\n          point.selectAll('circle')\n              .data(function(d){ return d.values; })\n              .enter()\n              .append('circle')\n                  .attr(\"cx\", function(d) { return xScale(d.date); })\n                  .attr(\"cy\", function(d) { return yScale(d.value); })\n                  .attr(\"r\", 8)\n                  .attr(\"class\", \"color-white\")\n                  .style(\"stroke-width\", \"1px\")\n                  .style(\"stroke\", function(d) { return color(this.parentNode.__data__.name); });\n\n\n\n      }; // DrawMe end\n\n          /***\n          *     ___\n          *    |  _|\n          *    |_  | _\n          *    |___||_|    Run code and return visualization (D3) object\n          */\n\n    } // link end\n\n  }; // directiveDefinitionObject end\n  return directiveDefinitionObject;\n}); //End Directive","/***\n *    ██╗   ██╗███████╗ █████╗     ███╗   ███╗ █████╗ ██████╗\n *    ██║   ██║██╔════╝██╔══██╗    ████╗ ████║██╔══██╗██╔══██╗\n *    ██║   ██║███████╗███████║    ██╔████╔██║███████║██████╔╝\n *    ██║   ██║╚════██║██╔══██║    ██║╚██╔╝██║██╔══██║██╔═══╝\n *    ╚██████╔╝███████║██║  ██║    ██║ ╚═╝ ██║██║  ██║██║\n *     ╚═════╝ ╚══════╝╚═╝  ╚═╝    ╚═╝     ╚═╝╚═╝  ╚═╝╚═╝\n *      ____   _                   _    _\n *     |  _ \\ (_) _ __  ___   ___ | |_ (_)__   __ ___\n *     | | | || || '__|/ _ \\ / __|| __|| |\\ \\ / // _ \\\n *     | |_| || || |  |  __/| (__ | |_ | | \\ V /|  __/\n *     |____/ |_||_|   \\___| \\___| \\__||_|  \\_/  \\___|\n *\n *    This directive renders a USA map chart.\n */\n\nPARTICLE.directive('usMap', function ($parse, $window, $timeout) {\n    //explicitly creating a directive definition variable\n    //this may look verbose but is good for clarification purposes\n    //in real life you'd want to simply return the object {...}\n    var directiveDefinitionObject = {\n        //We restrict its use to an element\n        //as usually  <bars-chart> is semantically\n        //more understandable\n        restrict: 'E',\n        //this is important,\n        //we don't want to overwrite our directive declaration\n        //in the HTML mark-up\n        replace: false,\n        //our data source would be an array\n        //passed thru chart-data attribute\n        scope: {data: '=chartData', whoamiin: '=whoamiin', member: '=member'},\n        link: function (scope, element, attrs) {\n            //in D3, any selection[0] contains the group\n            //selection[0][0] is the DOM node\n            //but we won't need that this time\n            //a little of magic: setting it's width based\n            //on the data value (d)\n            //and text all with a smooth transition\n\n            //---------------------------------------\n\n            //console.log(attrs)\n            var drawn = 0;\n            var margin = {top: 20, right: 0, bottom: 30, left: 40}, width, height;\n            width = element.parent().innerWidth() * 0.9;\n            height = element.parent().innerHeight() * 0.5;//$window.innerHeight * .75 - margin.top - margin.bottom;\n            if (width < 150) width = 205;\n            if (height <= width) {\n                height = width;\n            }\n            height = 500;\n            //height = width\n            console.log(\"progressMeter\", width, height);\n\n            var unregister = scope.$watch(\n                function () {\n                    return element.parent().parent().parent().is(\":visible\");\n                },\n                function () {\n                    $timeout(function () {\n\n                        if (element.parent().height()) {\n\n\n                            if (drawn === 0) {\n                                drawMe();\n                                drawn = 1;\n                            }\n                        }\n                    }, 0);\n\n\n                });\n\n\n            var drawMe = function () {\n\n\n                //Define map projection\n                var projection = d3.geo.albersUsa()\n                    .translate([width / 2, height / 2]).scale([1100]);\n\n\n                //Define path generator\n                var path = d3.geo.path()\n                    .projection(projection);\n\n                //Define quantize scale to sort data values into buckets of color\n                var color = d3.scale.quantize()\n                    .range([\"#8AB28C\", \"rgba(97, 65, 82,.5)\", \"#666b95\", \"rgb(49,163,84)\", \"rgb(0,109,44)\"]);\n                //Colors taken from colorbrewer.js, included in the D3 download\n\n                //Create SVG element\n                var svg = d3.select(element[0])\n                    .append(\"svg\")\n                    .attr(\"width\", width)\n                    .attr(\"height\", height);\n\n                //Load in agriculture data\n                d3.csv(\"csv/us-ag-productivity-2004.csv\", function (data) {\n\n                    //Set input domain for color scale\n                    color.domain([\n                        d3.min(data, function (d) {\n                            return d.value;\n                        }),\n                        d3.max(data, function (d) {\n                            return d.value;\n                        })\n                    ]);\n\n                    //Load in GeoJSON data\n                    d3.json(\"json/us-states.json\", function (json) {\n\n                        //Merge the ag. data and GeoJSON\n                        //Loop through once for each ag. data value\n                        for (var i = 0; i < data.length; i++) {\n\n                            //Grab state name\n                            var dataState = data[i].state;\n\n                            //Grab data value, and convert from string to float\n                            var dataValue = parseFloat(data[i].value);\n\n                            //Find the corresponding state inside the GeoJSON\n                            for (var j = 0; j < json.features.length; j++) {\n\n                                var jsonState = json.features[j].properties.name;\n\n                                if (dataState == jsonState) {\n\n                                    //Copy the data value into the JSON\n                                    json.features[j].properties.value = dataValue;\n\n                                    //Stop looking through the JSON\n                                    break;\n\n                                }\n                            }\n                        }\n\n                        //Bind data and create one path per GeoJSON feature\n                        svg.selectAll(\"path\")\n                            .data(json.features)\n                            .enter()\n                            .append(\"path\")\n                            .attr(\"d\", path)\n                            .style(\"fill\", function (d) {\n                                //Get data value\n                                var value = d.properties.value;\n\n                                if (value) {\n                                    //If value exists…\n                                    return color(value);\n                                } else {\n                                    //If value is undefined…\n                                    return \"#ccc\";\n                                }\n                            });\n\n                    });\n\n                });\n\n\n            };\n\n\n        }\n    };\n    return directiveDefinitionObject;\n});\n","/***\n *     █████╗ ██████╗ ██████╗ ██╗  ██╗   ██╗    ███████╗██╗██╗  ████████╗███████╗██████╗\n *    ██╔══██╗██╔══██╗██╔══██╗██║  ╚██╗ ██╔╝    ██╔════╝██║██║  ╚══██╔══╝██╔════╝██╔══██╗\n *    ███████║██████╔╝██████╔╝██║   ╚████╔╝     █████╗  ██║██║     ██║   █████╗  ██████╔╝\n *    ██╔══██║██╔═══╝ ██╔═══╝ ██║    ╚██╔╝      ██╔══╝  ██║██║     ██║   ██╔══╝  ██╔══██╗\n *    ██║  ██║██║     ██║     ███████╗██║       ██║     ██║███████╗██║   ███████╗██║  ██║\n *    ╚═╝  ╚═╝╚═╝     ╚═╝     ╚══════╝╚═╝       ╚═╝     ╚═╝╚══════╝╚═╝   ╚══════╝╚═╝  ╚═╝\n *    ███████╗██████╗  ██████╗ ███╗   ███╗    ███████╗████████╗██████╗ ██╗███╗   ██╗ ██████╗\n *    ██╔════╝██╔══██╗██╔═══██╗████╗ ████║    ██╔════╝╚══██╔══╝██╔══██╗██║████╗  ██║██╔════╝\n *    █████╗  ██████╔╝██║   ██║██╔████╔██║    ███████╗   ██║   ██████╔╝██║██╔██╗ ██║██║  ███╗\n *    ██╔══╝  ██╔══██╗██║   ██║██║╚██╔╝██║    ╚════██║   ██║   ██╔══██╗██║██║╚██╗██║██║   ██║\n *    ██║     ██║  ██║╚██████╔╝██║ ╚═╝ ██║    ███████║   ██║   ██║  ██║██║██║ ╚████║╚██████╔╝\n *    ╚═╝     ╚═╝  ╚═╝ ╚═════╝ ╚═╝     ╚═╝    ╚══════╝   ╚═╝   ╚═╝  ╚═╝╚═╝╚═╝  ╚═══╝ ╚═════╝\n *      _____  _  _  _\n *     |  ___|(_)| || |_  ___  _ __\n *     | |_   | || || __|/ _ \\| '__|\n *     |  _|  | || || |_|  __/| |\n *     |_|    |_||_| \\__|\\___||_|  \n */\n\nPARTICLE.filter('applyFilter', ['$filter', function ($filter) {\n    return function (value, filters) {\n        if (!filters) {\n            return value;\n        } else {\n            var parts = filters.split(\":\");\n            var filterName = parts[0];\n            var params;\n            if (parts[1]) {\n                params = parts[1].split(\":\");\n            }\n            var filterFn = $filter(filterName);\n            return filterFn.apply(filterFn, [value].concat(params));\n\n        }\n    };\n}]);\n","/***\n *     ██████╗ █████╗ ██████╗ ██╗████████╗ █████╗ ██╗     ██╗███████╗███████╗\n *    ██╔════╝██╔══██╗██╔══██╗██║╚══██╔══╝██╔══██╗██║     ██║╚══███╔╝██╔════╝\n *    ██║     ███████║██████╔╝██║   ██║   ███████║██║     ██║  ███╔╝ █████╗\n *    ██║     ██╔══██║██╔═══╝ ██║   ██║   ██╔══██║██║     ██║ ███╔╝  ██╔══╝\n *    ╚██████╗██║  ██║██║     ██║   ██║   ██║  ██║███████╗██║███████╗███████╗\n *     ╚═════╝╚═╝  ╚═╝╚═╝     ╚═╝   ╚═╝   ╚═╝  ╚═╝╚══════╝╚═╝╚══════╝╚══════╝\n *      _____  _  _  _\n *     |  ___|(_)| || |_  ___  _ __\n *     | |_   | || || __|/ _ \\| '__|\n *     |  _|  | || || |_|  __/| |\n *     |_|    |_||_| \\__|\\___||_|\n */\n\nPARTICLE.filter('capitalize', function () {\n    return function (input, all) {\n        var reg = (all) ? /([^\\W_]+[^\\s-]*) */g : /([^\\W_]+[^\\s-]*)/;\n        return (!!input) ? input.replace(reg, function (txt) {\n            return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n        }) : '';\n    };\n});\n","/***\n *    ██████╗ ███████╗██████╗  ██████╗███████╗███╗   ██╗████████╗ █████╗  ██████╗ ███████╗\n *    ██╔══██╗██╔════╝██╔══██╗██╔════╝██╔════╝████╗  ██║╚══██╔══╝██╔══██╗██╔════╝ ██╔════╝\n *    ██████╔╝█████╗  ██████╔╝██║     █████╗  ██╔██╗ ██║   ██║   ███████║██║  ███╗█████╗\n *    ██╔═══╝ ██╔══╝  ██╔══██╗██║     ██╔══╝  ██║╚██╗██║   ██║   ██╔══██║██║   ██║██╔══╝\n *    ██║     ███████╗██║  ██║╚██████╗███████╗██║ ╚████║   ██║   ██║  ██║╚██████╔╝███████╗\n *    ╚═╝     ╚══════╝╚═╝  ╚═╝ ╚═════╝╚══════╝╚═╝  ╚═══╝   ╚═╝   ╚═╝  ╚═╝ ╚═════╝ ╚══════╝\n *      _____  _  _  _\n *     |  ___|(_)| || |_  ___  _ __\n *     | |_   | || || __|/ _ \\| '__|\n *     |  _|  | || || |_|  __/| |\n *     |_|    |_||_| \\__|\\___||_|\n */\n\nPARTICLE.filter('percent', function () {\n    return function (value, param1) {\n        return value.toFixed(param1) + \"%\";\n    };\n});\n","PARTICLE.filter('significantDigits', ['$filter', function ($filter) {\n    return function (input, places) {\n        if (isNaN(input)) return input;\n        var digits = Math.min(input.toString().length, places);\n        return Number(input).toPrecision(digits);\n    };\n}]);","// Came from the comments here:  https://gist.github.com/maruf-nc/5625869\nPARTICLE.filter('titlecase', function() {\n    return function (input) {\n        var smallWords = /^(a|an|and|as|at|but|by|en|for|if|in|nor|of|on|or|per|the|to|vs?\\.?|via)$/i;\n\n        input = input.toLowerCase();\n        return input.replace(/[A-Za-z0-9\\u00C0-\\u00FF]+[^\\s-]*/g, function(match, index, title) {\n            if (index > 0 && index + match.length !== title.length &&\n                match.search(smallWords) > -1 && title.charAt(index - 2) !== \":\" &&\n                (title.charAt(index + match.length) !== '-' || title.charAt(index - 1) === '-') &&\n                title.charAt(index - 1).search(/[^\\s-]/) < 0) {\n                return match.toLowerCase();\n            }\n\n            if (match.substr(1).search(/[A-Z]|\\../) > -1) {\n                return match;\n            }\n\n            return match.charAt(0).toUpperCase() + match.substr(1);\n        });\n    };\n});"]}