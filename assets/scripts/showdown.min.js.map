{"version":3,"sources":["showdown.min.js"],"names":["getDefaultOpts","simple","defaultOptions","omitExtraWLInCodeBlocks","defaultValue","describe","type","noHeaderId","prefixHeaderId","headerLevelStart","parseImgDimensions","simplifiedAutoLink","excludeTrailingPunctuationFromURLs","literalMidWordUnderscores","strikethrough","tables","tablesHeaderId","ghCodeBlocks","tasklists","smoothLivePreview","smartIndentationFix","description","disableForced4SpacesIndentedSublists","simpleLineBreaks","JSON","parse","stringify","ret","opt","hasOwnProperty","validate","extension","name","errMsg","valid","error","showdown","helper","isArray","i","length","baseMsg","ext","isString","toLowerCase","isUndefined","listeners","filter","regex","ln","RegExp","replace","escapeCharactersCallback","wholeMatch","m1","charCodeToEscape","charCodeAt","parsers","extensions","globalOptions","flavor","github","vanilla","setOption","key","value","this","getOption","getOptions","resetOptions","setFlavor","preset","option","getDefaultOptions","subParser","func","Error","stdExtName","validExtension","getAllExtensions","removeExtension","resetExtensions","validateExtension","console","warn","a","String","isFunction","getType","toString","call","forEach","obj","callback","constructor","Array","s","escapeCharacters","text","charsToEscape","afterBackslash","regexString","rgxFindMatchPos","str","left","right","flags","t","m","start","end","f","g","indexOf","x","l","pos","exec","test","lastIndex","index","match","push","matchRecursiveRegExp","matchPos","results","slice","replaceRecursiveRegExp","replacement","repStr","finalStr","lng","bits","join","msg","alert","log","Converter","converterOptions","_constructor","gOpt","options","_parseExtension","legacyExtensionLoading","validExt","langExtensions","outputModifiers","listen","rTrimInputText","rsp","rgx","_dispatch","evtName","globals","ei","nText","makeHtml","gHtmlBlocks","gHtmlMdBlocks","gHtmlSpans","gUrls","gTitles","gDimensions","gListLevel","hashLinkCounts","converter","addExtension","useExtension","extensionName","splice","ii","language","output","writeAnchorTag","m2","m3","m4","m5","m6","m7","linkText","linkId","url","title","search","result","replaceLink","wm","link","trailingPunctuation","lnkTxt","append","replaceMail","mail","unescapedStr","simpleURLRegex","simpleURLRegex2","delimUrlRegex","simpleMailRegex","delimMailRegex","bq","pre","pattern","codeblock","nextChar","c","leadingText","numSpaces","addr","encode","ch","Math","floor","random","r","tag","blockText","blockTags","repFunc","txt","config","matches","headerId","escapedId","prefixHeader","isNaN","parseInt","setextRegexH1","setextRegexH2","spanGamut","hID","hLevel","hashBlock","matchFound","span","header","writeImageTag","altText","width","height","gDims","inlineRegExp","referenceRegExp","processListItems","listStr","trimTrailing","isParagraphed","taskbtn","checked","trim","item","bulletStyle","otp","parseConsecutiveLists","list","listType","olRgx","ulRgx","counterRxg","parseCL","grafs","split","grafsOut","grafsOutIt","codeFlag","delim","$1","num","$2","re","blankLines","parseStyles","sLine","parseHeaders","style","id","tableHeaderId","parseCells","cell","subText","buildTable","headers","cells","tb","tblLgn","tableRgx","rawTable","tableLines","rawHeaders","map","rawStyles","rawCells","styles","shift","row","charCodeToReplace","fromCharCode","root","module","exports","define","amd"],"mappings":"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","file":"showdown.min.js","sourcesContent":[";/*! showdown 01-12-2016 */\r\n(function(){\r\n/**\n * Created by Tivie on 13-07-2015.\n */\n\nfunction getDefaultOpts(simple) {\n  'use strict';\n\n  var defaultOptions = {\n    omitExtraWLInCodeBlocks: {\n      defaultValue: false,\n      describe: 'Omit the default extra whiteline added to code blocks',\n      type: 'boolean'\n    },\n    noHeaderId: {\n      defaultValue: false,\n      describe: 'Turn on/off generated header id',\n      type: 'boolean'\n    },\n    prefixHeaderId: {\n      defaultValue: false,\n      describe: 'Specify a prefix to generated header ids',\n      type: 'string'\n    },\n    headerLevelStart: {\n      defaultValue: false,\n      describe: 'The header blocks level start',\n      type: 'integer'\n    },\n    parseImgDimensions: {\n      defaultValue: false,\n      describe: 'Turn on/off image dimension parsing',\n      type: 'boolean'\n    },\n    simplifiedAutoLink: {\n      defaultValue: false,\n      describe: 'Turn on/off GFM autolink style',\n      type: 'boolean'\n    },\n    excludeTrailingPunctuationFromURLs: {\n      defaultValue: false,\n      describe: 'Excludes trailing punctuation from links generated with autoLinking',\n      type: 'boolean'\n    },\n    literalMidWordUnderscores: {\n      defaultValue: false,\n      describe: 'Parse midword underscores as literal underscores',\n      type: 'boolean'\n    },\n    strikethrough: {\n      defaultValue: false,\n      describe: 'Turn on/off strikethrough support',\n      type: 'boolean'\n    },\n    tables: {\n      defaultValue: false,\n      describe: 'Turn on/off tables support',\n      type: 'boolean'\n    },\n    tablesHeaderId: {\n      defaultValue: false,\n      describe: 'Add an id to table headers',\n      type: 'boolean'\n    },\n    ghCodeBlocks: {\n      defaultValue: true,\n      describe: 'Turn on/off GFM fenced code blocks support',\n      type: 'boolean'\n    },\n    tasklists: {\n      defaultValue: false,\n      describe: 'Turn on/off GFM tasklist support',\n      type: 'boolean'\n    },\n    smoothLivePreview: {\n      defaultValue: false,\n      describe: 'Prevents weird effects in live previews due to incomplete input',\n      type: 'boolean'\n    },\n    smartIndentationFix: {\n      defaultValue: false,\n      description: 'Tries to smartly fix indentation in es6 strings',\n      type: 'boolean'\n    },\n    disableForced4SpacesIndentedSublists: {\n      defaultValue: false,\n      description: 'Disables the requirement of indenting nested sublists by 4 spaces',\n      type: 'boolean'\n    },\n    simpleLineBreaks: {\n      defaultValue: false,\n      description: 'Parses simple line breaks as <br> (GFM Style)',\n      type: 'boolean'\n    }\n  };\n  if (simple === false) {\n    return JSON.parse(JSON.stringify(defaultOptions));\n  }\n  var ret = {};\n  for (var opt in defaultOptions) {\n    if (defaultOptions.hasOwnProperty(opt)) {\n      ret[opt] = defaultOptions[opt].defaultValue;\n    }\n  }\n  return ret;\n}\n\r\n/**\n * Created by Tivie on 06-01-2015.\n */\n\n// Private properties\nvar showdown = {},\n    parsers = {},\n    extensions = {},\n    globalOptions = getDefaultOpts(true),\n    flavor = {\n      github: {\n        omitExtraWLInCodeBlocks:              true,\n        prefixHeaderId:                       'user-content-',\n        simplifiedAutoLink:                   true,\n        excludeTrailingPunctuationFromURLs:   true,\n        literalMidWordUnderscores:            true,\n        strikethrough:                        true,\n        tables:                               true,\n        tablesHeaderId:                       true,\n        ghCodeBlocks:                         true,\n        tasklists:                            true,\n        disableForced4SpacesIndentedSublists: true,\n        simpleLineBreaks:                     true\n      },\n      vanilla: getDefaultOpts(true)\n    };\n\n/**\n * helper namespace\n * @type {{}}\n */\nshowdown.helper = {};\n\n/**\n * TODO LEGACY SUPPORT CODE\n * @type {{}}\n */\nshowdown.extensions = {};\n\n/**\n * Set a global option\n * @static\n * @param {string} key\n * @param {*} value\n * @returns {showdown}\n */\nshowdown.setOption = function (key, value) {\n  'use strict';\n  globalOptions[key] = value;\n  return this;\n};\n\n/**\n * Get a global option\n * @static\n * @param {string} key\n * @returns {*}\n */\nshowdown.getOption = function (key) {\n  'use strict';\n  return globalOptions[key];\n};\n\n/**\n * Get the global options\n * @static\n * @returns {{}}\n */\nshowdown.getOptions = function () {\n  'use strict';\n  return globalOptions;\n};\n\n/**\n * Reset global options to the default values\n * @static\n */\nshowdown.resetOptions = function () {\n  'use strict';\n  globalOptions = getDefaultOpts(true);\n};\n\n/**\n * Set the flavor showdown should use as default\n * @param {string} name\n */\nshowdown.setFlavor = function (name) {\n  'use strict';\n  if (flavor.hasOwnProperty(name)) {\n    var preset = flavor[name];\n    for (var option in preset) {\n      if (preset.hasOwnProperty(option)) {\n        globalOptions[option] = preset[option];\n      }\n    }\n  }\n};\n\n/**\n * Get the default options\n * @static\n * @param {boolean} [simple=true]\n * @returns {{}}\n */\nshowdown.getDefaultOptions = function (simple) {\n  'use strict';\n  return getDefaultOpts(simple);\n};\n\n/**\n * Get or set a subParser\n *\n * subParser(name)       - Get a registered subParser\n * subParser(name, func) - Register a subParser\n * @static\n * @param {string} name\n * @param {function} [func]\n * @returns {*}\n */\nshowdown.subParser = function (name, func) {\n  'use strict';\n  if (showdown.helper.isString(name)) {\n    if (typeof func !== 'undefined') {\n      parsers[name] = func;\n    } else {\n      if (parsers.hasOwnProperty(name)) {\n        return parsers[name];\n      } else {\n        throw Error('SubParser named ' + name + ' not registered!');\n      }\n    }\n  }\n};\n\n/**\n * Gets or registers an extension\n * @static\n * @param {string} name\n * @param {object|function=} ext\n * @returns {*}\n */\nshowdown.extension = function (name, ext) {\n  'use strict';\n\n  if (!showdown.helper.isString(name)) {\n    throw Error('Extension \\'name\\' must be a string');\n  }\n\n  name = showdown.helper.stdExtName(name);\n\n  // Getter\n  if (showdown.helper.isUndefined(ext)) {\n    if (!extensions.hasOwnProperty(name)) {\n      throw Error('Extension named ' + name + ' is not registered!');\n    }\n    return extensions[name];\n\n    // Setter\n  } else {\n    // Expand extension if it's wrapped in a function\n    if (typeof ext === 'function') {\n      ext = ext();\n    }\n\n    // Ensure extension is an array\n    if (!showdown.helper.isArray(ext)) {\n      ext = [ext];\n    }\n\n    var validExtension = validate(ext, name);\n\n    if (validExtension.valid) {\n      extensions[name] = ext;\n    } else {\n      throw Error(validExtension.error);\n    }\n  }\n};\n\n/**\n * Gets all extensions registered\n * @returns {{}}\n */\nshowdown.getAllExtensions = function () {\n  'use strict';\n  return extensions;\n};\n\n/**\n * Remove an extension\n * @param {string} name\n */\nshowdown.removeExtension = function (name) {\n  'use strict';\n  delete extensions[name];\n};\n\n/**\n * Removes all extensions\n */\nshowdown.resetExtensions = function () {\n  'use strict';\n  extensions = {};\n};\n\n/**\n * Validate extension\n * @param {array} extension\n * @param {string} name\n * @returns {{valid: boolean, error: string}}\n */\nfunction validate(extension, name) {\n  'use strict';\n\n  var errMsg = (name) ? 'Error in ' + name + ' extension->' : 'Error in unnamed extension',\n    ret = {\n      valid: true,\n      error: ''\n    };\n\n  if (!showdown.helper.isArray(extension)) {\n    extension = [extension];\n  }\n\n  for (var i = 0; i < extension.length; ++i) {\n    var baseMsg = errMsg + ' sub-extension ' + i + ': ',\n        ext = extension[i];\n    if (typeof ext !== 'object') {\n      ret.valid = false;\n      ret.error = baseMsg + 'must be an object, but ' + typeof ext + ' given';\n      return ret;\n    }\n\n    if (!showdown.helper.isString(ext.type)) {\n      ret.valid = false;\n      ret.error = baseMsg + 'property \"type\" must be a string, but ' + typeof ext.type + ' given';\n      return ret;\n    }\n\n    var type = ext.type = ext.type.toLowerCase();\n\n    // normalize extension type\n    if (type === 'language') {\n      type = ext.type = 'lang';\n    }\n\n    if (type === 'html') {\n      type = ext.type = 'output';\n    }\n\n    if (type !== 'lang' && type !== 'output' && type !== 'listener') {\n      ret.valid = false;\n      ret.error = baseMsg + 'type ' + type + ' is not recognized. Valid values: \"lang/language\", \"output/html\" or \"listener\"';\n      return ret;\n    }\n\n    if (type === 'listener') {\n      if (showdown.helper.isUndefined(ext.listeners)) {\n        ret.valid = false;\n        ret.error = baseMsg + '. Extensions of type \"listener\" must have a property called \"listeners\"';\n        return ret;\n      }\n    } else {\n      if (showdown.helper.isUndefined(ext.filter) && showdown.helper.isUndefined(ext.regex)) {\n        ret.valid = false;\n        ret.error = baseMsg + type + ' extensions must define either a \"regex\" property or a \"filter\" method';\n        return ret;\n      }\n    }\n\n    if (ext.listeners) {\n      if (typeof ext.listeners !== 'object') {\n        ret.valid = false;\n        ret.error = baseMsg + '\"listeners\" property must be an object but ' + typeof ext.listeners + ' given';\n        return ret;\n      }\n      for (var ln in ext.listeners) {\n        if (ext.listeners.hasOwnProperty(ln)) {\n          if (typeof ext.listeners[ln] !== 'function') {\n            ret.valid = false;\n            ret.error = baseMsg + '\"listeners\" property must be an hash of [event name]: [callback]. listeners.' + ln +\n              ' must be a function but ' + typeof ext.listeners[ln] + ' given';\n            return ret;\n          }\n        }\n      }\n    }\n\n    if (ext.filter) {\n      if (typeof ext.filter !== 'function') {\n        ret.valid = false;\n        ret.error = baseMsg + '\"filter\" must be a function, but ' + typeof ext.filter + ' given';\n        return ret;\n      }\n    } else if (ext.regex) {\n      if (showdown.helper.isString(ext.regex)) {\n        ext.regex = new RegExp(ext.regex, 'g');\n      }\n      if (!ext.regex instanceof RegExp) {\n        ret.valid = false;\n        ret.error = baseMsg + '\"regex\" property must either be a string or a RegExp object, but ' + typeof ext.regex + ' given';\n        return ret;\n      }\n      if (showdown.helper.isUndefined(ext.replace)) {\n        ret.valid = false;\n        ret.error = baseMsg + '\"regex\" extensions must implement a replace string or function';\n        return ret;\n      }\n    }\n  }\n  return ret;\n}\n\n/**\n * Validate extension\n * @param {object} ext\n * @returns {boolean}\n */\nshowdown.validateExtension = function (ext) {\n  'use strict';\n\n  var validateExtension = validate(ext, null);\n  if (!validateExtension.valid) {\n    console.warn(validateExtension.error);\n    return false;\n  }\n  return true;\n};\n\r\n/**\n * showdownjs helper functions\n */\n\nif (!showdown.hasOwnProperty('helper')) {\n  showdown.helper = {};\n}\n\n/**\n * Check if var is string\n * @static\n * @param {string} a\n * @returns {boolean}\n */\nshowdown.helper.isString = function isString(a) {\n  'use strict';\n  return (typeof a === 'string' || a instanceof String);\n};\n\n/**\n * Check if var is a function\n * @static\n * @param {string} a\n * @returns {boolean}\n */\nshowdown.helper.isFunction = function isFunction(a) {\n  'use strict';\n  var getType = {};\n  return a && getType.toString.call(a) === '[object Function]';\n};\n\n/**\n * ForEach helper function\n * @static\n * @param {*} obj\n * @param {function} callback\n */\nshowdown.helper.forEach = function forEach(obj, callback) {\n  'use strict';\n  if (typeof obj.forEach === 'function') {\n    obj.forEach(callback);\n  } else {\n    for (var i = 0; i < obj.length; i++) {\n      callback(obj[i], i, obj);\n    }\n  }\n};\n\n/**\n * isArray helper function\n * @static\n * @param {*} a\n * @returns {boolean}\n */\nshowdown.helper.isArray = function isArray(a) {\n  'use strict';\n  return a.constructor === Array;\n};\n\n/**\n * Check if value is undefined\n * @static\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n */\nshowdown.helper.isUndefined = function isUndefined(value) {\n  'use strict';\n  return typeof value === 'undefined';\n};\n\n/**\n * Standardidize extension name\n * @static\n * @param {string} s extension name\n * @returns {string}\n */\nshowdown.helper.stdExtName = function (s) {\n  'use strict';\n  return s.replace(/[_-]||\\s/g, '').toLowerCase();\n};\n\nfunction escapeCharactersCallback(wholeMatch, m1) {\n  'use strict';\n  var charCodeToEscape = m1.charCodeAt(0);\n  return '~E' + charCodeToEscape + 'E';\n}\n\n/**\n * Callback used to escape characters when passing through String.replace\n * @static\n * @param {string} wholeMatch\n * @param {string} m1\n * @returns {string}\n */\nshowdown.helper.escapeCharactersCallback = escapeCharactersCallback;\n\n/**\n * Escape characters in a string\n * @static\n * @param {string} text\n * @param {string} charsToEscape\n * @param {boolean} afterBackslash\n * @returns {XML|string|void|*}\n */\nshowdown.helper.escapeCharacters = function escapeCharacters(text, charsToEscape, afterBackslash) {\n  'use strict';\n  // First we have to escape the escape characters so that\n  // we can build a character class out of them\n  var regexString = '([' + charsToEscape.replace(/([\\[\\]\\\\])/g, '\\\\$1') + '])';\n\n  if (afterBackslash) {\n    regexString = '\\\\\\\\' + regexString;\n  }\n\n  var regex = new RegExp(regexString, 'g');\n  text = text.replace(regex, escapeCharactersCallback);\n\n  return text;\n};\n\nvar rgxFindMatchPos = function (str, left, right, flags) {\n  'use strict';\n  var f = flags || '',\n    g = f.indexOf('g') > -1,\n    x = new RegExp(left + '|' + right, 'g' + f.replace(/g/g, '')),\n    l = new RegExp(left, f.replace(/g/g, '')),\n    pos = [],\n    t, s, m, start, end;\n\n  do {\n    t = 0;\n    while ((m = x.exec(str))) {\n      if (l.test(m[0])) {\n        if (!(t++)) {\n          s = x.lastIndex;\n          start = s - m[0].length;\n        }\n      } else if (t) {\n        if (!--t) {\n          end = m.index + m[0].length;\n          var obj = {\n            left: {start: start, end: s},\n            match: {start: s, end: m.index},\n            right: {start: m.index, end: end},\n            wholeMatch: {start: start, end: end}\n          };\n          pos.push(obj);\n          if (!g) {\n            return pos;\n          }\n        }\n      }\n    }\n  } while (t && (x.lastIndex = s));\n\n  return pos;\n};\n\n/**\n * matchRecursiveRegExp\n *\n * (c) 2007 Steven Levithan <stevenlevithan.com>\n * MIT License\n *\n * Accepts a string to search, a left and right format delimiter\n * as regex patterns, and optional regex flags. Returns an array\n * of matches, allowing nested instances of left/right delimiters.\n * Use the \"g\" flag to return all matches, otherwise only the\n * first is returned. Be careful to ensure that the left and\n * right format delimiters produce mutually exclusive matches.\n * Backreferences are not supported within the right delimiter\n * due to how it is internally combined with the left delimiter.\n * When matching strings whose format delimiters are unbalanced\n * to the left or right, the output is intentionally as a\n * conventional regex library with recursion support would\n * produce, e.g. \"<<x>\" and \"<x>>\" both produce [\"x\"] when using\n * \"<\" and \">\" as the delimiters (both strings contain a single,\n * balanced instance of \"<x>\").\n *\n * examples:\n * matchRecursiveRegExp(\"test\", \"\\\\(\", \"\\\\)\")\n * returns: []\n * matchRecursiveRegExp(\"<t<<e>><s>>t<>\", \"<\", \">\", \"g\")\n * returns: [\"t<<e>><s>\", \"\"]\n * matchRecursiveRegExp(\"<div id=\\\"x\\\">test</div>\", \"<div\\\\b[^>]*>\", \"</div>\", \"gi\")\n * returns: [\"test\"]\n */\nshowdown.helper.matchRecursiveRegExp = function (str, left, right, flags) {\n  'use strict';\n\n  var matchPos = rgxFindMatchPos (str, left, right, flags),\n    results = [];\n\n  for (var i = 0; i < matchPos.length; ++i) {\n    results.push([\n      str.slice(matchPos[i].wholeMatch.start, matchPos[i].wholeMatch.end),\n      str.slice(matchPos[i].match.start, matchPos[i].match.end),\n      str.slice(matchPos[i].left.start, matchPos[i].left.end),\n      str.slice(matchPos[i].right.start, matchPos[i].right.end)\n    ]);\n  }\n  return results;\n};\n\n/**\n *\n * @param {string} str\n * @param {string|function} replacement\n * @param {string} left\n * @param {string} right\n * @param {string} flags\n * @returns {string}\n */\nshowdown.helper.replaceRecursiveRegExp = function (str, replacement, left, right, flags) {\n  'use strict';\n\n  if (!showdown.helper.isFunction(replacement)) {\n    var repStr = replacement;\n    replacement = function () {\n      return repStr;\n    };\n  }\n\n  var matchPos = rgxFindMatchPos(str, left, right, flags),\n      finalStr = str,\n      lng = matchPos.length;\n\n  if (lng > 0) {\n    var bits = [];\n    if (matchPos[0].wholeMatch.start !== 0) {\n      bits.push(str.slice(0, matchPos[0].wholeMatch.start));\n    }\n    for (var i = 0; i < lng; ++i) {\n      bits.push(\n        replacement(\n          str.slice(matchPos[i].wholeMatch.start, matchPos[i].wholeMatch.end),\n          str.slice(matchPos[i].match.start, matchPos[i].match.end),\n          str.slice(matchPos[i].left.start, matchPos[i].left.end),\n          str.slice(matchPos[i].right.start, matchPos[i].right.end)\n        )\n      );\n      if (i < lng - 1) {\n        bits.push(str.slice(matchPos[i].wholeMatch.end, matchPos[i + 1].wholeMatch.start));\n      }\n    }\n    if (matchPos[lng - 1].wholeMatch.end < str.length) {\n      bits.push(str.slice(matchPos[lng - 1].wholeMatch.end));\n    }\n    finalStr = bits.join('');\n  }\n  return finalStr;\n};\n\n/**\n * POLYFILLS\n */\nif (showdown.helper.isUndefined(console)) {\n  console = {\n    warn: function (msg) {\n      'use strict';\n      alert(msg);\n    },\n    log: function (msg) {\n      'use strict';\n      alert(msg);\n    },\n    error: function (msg) {\n      'use strict';\n      throw msg;\n    }\n  };\n}\n\r\n/**\n * Created by Estevao on 31-05-2015.\n */\n\n/**\n * Showdown Converter class\n * @class\n * @param {object} [converterOptions]\n * @returns {Converter}\n */\nshowdown.Converter = function (converterOptions) {\n  'use strict';\n\n  var\n      /**\n       * Options used by this converter\n       * @private\n       * @type {{}}\n       */\n      options = {},\n\n      /**\n       * Language extensions used by this converter\n       * @private\n       * @type {Array}\n       */\n      langExtensions = [],\n\n      /**\n       * Output modifiers extensions used by this converter\n       * @private\n       * @type {Array}\n       */\n      outputModifiers = [],\n\n      /**\n       * Event listeners\n       * @private\n       * @type {{}}\n       */\n      listeners = {};\n\n  _constructor();\n\n  /**\n   * Converter constructor\n   * @private\n   */\n  function _constructor() {\n    converterOptions = converterOptions || {};\n\n    for (var gOpt in globalOptions) {\n      if (globalOptions.hasOwnProperty(gOpt)) {\n        options[gOpt] = globalOptions[gOpt];\n      }\n    }\n\n    // Merge options\n    if (typeof converterOptions === 'object') {\n      for (var opt in converterOptions) {\n        if (converterOptions.hasOwnProperty(opt)) {\n          options[opt] = converterOptions[opt];\n        }\n      }\n    } else {\n      throw Error('Converter expects the passed parameter to be an object, but ' + typeof converterOptions +\n      ' was passed instead.');\n    }\n\n    if (options.extensions) {\n      showdown.helper.forEach(options.extensions, _parseExtension);\n    }\n  }\n\n  /**\n   * Parse extension\n   * @param {*} ext\n   * @param {string} [name='']\n   * @private\n   */\n  function _parseExtension(ext, name) {\n\n    name = name || null;\n    // If it's a string, the extension was previously loaded\n    if (showdown.helper.isString(ext)) {\n      ext = showdown.helper.stdExtName(ext);\n      name = ext;\n\n      // LEGACY_SUPPORT CODE\n      if (showdown.extensions[ext]) {\n        console.warn('DEPRECATION WARNING: ' + ext + ' is an old extension that uses a deprecated loading method.' +\n          'Please inform the developer that the extension should be updated!');\n        legacyExtensionLoading(showdown.extensions[ext], ext);\n        return;\n      // END LEGACY SUPPORT CODE\n\n      } else if (!showdown.helper.isUndefined(extensions[ext])) {\n        ext = extensions[ext];\n\n      } else {\n        throw Error('Extension \"' + ext + '\" could not be loaded. It was either not found or is not a valid extension.');\n      }\n    }\n\n    if (typeof ext === 'function') {\n      ext = ext();\n    }\n\n    if (!showdown.helper.isArray(ext)) {\n      ext = [ext];\n    }\n\n    var validExt = validate(ext, name);\n    if (!validExt.valid) {\n      throw Error(validExt.error);\n    }\n\n    for (var i = 0; i < ext.length; ++i) {\n      switch (ext[i].type) {\n\n        case 'lang':\n          langExtensions.push(ext[i]);\n          break;\n\n        case 'output':\n          outputModifiers.push(ext[i]);\n          break;\n      }\n      if (ext[i].hasOwnProperty(listeners)) {\n        for (var ln in ext[i].listeners) {\n          if (ext[i].listeners.hasOwnProperty(ln)) {\n            listen(ln, ext[i].listeners[ln]);\n          }\n        }\n      }\n    }\n\n  }\n\n  /**\n   * LEGACY_SUPPORT\n   * @param {*} ext\n   * @param {string} name\n   */\n  function legacyExtensionLoading(ext, name) {\n    if (typeof ext === 'function') {\n      ext = ext(new showdown.Converter());\n    }\n    if (!showdown.helper.isArray(ext)) {\n      ext = [ext];\n    }\n    var valid = validate(ext, name);\n\n    if (!valid.valid) {\n      throw Error(valid.error);\n    }\n\n    for (var i = 0; i < ext.length; ++i) {\n      switch (ext[i].type) {\n        case 'lang':\n          langExtensions.push(ext[i]);\n          break;\n        case 'output':\n          outputModifiers.push(ext[i]);\n          break;\n        default:// should never reach here\n          throw Error('Extension loader error: Type unrecognized!!!');\n      }\n    }\n  }\n\n  /**\n   * Listen to an event\n   * @param {string} name\n   * @param {function} callback\n   */\n  function listen(name, callback) {\n    if (!showdown.helper.isString(name)) {\n      throw Error('Invalid argument in converter.listen() method: name must be a string, but ' + typeof name + ' given');\n    }\n\n    if (typeof callback !== 'function') {\n      throw Error('Invalid argument in converter.listen() method: callback must be a function, but ' + typeof callback + ' given');\n    }\n\n    if (!listeners.hasOwnProperty(name)) {\n      listeners[name] = [];\n    }\n    listeners[name].push(callback);\n  }\n\n  function rTrimInputText(text) {\n    var rsp = text.match(/^\\s*/)[0].length,\n        rgx = new RegExp('^\\\\s{0,' + rsp + '}', 'gm');\n    return text.replace(rgx, '');\n  }\n\n  /**\n   * Dispatch an event\n   * @private\n   * @param {string} evtName Event name\n   * @param {string} text Text\n   * @param {{}} options Converter Options\n   * @param {{}} globals\n   * @returns {string}\n   */\n  this._dispatch = function dispatch (evtName, text, options, globals) {\n    if (listeners.hasOwnProperty(evtName)) {\n      for (var ei = 0; ei < listeners[evtName].length; ++ei) {\n        var nText = listeners[evtName][ei](evtName, text, this, options, globals);\n        if (nText && typeof nText !== 'undefined') {\n          text = nText;\n        }\n      }\n    }\n    return text;\n  };\n\n  /**\n   * Listen to an event\n   * @param {string} name\n   * @param {function} callback\n   * @returns {showdown.Converter}\n   */\n  this.listen = function (name, callback) {\n    listen(name, callback);\n    return this;\n  };\n\n  /**\n   * Converts a markdown string into HTML\n   * @param {string} text\n   * @returns {*}\n   */\n  this.makeHtml = function (text) {\n    //check if text is not falsy\n    if (!text) {\n      return text;\n    }\n\n    var globals = {\n      gHtmlBlocks:     [],\n      gHtmlMdBlocks:   [],\n      gHtmlSpans:      [],\n      gUrls:           {},\n      gTitles:         {},\n      gDimensions:     {},\n      gListLevel:      0,\n      hashLinkCounts:  {},\n      langExtensions:  langExtensions,\n      outputModifiers: outputModifiers,\n      converter:       this,\n      ghCodeBlocks:    []\n    };\n\n    // attacklab: Replace ~ with ~T\n    // This lets us use tilde as an escape char to avoid md5 hashes\n    // The choice of character is arbitrary; anything that isn't\n    // magic in Markdown will work.\n    text = text.replace(/~/g, '~T');\n\n    // attacklab: Replace $ with ~D\n    // RegExp interprets $ as a special character\n    // when it's in a replacement string\n    text = text.replace(/\\$/g, '~D');\n\n    // Standardize line endings\n    text = text.replace(/\\r\\n/g, '\\n'); // DOS to Unix\n    text = text.replace(/\\r/g, '\\n'); // Mac to Unix\n\n    if (options.smartIndentationFix) {\n      text = rTrimInputText(text);\n    }\n\n    // Make sure text begins and ends with a couple of newlines:\n    text = '\\n\\n' + text + '\\n\\n';\n\n    // detab\n    text = showdown.subParser('detab')(text, options, globals);\n\n    // stripBlankLines\n    text = showdown.subParser('stripBlankLines')(text, options, globals);\n\n    //run languageExtensions\n    showdown.helper.forEach(langExtensions, function (ext) {\n      text = showdown.subParser('runExtension')(ext, text, options, globals);\n    });\n\n    // run the sub parsers\n    text = showdown.subParser('hashPreCodeTags')(text, options, globals);\n    text = showdown.subParser('githubCodeBlocks')(text, options, globals);\n    text = showdown.subParser('hashHTMLBlocks')(text, options, globals);\n    text = showdown.subParser('hashHTMLSpans')(text, options, globals);\n    text = showdown.subParser('stripLinkDefinitions')(text, options, globals);\n    text = showdown.subParser('blockGamut')(text, options, globals);\n    text = showdown.subParser('unhashHTMLSpans')(text, options, globals);\n    text = showdown.subParser('unescapeSpecialChars')(text, options, globals);\n\n    // attacklab: Restore dollar signs\n    text = text.replace(/~D/g, '$$');\n\n    // attacklab: Restore tildes\n    text = text.replace(/~T/g, '~');\n\n    // Run output modifiers\n    showdown.helper.forEach(outputModifiers, function (ext) {\n      text = showdown.subParser('runExtension')(ext, text, options, globals);\n    });\n\n    return text;\n  };\n\n  /**\n   * Set an option of this Converter instance\n   * @param {string} key\n   * @param {*} value\n   */\n  this.setOption = function (key, value) {\n    options[key] = value;\n  };\n\n  /**\n   * Get the option of this Converter instance\n   * @param {string} key\n   * @returns {*}\n   */\n  this.getOption = function (key) {\n    return options[key];\n  };\n\n  /**\n   * Get the options of this Converter instance\n   * @returns {{}}\n   */\n  this.getOptions = function () {\n    return options;\n  };\n\n  /**\n   * Add extension to THIS converter\n   * @param {{}} extension\n   * @param {string} [name=null]\n   */\n  this.addExtension = function (extension, name) {\n    name = name || null;\n    _parseExtension(extension, name);\n  };\n\n  /**\n   * Use a global registered extension with THIS converter\n   * @param {string} extensionName Name of the previously registered extension\n   */\n  this.useExtension = function (extensionName) {\n    _parseExtension(extensionName);\n  };\n\n  /**\n   * Set the flavor THIS converter should use\n   * @param {string} name\n   */\n  this.setFlavor = function (name) {\n    if (flavor.hasOwnProperty(name)) {\n      var preset = flavor[name];\n      for (var option in preset) {\n        if (preset.hasOwnProperty(option)) {\n          options[option] = preset[option];\n        }\n      }\n    }\n  };\n\n  /**\n   * Remove an extension from THIS converter.\n   * Note: This is a costly operation. It's better to initialize a new converter\n   * and specify the extensions you wish to use\n   * @param {Array} extension\n   */\n  this.removeExtension = function (extension) {\n    if (!showdown.helper.isArray(extension)) {\n      extension = [extension];\n    }\n    for (var a = 0; a < extension.length; ++a) {\n      var ext = extension[a];\n      for (var i = 0; i < langExtensions.length; ++i) {\n        if (langExtensions[i] === ext) {\n          langExtensions[i].splice(i, 1);\n        }\n      }\n      for (var ii = 0; ii < outputModifiers.length; ++i) {\n        if (outputModifiers[ii] === ext) {\n          outputModifiers[ii].splice(i, 1);\n        }\n      }\n    }\n  };\n\n  /**\n   * Get all extension of THIS converter\n   * @returns {{language: Array, output: Array}}\n   */\n  this.getAllExtensions = function () {\n    return {\n      language: langExtensions,\n      output: outputModifiers\n    };\n  };\n};\n\r\n/**\n * Turn Markdown link shortcuts into XHTML <a> tags.\n */\nshowdown.subParser('anchors', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('anchors.before', text, options, globals);\n\n  var writeAnchorTag = function (wholeMatch, m1, m2, m3, m4, m5, m6, m7) {\n    if (showdown.helper.isUndefined(m7)) {\n      m7 = '';\n    }\n    wholeMatch = m1;\n    var linkText = m2,\n        linkId = m3.toLowerCase(),\n        url = m4,\n        title = m7;\n\n    if (!url) {\n      if (!linkId) {\n        // lower-case and turn embedded newlines into spaces\n        linkId = linkText.toLowerCase().replace(/ ?\\n/g, ' ');\n      }\n      url = '#' + linkId;\n\n      if (!showdown.helper.isUndefined(globals.gUrls[linkId])) {\n        url = globals.gUrls[linkId];\n        if (!showdown.helper.isUndefined(globals.gTitles[linkId])) {\n          title = globals.gTitles[linkId];\n        }\n      } else {\n        if (wholeMatch.search(/\\(\\s*\\)$/m) > -1) {\n          // Special case for explicit empty url\n          url = '';\n        } else {\n          return wholeMatch;\n        }\n      }\n    }\n\n    url = showdown.helper.escapeCharacters(url, '*_', false);\n    var result = '<a href=\"' + url + '\"';\n\n    if (title !== '' && title !== null) {\n      title = title.replace(/\"/g, '&quot;');\n      title = showdown.helper.escapeCharacters(title, '*_', false);\n      result += ' title=\"' + title + '\"';\n    }\n\n    result += '>' + linkText + '</a>';\n\n    return result;\n  };\n\n  // First, handle reference-style links: [link text] [id]\n  text = text.replace(/(\\[((?:\\[[^\\]]*]|[^\\[\\]])*)][ ]?(?:\\n[ ]*)?\\[(.*?)])()()()()/g, writeAnchorTag);\n\n  // Next, inline-style links: [link text](url \"optional title\")\n  text = text.replace(/(\\[((?:\\[[^\\]]*]|[^\\[\\]])*)]\\([ \\t]*()<?(.*?(?:\\(.*?\\).*?)?)>?[ \\t]*((['\"])(.*?)\\6[ \\t]*)?\\))/g,\n                      writeAnchorTag);\n\n  // Last, handle reference-style shortcuts: [link text]\n  // These must come last in case you've also got [link test][1]\n  // or [link test](/foo)\n  text = text.replace(/(\\[([^\\[\\]]+)])()()()()()/g, writeAnchorTag);\n\n  text = globals.converter._dispatch('anchors.after', text, options, globals);\n  return text;\n});\n\r\nshowdown.subParser('autoLinks', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('autoLinks.before', text, options, globals);\n\n  var simpleURLRegex  = /\\b(((https?|ftp|dict):\\/\\/|www\\.)[^'\">\\s]+\\.[^'\">\\s]+)()(?=\\s|$)(?![\"<>])/gi,\n      simpleURLRegex2 = /\\b(((https?|ftp|dict):\\/\\/|www\\.)[^'\">\\s]+\\.[^'\">\\s]+?)([.!?()]?)(?=\\s|$)(?![\"<>])/gi,\n      delimUrlRegex   = /<(((https?|ftp|dict):\\/\\/|www\\.)[^'\">\\s]+)>/gi,\n      simpleMailRegex = /(?:^|\\s)([A-Za-z0-9!#$%&'*+-/=?^_`{|}~.]+@[-a-z0-9]+(\\.[-a-z0-9]+)*\\.[a-z]+)(?:$|\\s)/gi,\n      delimMailRegex  = /<(?:mailto:)?([-.\\w]+@[-a-z0-9]+(\\.[-a-z0-9]+)*\\.[a-z]+)>/gi;\n\n  text = text.replace(delimUrlRegex, replaceLink);\n  text = text.replace(delimMailRegex, replaceMail);\n  // simpleURLRegex  = /\\b(((https?|ftp|dict):\\/\\/|www\\.)[-.+~:?#@!$&'()*,;=[\\]\\w]+)\\b/gi,\n  // Email addresses: <address@domain.foo>\n\n  if (options.simplifiedAutoLink) {\n    if (options.excludeTrailingPunctuationFromURLs) {\n      text = text.replace(simpleURLRegex2, replaceLink);\n    } else {\n      text = text.replace(simpleURLRegex, replaceLink);\n    }\n    text = text.replace(simpleMailRegex, replaceMail);\n  }\n\n  function replaceLink(wm, link, m2, m3, trailingPunctuation) {\n    var lnkTxt = link,\n        append = '';\n    if (/^www\\./i.test(link)) {\n      link = link.replace(/^www\\./i, 'http://www.');\n    }\n    if (options.excludeTrailingPunctuationFromURLs && trailingPunctuation) {\n      append = trailingPunctuation;\n    }\n    return '<a href=\"' + link + '\">' + lnkTxt + '</a>' + append;\n  }\n\n  function replaceMail(wholeMatch, mail) {\n    var unescapedStr = showdown.subParser('unescapeSpecialChars')(mail);\n    return showdown.subParser('encodeEmailAddress')(unescapedStr);\n  }\n\n  text = globals.converter._dispatch('autoLinks.after', text, options, globals);\n\n  return text;\n});\n\r\n/**\n * These are all the transformations that form block-level\n * tags like paragraphs, headers, and list items.\n */\nshowdown.subParser('blockGamut', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('blockGamut.before', text, options, globals);\n\n  // we parse blockquotes first so that we can have headings and hrs\n  // inside blockquotes\n  text = showdown.subParser('blockQuotes')(text, options, globals);\n  text = showdown.subParser('headers')(text, options, globals);\n\n  // Do Horizontal Rules:\n  var key = showdown.subParser('hashBlock')('<hr />', options, globals);\n  text = text.replace(/^[ ]{0,2}([ ]?\\*[ ]?){3,}[ \\t]*$/gm, key);\n  text = text.replace(/^[ ]{0,2}([ ]?\\-[ ]?){3,}[ \\t]*$/gm, key);\n  text = text.replace(/^[ ]{0,2}([ ]?_[ ]?){3,}[ \\t]*$/gm, key);\n\n  text = showdown.subParser('lists')(text, options, globals);\n  text = showdown.subParser('codeBlocks')(text, options, globals);\n  text = showdown.subParser('tables')(text, options, globals);\n\n  // We already ran _HashHTMLBlocks() before, in Markdown(), but that\n  // was to escape raw HTML in the original Markdown source. This time,\n  // we're escaping the markup we've just created, so that we don't wrap\n  // <p> tags around block-level tags.\n  text = showdown.subParser('hashHTMLBlocks')(text, options, globals);\n  text = showdown.subParser('paragraphs')(text, options, globals);\n\n  text = globals.converter._dispatch('blockGamut.after', text, options, globals);\n\n  return text;\n});\n\r\nshowdown.subParser('blockQuotes', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('blockQuotes.before', text, options, globals);\n\n  text = text.replace(/((^ {0,3}>[ \\t]?.+\\n(.+\\n)*\\n*)+)/gm, function (wholeMatch, m1) {\n    var bq = m1;\n\n    // attacklab: hack around Konqueror 3.5.4 bug:\n    // \"----------bug\".replace(/^-/g,\"\") == \"bug\"\n    bq = bq.replace(/^[ \\t]*>[ \\t]?/gm, '~0'); // trim one level of quoting\n\n    // attacklab: clean up hack\n    bq = bq.replace(/~0/g, '');\n\n    bq = bq.replace(/^[ \\t]+$/gm, ''); // trim whitespace-only lines\n    bq = showdown.subParser('githubCodeBlocks')(bq, options, globals);\n    bq = showdown.subParser('blockGamut')(bq, options, globals); // recurse\n\n    bq = bq.replace(/(^|\\n)/g, '$1  ');\n    // These leading spaces screw with <pre> content, so we need to fix that:\n    bq = bq.replace(/(\\s*<pre>[^\\r]+?<\\/pre>)/gm, function (wholeMatch, m1) {\n      var pre = m1;\n      // attacklab: hack around Konqueror 3.5.4 bug:\n      pre = pre.replace(/^  /mg, '~0');\n      pre = pre.replace(/~0/g, '');\n      return pre;\n    });\n\n    return showdown.subParser('hashBlock')('<blockquote>\\n' + bq + '\\n</blockquote>', options, globals);\n  });\n\n  text = globals.converter._dispatch('blockQuotes.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Process Markdown `<pre><code>` blocks.\n */\nshowdown.subParser('codeBlocks', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('codeBlocks.before', text, options, globals);\n\n  // sentinel workarounds for lack of \\A and \\Z, safari\\khtml bug\n  text += '~0';\n\n  var pattern = /(?:\\n\\n|^)((?:(?:[ ]{4}|\\t).*\\n+)+)(\\n*[ ]{0,3}[^ \\t\\n]|(?=~0))/g;\n  text = text.replace(pattern, function (wholeMatch, m1, m2) {\n    var codeblock = m1,\n        nextChar = m2,\n        end = '\\n';\n\n    codeblock = showdown.subParser('outdent')(codeblock);\n    codeblock = showdown.subParser('encodeCode')(codeblock);\n    codeblock = showdown.subParser('detab')(codeblock);\n    codeblock = codeblock.replace(/^\\n+/g, ''); // trim leading newlines\n    codeblock = codeblock.replace(/\\n+$/g, ''); // trim trailing newlines\n\n    if (options.omitExtraWLInCodeBlocks) {\n      end = '';\n    }\n\n    codeblock = '<pre><code>' + codeblock + end + '</code></pre>';\n\n    return showdown.subParser('hashBlock')(codeblock, options, globals) + nextChar;\n  });\n\n  // strip sentinel\n  text = text.replace(/~0/, '');\n\n  text = globals.converter._dispatch('codeBlocks.after', text, options, globals);\n  return text;\n});\n\r\n/**\n *\n *   *  Backtick quotes are used for <code></code> spans.\n *\n *   *  You can use multiple backticks as the delimiters if you want to\n *     include literal backticks in the code span. So, this input:\n *\n *         Just type ``foo `bar` baz`` at the prompt.\n *\n *       Will translate to:\n *\n *         <p>Just type <code>foo `bar` baz</code> at the prompt.</p>\n *\n *    There's no arbitrary limit to the number of backticks you\n *    can use as delimters. If you need three consecutive backticks\n *    in your code, use four for delimiters, etc.\n *\n *  *  You can use spaces to get literal backticks at the edges:\n *\n *         ... type `` `bar` `` ...\n *\n *       Turns to:\n *\n *         ... type <code>`bar`</code> ...\n */\nshowdown.subParser('codeSpans', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('codeSpans.before', text, options, globals);\n\n  /*\n   text = text.replace(/\n   (^|[^\\\\])\t\t\t\t\t// Character before opening ` can't be a backslash\n   (`+)\t\t\t\t\t\t// $2 = Opening run of `\n   (\t\t\t\t\t\t\t// $3 = The code block\n   [^\\r]*?\n   [^`]\t\t\t\t\t// attacklab: work around lack of lookbehind\n   )\n   \\2\t\t\t\t\t\t\t// Matching closer\n   (?!`)\n   /gm, function(){...});\n   */\n\n  if (typeof(text) === 'undefined') {\n    text = '';\n  }\n  text = text.replace(/(^|[^\\\\])(`+)([^\\r]*?[^`])\\2(?!`)/gm,\n    function (wholeMatch, m1, m2, m3) {\n      var c = m3;\n      c = c.replace(/^([ \\t]*)/g, '');\t// leading whitespace\n      c = c.replace(/[ \\t]*$/g, '');\t// trailing whitespace\n      c = showdown.subParser('encodeCode')(c);\n      return m1 + '<code>' + c + '</code>';\n    }\n  );\n\n  text = globals.converter._dispatch('codeSpans.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Convert all tabs to spaces\n */\nshowdown.subParser('detab', function (text) {\n  'use strict';\n\n  // expand first n-1 tabs\n  text = text.replace(/\\t(?=\\t)/g, '    '); // g_tab_width\n\n  // replace the nth with two sentinels\n  text = text.replace(/\\t/g, '~A~B');\n\n  // use the sentinel to anchor our regex so it doesn't explode\n  text = text.replace(/~B(.+?)~A/g, function (wholeMatch, m1) {\n    var leadingText = m1,\n        numSpaces = 4 - leadingText.length % 4;  // g_tab_width\n\n    // there *must* be a better way to do this:\n    for (var i = 0; i < numSpaces; i++) {\n      leadingText += ' ';\n    }\n\n    return leadingText;\n  });\n\n  // clean up sentinels\n  text = text.replace(/~A/g, '    ');  // g_tab_width\n  text = text.replace(/~B/g, '');\n\n  return text;\n\n});\n\r\n/**\n * Smart processing for ampersands and angle brackets that need to be encoded.\n */\nshowdown.subParser('encodeAmpsAndAngles', function (text) {\n  'use strict';\n  // Ampersand-encoding based entirely on Nat Irons's Amputator MT plugin:\n  // http://bumppo.net/projects/amputator/\n  text = text.replace(/&(?!#?[xX]?(?:[0-9a-fA-F]+|\\w+);)/g, '&amp;');\n\n  // Encode naked <'s\n  text = text.replace(/<(?![a-z\\/?\\$!])/gi, '&lt;');\n\n  return text;\n});\n\r\n/**\n * Returns the string, with after processing the following backslash escape sequences.\n *\n * attacklab: The polite way to do this is with the new escapeCharacters() function:\n *\n *    text = escapeCharacters(text,\"\\\\\",true);\n *    text = escapeCharacters(text,\"`*_{}[]()>#+-.!\",true);\n *\n * ...but we're sidestepping its use of the (slow) RegExp constructor\n * as an optimization for Firefox.  This function gets called a LOT.\n */\nshowdown.subParser('encodeBackslashEscapes', function (text) {\n  'use strict';\n  text = text.replace(/\\\\(\\\\)/g, showdown.helper.escapeCharactersCallback);\n  text = text.replace(/\\\\([`*_{}\\[\\]()>#+-.!])/g, showdown.helper.escapeCharactersCallback);\n  return text;\n});\n\r\n/**\n * Encode/escape certain characters inside Markdown code runs.\n * The point is that in code, these characters are literals,\n * and lose their special Markdown meanings.\n */\nshowdown.subParser('encodeCode', function (text) {\n  'use strict';\n\n  // Encode all ampersands; HTML entities are not\n  // entities within a Markdown code span.\n  text = text.replace(/&/g, '&amp;');\n\n  // Do the angle bracket song and dance:\n  text = text.replace(/</g, '&lt;');\n  text = text.replace(/>/g, '&gt;');\n\n  // Now, escape characters that are magic in Markdown:\n  text = showdown.helper.escapeCharacters(text, '*_{}[]\\\\', false);\n\n  // jj the line above breaks this:\n  //---\n  //* Item\n  //   1. Subitem\n  //            special char: *\n  // ---\n\n  return text;\n});\n\r\n/**\n *  Input: an email address, e.g. \"foo@example.com\"\n *\n *  Output: the email address as a mailto link, with each character\n *    of the address encoded as either a decimal or hex entity, in\n *    the hopes of foiling most address harvesting spam bots. E.g.:\n *\n *    <a href=\"&#x6D;&#97;&#105;&#108;&#x74;&#111;:&#102;&#111;&#111;&#64;&#101;\n *       x&#x61;&#109;&#x70;&#108;&#x65;&#x2E;&#99;&#111;&#109;\">&#102;&#111;&#111;\n *       &#64;&#101;x&#x61;&#109;&#x70;&#108;&#x65;&#x2E;&#99;&#111;&#109;</a>\n *\n *  Based on a filter by Matthew Wickline, posted to the BBEdit-Talk\n *  mailing list: <http://tinyurl.com/yu7ue>\n *\n */\nshowdown.subParser('encodeEmailAddress', function (addr) {\n  'use strict';\n\n  var encode = [\n    function (ch) {\n      return '&#' + ch.charCodeAt(0) + ';';\n    },\n    function (ch) {\n      return '&#x' + ch.charCodeAt(0).toString(16) + ';';\n    },\n    function (ch) {\n      return ch;\n    }\n  ];\n\n  addr = 'mailto:' + addr;\n\n  addr = addr.replace(/./g, function (ch) {\n    if (ch === '@') {\n      // this *must* be encoded. I insist.\n      ch = encode[Math.floor(Math.random() * 2)](ch);\n    } else if (ch !== ':') {\n      // leave ':' alone (to spot mailto: later)\n      var r = Math.random();\n      // roughly 10% raw, 45% hex, 45% dec\n      ch = (\n        r > 0.9 ? encode[2](ch) : r > 0.45 ? encode[1](ch) : encode[0](ch)\n      );\n    }\n    return ch;\n  });\n\n  addr = '<a href=\"' + addr + '\">' + addr + '</a>';\n  addr = addr.replace(/\">.+:/g, '\">'); // strip the mailto: from the visible part\n\n  return addr;\n});\n\r\n/**\n * Within tags -- meaning between < and > -- encode [\\ ` * _] so they\n * don't conflict with their use in Markdown for code, italics and strong.\n */\nshowdown.subParser('escapeSpecialCharsWithinTagAttributes', function (text) {\n  'use strict';\n\n  // Build a regex to find HTML tags and comments.  See Friedl's\n  // \"Mastering Regular Expressions\", 2nd Ed., pp. 200-201.\n  var regex = /(<[a-z\\/!$](\"[^\"]*\"|'[^']*'|[^'\">])*>|<!(--.*?--\\s*)+>)/gi;\n\n  text = text.replace(regex, function (wholeMatch) {\n    var tag = wholeMatch.replace(/(.)<\\/?code>(?=.)/g, '$1`');\n    tag = showdown.helper.escapeCharacters(tag, '\\\\`*_', false);\n    return tag;\n  });\n\n  return text;\n});\n\r\n/**\n * Handle github codeblocks prior to running HashHTML so that\n * HTML contained within the codeblock gets escaped properly\n * Example:\n * ```ruby\n *     def hello_world(x)\n *       puts \"Hello, #{x}\"\n *     end\n * ```\n */\nshowdown.subParser('githubCodeBlocks', function (text, options, globals) {\n  'use strict';\n\n  // early exit if option is not enabled\n  if (!options.ghCodeBlocks) {\n    return text;\n  }\n\n  text = globals.converter._dispatch('githubCodeBlocks.before', text, options, globals);\n\n  text += '~0';\n\n  text = text.replace(/(?:^|\\n)```(.*)\\n([\\s\\S]*?)\\n```/g, function (wholeMatch, language, codeblock) {\n    var end = (options.omitExtraWLInCodeBlocks) ? '' : '\\n';\n\n    // First parse the github code block\n    codeblock = showdown.subParser('encodeCode')(codeblock);\n    codeblock = showdown.subParser('detab')(codeblock);\n    codeblock = codeblock.replace(/^\\n+/g, ''); // trim leading newlines\n    codeblock = codeblock.replace(/\\n+$/g, ''); // trim trailing whitespace\n\n    codeblock = '<pre><code' + (language ? ' class=\"' + language + ' language-' + language + '\"' : '') + '>' + codeblock + end + '</code></pre>';\n\n    codeblock = showdown.subParser('hashBlock')(codeblock, options, globals);\n\n    // Since GHCodeblocks can be false positives, we need to\n    // store the primitive text and the parsed text in a global var,\n    // and then return a token\n    return '\\n\\n~G' + (globals.ghCodeBlocks.push({text: wholeMatch, codeblock: codeblock}) - 1) + 'G\\n\\n';\n  });\n\n  // attacklab: strip sentinel\n  text = text.replace(/~0/, '');\n\n  return globals.converter._dispatch('githubCodeBlocks.after', text, options, globals);\n});\n\r\nshowdown.subParser('hashBlock', function (text, options, globals) {\n  'use strict';\n  text = text.replace(/(^\\n+|\\n+$)/g, '');\n  return '\\n\\n~K' + (globals.gHtmlBlocks.push(text) - 1) + 'K\\n\\n';\n});\n\r\nshowdown.subParser('hashElement', function (text, options, globals) {\n  'use strict';\n\n  return function (wholeMatch, m1) {\n    var blockText = m1;\n\n    // Undo double lines\n    blockText = blockText.replace(/\\n\\n/g, '\\n');\n    blockText = blockText.replace(/^\\n/, '');\n\n    // strip trailing blank lines\n    blockText = blockText.replace(/\\n+$/g, '');\n\n    // Replace the element text with a marker (\"~KxK\" where x is its key)\n    blockText = '\\n\\n~K' + (globals.gHtmlBlocks.push(blockText) - 1) + 'K\\n\\n';\n\n    return blockText;\n  };\n});\n\r\nshowdown.subParser('hashHTMLBlocks', function (text, options, globals) {\n  'use strict';\n\n  var blockTags = [\n      'pre',\n      'div',\n      'h1',\n      'h2',\n      'h3',\n      'h4',\n      'h5',\n      'h6',\n      'blockquote',\n      'table',\n      'dl',\n      'ol',\n      'ul',\n      'script',\n      'noscript',\n      'form',\n      'fieldset',\n      'iframe',\n      'math',\n      'style',\n      'section',\n      'header',\n      'footer',\n      'nav',\n      'article',\n      'aside',\n      'address',\n      'audio',\n      'canvas',\n      'figure',\n      'hgroup',\n      'output',\n      'video',\n      'p'\n    ],\n    repFunc = function (wholeMatch, match, left, right) {\n      var txt = wholeMatch;\n      // check if this html element is marked as markdown\n      // if so, it's contents should be parsed as markdown\n      if (left.search(/\\bmarkdown\\b/) !== -1) {\n        txt = left + globals.converter.makeHtml(match) + right;\n      }\n      return '\\n\\n~K' + (globals.gHtmlBlocks.push(txt) - 1) + 'K\\n\\n';\n    };\n\n  for (var i = 0; i < blockTags.length; ++i) {\n    text = showdown.helper.replaceRecursiveRegExp(text, repFunc, '^ {0,3}<' + blockTags[i] + '\\\\b[^>]*>', '</' + blockTags[i] + '>', 'gim');\n  }\n\n  // HR SPECIAL CASE\n  text = text.replace(/(\\n {0,3}(<(hr)\\b([^<>])*?\\/?>)[ \\t]*(?=\\n{2,}))/g,\n    showdown.subParser('hashElement')(text, options, globals));\n\n  // Special case for standalone HTML comments\n  text = showdown.helper.replaceRecursiveRegExp(text, function (txt) {\n    return '\\n\\n~K' + (globals.gHtmlBlocks.push(txt) - 1) + 'K\\n\\n';\n  }, '^ {0,3}<!--', '-->', 'gm');\n\n  // PHP and ASP-style processor instructions (<?...?> and <%...%>)\n  text = text.replace(/(?:\\n\\n)( {0,3}(?:<([?%])[^\\r]*?\\2>)[ \\t]*(?=\\n{2,}))/g,\n    showdown.subParser('hashElement')(text, options, globals));\n\n  return text;\n});\n\r\n/**\n * Hash span elements that should not be parsed as markdown\n */\nshowdown.subParser('hashHTMLSpans', function (text, config, globals) {\n  'use strict';\n\n  var matches = showdown.helper.matchRecursiveRegExp(text, '<code\\\\b[^>]*>', '</code>', 'gi');\n\n  for (var i = 0; i < matches.length; ++i) {\n    text = text.replace(matches[i][0], '~L' + (globals.gHtmlSpans.push(matches[i][0]) - 1) + 'L');\n  }\n  return text;\n});\n\n/**\n * Unhash HTML spans\n */\nshowdown.subParser('unhashHTMLSpans', function (text, config, globals) {\n  'use strict';\n\n  for (var i = 0; i < globals.gHtmlSpans.length; ++i) {\n    text = text.replace('~L' + i + 'L', globals.gHtmlSpans[i]);\n  }\n\n  return text;\n});\n\r\n/**\n * Hash span elements that should not be parsed as markdown\n */\nshowdown.subParser('hashPreCodeTags', function (text, config, globals) {\n  'use strict';\n\n  var repFunc = function (wholeMatch, match, left, right) {\n    // encode html entities\n    var codeblock = left + showdown.subParser('encodeCode')(match) + right;\n    return '\\n\\n~G' + (globals.ghCodeBlocks.push({text: wholeMatch, codeblock: codeblock}) - 1) + 'G\\n\\n';\n  };\n\n  text = showdown.helper.replaceRecursiveRegExp(text, repFunc, '^ {0,3}<pre\\\\b[^>]*>\\\\s*<code\\\\b[^>]*>', '^ {0,3}</code>\\\\s*</pre>', 'gim');\n  return text;\n});\n\r\nshowdown.subParser('headers', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('headers.before', text, options, globals);\n\n  var prefixHeader = options.prefixHeaderId,\n      headerLevelStart = (isNaN(parseInt(options.headerLevelStart))) ? 1 : parseInt(options.headerLevelStart),\n\n  // Set text-style headers:\n  //\tHeader 1\n  //\t========\n  //\n  //\tHeader 2\n  //\t--------\n  //\n      setextRegexH1 = (options.smoothLivePreview) ? /^(.+)[ \\t]*\\n={2,}[ \\t]*\\n+/gm : /^(.+)[ \\t]*\\n=+[ \\t]*\\n+/gm,\n      setextRegexH2 = (options.smoothLivePreview) ? /^(.+)[ \\t]*\\n-{2,}[ \\t]*\\n+/gm : /^(.+)[ \\t]*\\n-+[ \\t]*\\n+/gm;\n\n  text = text.replace(setextRegexH1, function (wholeMatch, m1) {\n\n    var spanGamut = showdown.subParser('spanGamut')(m1, options, globals),\n        hID = (options.noHeaderId) ? '' : ' id=\"' + headerId(m1) + '\"',\n        hLevel = headerLevelStart,\n        hashBlock = '<h' + hLevel + hID + '>' + spanGamut + '</h' + hLevel + '>';\n    return showdown.subParser('hashBlock')(hashBlock, options, globals);\n  });\n\n  text = text.replace(setextRegexH2, function (matchFound, m1) {\n    var spanGamut = showdown.subParser('spanGamut')(m1, options, globals),\n        hID = (options.noHeaderId) ? '' : ' id=\"' + headerId(m1) + '\"',\n        hLevel = headerLevelStart + 1,\n      hashBlock = '<h' + hLevel + hID + '>' + spanGamut + '</h' + hLevel + '>';\n    return showdown.subParser('hashBlock')(hashBlock, options, globals);\n  });\n\n  // atx-style headers:\n  //  # Header 1\n  //  ## Header 2\n  //  ## Header 2 with closing hashes ##\n  //  ...\n  //  ###### Header 6\n  //\n  text = text.replace(/^(#{1,6})[ \\t]*(.+?)[ \\t]*#*\\n+/gm, function (wholeMatch, m1, m2) {\n    var span = showdown.subParser('spanGamut')(m2, options, globals),\n        hID = (options.noHeaderId) ? '' : ' id=\"' + headerId(m2) + '\"',\n        hLevel = headerLevelStart - 1 + m1.length,\n        header = '<h' + hLevel + hID + '>' + span + '</h' + hLevel + '>';\n\n    return showdown.subParser('hashBlock')(header, options, globals);\n  });\n\n  function headerId(m) {\n    var title, escapedId = m.replace(/[^\\w]/g, '').toLowerCase();\n\n    if (globals.hashLinkCounts[escapedId]) {\n      title = escapedId + '-' + (globals.hashLinkCounts[escapedId]++);\n    } else {\n      title = escapedId;\n      globals.hashLinkCounts[escapedId] = 1;\n    }\n\n    // Prefix id to prevent causing inadvertent pre-existing style matches.\n    if (prefixHeader === true) {\n      prefixHeader = 'section';\n    }\n\n    if (showdown.helper.isString(prefixHeader)) {\n      return prefixHeader + title;\n    }\n    return title;\n  }\n\n  text = globals.converter._dispatch('headers.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Turn Markdown image shortcuts into <img> tags.\n */\nshowdown.subParser('images', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('images.before', text, options, globals);\n\n  var inlineRegExp    = /!\\[(.*?)]\\s?\\([ \\t]*()<?(\\S+?)>?(?: =([*\\d]+[A-Za-z%]{0,4})x([*\\d]+[A-Za-z%]{0,4}))?[ \\t]*(?:(['\"])(.*?)\\6[ \\t]*)?\\)/g,\n      referenceRegExp = /!\\[([^\\]]*?)] ?(?:\\n *)?\\[(.*?)]()()()()()/g;\n\n  function writeImageTag (wholeMatch, altText, linkId, url, width, height, m5, title) {\n\n    var gUrls   = globals.gUrls,\n        gTitles = globals.gTitles,\n        gDims   = globals.gDimensions;\n\n    linkId = linkId.toLowerCase();\n\n    if (!title) {\n      title = '';\n    }\n\n    if (url === '' || url === null) {\n      if (linkId === '' || linkId === null) {\n        // lower-case and turn embedded newlines into spaces\n        linkId = altText.toLowerCase().replace(/ ?\\n/g, ' ');\n      }\n      url = '#' + linkId;\n\n      if (!showdown.helper.isUndefined(gUrls[linkId])) {\n        url = gUrls[linkId];\n        if (!showdown.helper.isUndefined(gTitles[linkId])) {\n          title = gTitles[linkId];\n        }\n        if (!showdown.helper.isUndefined(gDims[linkId])) {\n          width = gDims[linkId].width;\n          height = gDims[linkId].height;\n        }\n      } else {\n        return wholeMatch;\n      }\n    }\n\n    altText = altText.replace(/\"/g, '&quot;');\n    altText = showdown.helper.escapeCharacters(altText, '*_', false);\n    url = showdown.helper.escapeCharacters(url, '*_', false);\n    var result = '<img src=\"' + url + '\" alt=\"' + altText + '\"';\n\n    if (title) {\n      title = title.replace(/\"/g, '&quot;');\n      title = showdown.helper.escapeCharacters(title, '*_', false);\n      result += ' title=\"' + title + '\"';\n    }\n\n    if (width && height) {\n      width  = (width === '*') ? 'auto' : width;\n      height = (height === '*') ? 'auto' : height;\n\n      result += ' width=\"' + width + '\"';\n      result += ' height=\"' + height + '\"';\n    }\n\n    result += ' />';\n\n    return result;\n  }\n\n  // First, handle reference-style labeled images: ![alt text][id]\n  text = text.replace(referenceRegExp, writeImageTag);\n\n  // Next, handle inline images:  ![alt text](url =<width>x<height> \"optional title\")\n  text = text.replace(inlineRegExp, writeImageTag);\n\n  text = globals.converter._dispatch('images.after', text, options, globals);\n  return text;\n});\n\r\nshowdown.subParser('italicsAndBold', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('italicsAndBold.before', text, options, globals);\n\n  if (options.literalMidWordUnderscores) {\n    //underscores\n    // Since we are consuming a \\s character, we need to add it\n    text = text.replace(/(^|\\s|>|\\b)__(?=\\S)([\\s\\S]+?)__(?=\\b|<|\\s|$)/gm, '$1<strong>$2</strong>');\n    text = text.replace(/(^|\\s|>|\\b)_(?=\\S)([\\s\\S]+?)_(?=\\b|<|\\s|$)/gm, '$1<em>$2</em>');\n    //asterisks\n    text = text.replace(/(\\*\\*)(?=\\S)([^\\r]*?\\S[*]*)\\1/g, '<strong>$2</strong>');\n    text = text.replace(/(\\*)(?=\\S)([^\\r]*?\\S)\\1/g, '<em>$2</em>');\n\n  } else {\n    // <strong> must go first:\n    text = text.replace(/(\\*\\*|__)(?=\\S)([^\\r]*?\\S[*_]*)\\1/g, '<strong>$2</strong>');\n    text = text.replace(/(\\*|_)(?=\\S)([^\\r]*?\\S)\\1/g, '<em>$2</em>');\n  }\n\n  text = globals.converter._dispatch('italicsAndBold.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Form HTML ordered (numbered) and unordered (bulleted) lists.\n */\nshowdown.subParser('lists', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('lists.before', text, options, globals);\n  /**\n   * Process the contents of a single ordered or unordered list, splitting it\n   * into individual list items.\n   * @param {string} listStr\n   * @param {boolean} trimTrailing\n   * @returns {string}\n   */\n  function processListItems (listStr, trimTrailing) {\n    // The $g_list_level global keeps track of when we're inside a list.\n    // Each time we enter a list, we increment it; when we leave a list,\n    // we decrement. If it's zero, we're not in a list anymore.\n    //\n    // We do this because when we're not inside a list, we want to treat\n    // something like this:\n    //\n    //    I recommend upgrading to version\n    //    8. Oops, now this line is treated\n    //    as a sub-list.\n    //\n    // As a single paragraph, despite the fact that the second line starts\n    // with a digit-period-space sequence.\n    //\n    // Whereas when we're inside a list (or sub-list), that line will be\n    // treated as the start of a sub-list. What a kludge, huh? This is\n    // an aspect of Markdown's syntax that's hard to parse perfectly\n    // without resorting to mind-reading. Perhaps the solution is to\n    // change the syntax rules such that sub-lists must start with a\n    // starting cardinal number; e.g. \"1.\" or \"a.\".\n    globals.gListLevel++;\n\n    // trim trailing blank lines:\n    listStr = listStr.replace(/\\n{2,}$/, '\\n');\n\n    // attacklab: add sentinel to emulate \\z\n    listStr += '~0';\n\n    var rgx = /(\\n)?(^ {0,3})([*+-]|\\d+[.])[ \\t]+((\\[(x|X| )?])?[ \\t]*[^\\r]+?(\\n{1,2}))(?=\\n*(~0| {0,3}([*+-]|\\d+[.])[ \\t]+))/gm,\n        isParagraphed = (/\\n[ \\t]*\\n(?!~0)/.test(listStr));\n\n    // Since version 1.5, nesting sublists requires 4 spaces (or 1 tab) indentation,\n    // which is a syntax breaking change\n    // activating this option reverts to old behavior\n    if (options.disableForced4SpacesIndentedSublists) {\n      rgx = /(\\n)?(^ {0,3})([*+-]|\\d+[.])[ \\t]+((\\[(x|X| )?])?[ \\t]*[^\\r]+?(\\n{1,2}))(?=\\n*(~0|\\2([*+-]|\\d+[.])[ \\t]+))/gm;\n    }\n\n    listStr = listStr.replace(rgx, function (wholeMatch, m1, m2, m3, m4, taskbtn, checked) {\n      checked = (checked && checked.trim() !== '');\n\n      var item = showdown.subParser('outdent')(m4, options, globals),\n          bulletStyle = '';\n\n      // Support for github tasklists\n      if (taskbtn && options.tasklists) {\n        bulletStyle = ' class=\"task-list-item\" style=\"list-style-type: none;\"';\n        item = item.replace(/^[ \\t]*\\[(x|X| )?]/m, function () {\n          var otp = '<input type=\"checkbox\" disabled style=\"margin: 0px 0.35em 0.25em -1.6em; vertical-align: middle;\"';\n          if (checked) {\n            otp += ' checked';\n          }\n          otp += '>';\n          return otp;\n        });\n      }\n\n      // m1 - Leading line or\n      // Has a double return (multi paragraph) or\n      // Has sublist\n      if (m1 || (item.search(/\\n{2,}/) > -1)) {\n        item = showdown.subParser('githubCodeBlocks')(item, options, globals);\n        item = showdown.subParser('blockGamut')(item, options, globals);\n      } else {\n        // Recursion for sub-lists:\n        item = showdown.subParser('lists')(item, options, globals);\n        item = item.replace(/\\n$/, ''); // chomp(item)\n        if (isParagraphed) {\n          item = showdown.subParser('paragraphs')(item, options, globals);\n        } else {\n          item = showdown.subParser('spanGamut')(item, options, globals);\n        }\n      }\n      item =  '<li' + bulletStyle + '>' + item + '</li>\\n';\n      return item;\n    });\n\n    // attacklab: strip sentinel\n    listStr = listStr.replace(/~0/g, '');\n\n    globals.gListLevel--;\n\n    if (trimTrailing) {\n      listStr = listStr.replace(/\\s+$/, '');\n    }\n\n    return listStr;\n  }\n\n  /**\n   * Check and parse consecutive lists (better fix for issue #142)\n   * @param {string} list\n   * @param {string} listType\n   * @param {boolean} trimTrailing\n   * @returns {string}\n   */\n  function parseConsecutiveLists(list, listType, trimTrailing) {\n    // check if we caught 2 or more consecutive lists by mistake\n    // we use the counterRgx, meaning if listType is UL we look for OL and vice versa\n    var olRgx = (options.disableForced4SpacesIndentedSublists) ? /^ ?\\d+\\.[ \\t]/gm : /^ {0,3}\\d+\\.[ \\t]/gm,\n        ulRgx = (options.disableForced4SpacesIndentedSublists) ? /^ ?[*+-][ \\t]/gm : /^ {0,3}[*+-][ \\t]/gm,\n        counterRxg = (listType === 'ul') ? olRgx : ulRgx,\n        result = '';\n\n    if (list.search(counterRxg) !== -1) {\n      (function parseCL(txt) {\n        var pos = txt.search(counterRxg);\n        if (pos !== -1) {\n          // slice\n          result += '\\n<' + listType + '>\\n' + processListItems(txt.slice(0, pos), !!trimTrailing) + '</' + listType + '>\\n';\n\n          // invert counterType and listType\n          listType = (listType === 'ul') ? 'ol' : 'ul';\n          counterRxg = (listType === 'ul') ? olRgx : ulRgx;\n\n          //recurse\n          parseCL(txt.slice(pos));\n        } else {\n          result += '\\n<' + listType + '>\\n' + processListItems(txt, !!trimTrailing) + '</' + listType + '>\\n';\n        }\n      })(list);\n    } else {\n      result = '\\n<' + listType + '>\\n' + processListItems(list, !!trimTrailing) + '</' + listType + '>\\n';\n    }\n\n    return result;\n  }\n\n  // add sentinel to hack around khtml/safari bug:\n  // http://bugs.webkit.org/show_bug.cgi?id=11231\n  text += '~0';\n\n  if (globals.gListLevel) {\n    text = text.replace(/^(( {0,3}([*+-]|\\d+[.])[ \\t]+)[^\\r]+?(~0|\\n{2,}(?=\\S)(?![ \\t]*(?:[*+-]|\\d+[.])[ \\t]+)))/gm,\n      function (wholeMatch, list, m2) {\n        var listType = (m2.search(/[*+-]/g) > -1) ? 'ul' : 'ol';\n        return parseConsecutiveLists(list, listType, true);\n      }\n    );\n  } else {\n    text = text.replace(/(\\n\\n|^\\n?)(( {0,3}([*+-]|\\d+[.])[ \\t]+)[^\\r]+?(~0|\\n{2,}(?=\\S)(?![ \\t]*(?:[*+-]|\\d+[.])[ \\t]+)))/gm,\n      function (wholeMatch, m1, list, m3) {\n        var listType = (m3.search(/[*+-]/g) > -1) ? 'ul' : 'ol';\n        return parseConsecutiveLists(list, listType, false);\n      }\n    );\n  }\n\n  // strip sentinel\n  text = text.replace(/~0/, '');\n\n  text = globals.converter._dispatch('lists.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Remove one level of line-leading tabs or spaces\n */\nshowdown.subParser('outdent', function (text) {\n  'use strict';\n\n  // attacklab: hack around Konqueror 3.5.4 bug:\n  // \"----------bug\".replace(/^-/g,\"\") == \"bug\"\n  text = text.replace(/^(\\t|[ ]{1,4})/gm, '~0'); // attacklab: g_tab_width\n\n  // attacklab: clean up hack\n  text = text.replace(/~0/g, '');\n\n  return text;\n});\n\r\n/**\n *\n */\nshowdown.subParser('paragraphs', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('paragraphs.before', text, options, globals);\n  // Strip leading and trailing lines:\n  text = text.replace(/^\\n+/g, '');\n  text = text.replace(/\\n+$/g, '');\n\n  var grafs = text.split(/\\n{2,}/g),\n      grafsOut = [],\n      end = grafs.length; // Wrap <p> tags\n\n  for (var i = 0; i < end; i++) {\n    var str = grafs[i];\n    // if this is an HTML marker, copy it\n    if (str.search(/~(K|G)(\\d+)\\1/g) >= 0) {\n      grafsOut.push(str);\n    } else {\n      str = showdown.subParser('spanGamut')(str, options, globals);\n      str = str.replace(/^([ \\t]*)/g, '<p>');\n      str += '</p>';\n      grafsOut.push(str);\n    }\n  }\n\n  /** Unhashify HTML blocks */\n  end = grafsOut.length;\n  for (i = 0; i < end; i++) {\n    var blockText = '',\n        grafsOutIt = grafsOut[i],\n        codeFlag = false;\n    // if this is a marker for an html block...\n    while (grafsOutIt.search(/~(K|G)(\\d+)\\1/) >= 0) {\n      var delim = RegExp.$1,\n          num   = RegExp.$2;\n\n      if (delim === 'K') {\n        blockText = globals.gHtmlBlocks[num];\n      } else {\n        // we need to check if ghBlock is a false positive\n        if (codeFlag) {\n          // use encoded version of all text\n          blockText = showdown.subParser('encodeCode')(globals.ghCodeBlocks[num].text);\n        } else {\n          blockText = globals.ghCodeBlocks[num].codeblock;\n        }\n      }\n      blockText = blockText.replace(/\\$/g, '$$$$'); // Escape any dollar signs\n\n      grafsOutIt = grafsOutIt.replace(/(\\n\\n)?~(K|G)\\d+\\2(\\n\\n)?/, blockText);\n      // Check if grafsOutIt is a pre->code\n      if (/^<pre\\b[^>]*>\\s*<code\\b[^>]*>/.test(grafsOutIt)) {\n        codeFlag = true;\n      }\n    }\n    grafsOut[i] = grafsOutIt;\n  }\n  text = grafsOut.join('\\n');\n  // Strip leading and trailing lines:\n  text = text.replace(/^\\n+/g, '');\n  text = text.replace(/\\n+$/g, '');\n  return globals.converter._dispatch('paragraphs.after', text, options, globals);\n});\n\r\n/**\n * Run extension\n */\nshowdown.subParser('runExtension', function (ext, text, options, globals) {\n  'use strict';\n\n  if (ext.filter) {\n    text = ext.filter(text, globals.converter, options);\n\n  } else if (ext.regex) {\n    // TODO remove this when old extension loading mechanism is deprecated\n    var re = ext.regex;\n    if (!re instanceof RegExp) {\n      re = new RegExp(re, 'g');\n    }\n    text = text.replace(re, ext.replace);\n  }\n\n  return text;\n});\n\r\n/**\n * These are all the transformations that occur *within* block-level\n * tags like paragraphs, headers, and list items.\n */\nshowdown.subParser('spanGamut', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('spanGamut.before', text, options, globals);\n  text = showdown.subParser('codeSpans')(text, options, globals);\n  text = showdown.subParser('escapeSpecialCharsWithinTagAttributes')(text, options, globals);\n  text = showdown.subParser('encodeBackslashEscapes')(text, options, globals);\n\n  // Process anchor and image tags. Images must come first,\n  // because ![foo][f] looks like an anchor.\n  text = showdown.subParser('images')(text, options, globals);\n  text = showdown.subParser('anchors')(text, options, globals);\n\n  // Make links out of things like `<http://example.com/>`\n  // Must come after _DoAnchors(), because you can use < and >\n  // delimiters in inline links like [this](<url>).\n  text = showdown.subParser('autoLinks')(text, options, globals);\n  text = showdown.subParser('encodeAmpsAndAngles')(text, options, globals);\n  text = showdown.subParser('italicsAndBold')(text, options, globals);\n  text = showdown.subParser('strikethrough')(text, options, globals);\n\n  // Do hard breaks\n\n  // GFM style hard breaks\n  if (options.simpleLineBreaks) {\n    text = text.replace(/\\n/g, '<br />\\n');\n  } else {\n    text = text.replace(/  +\\n/g, '<br />\\n');\n  }\n\n  text = globals.converter._dispatch('spanGamut.after', text, options, globals);\n  return text;\n});\n\r\nshowdown.subParser('strikethrough', function (text, options, globals) {\n  'use strict';\n\n  if (options.strikethrough) {\n    text = globals.converter._dispatch('strikethrough.before', text, options, globals);\n    text = text.replace(/(?:~T){2}([\\s\\S]+?)(?:~T){2}/g, '<del>$1</del>');\n    text = globals.converter._dispatch('strikethrough.after', text, options, globals);\n  }\n\n  return text;\n});\n\r\n/**\n * Strip any lines consisting only of spaces and tabs.\n * This makes subsequent regexs easier to write, because we can\n * match consecutive blank lines with /\\n+/ instead of something\n * contorted like /[ \\t]*\\n+/\n */\nshowdown.subParser('stripBlankLines', function (text) {\n  'use strict';\n  return text.replace(/^[ \\t]+$/mg, '');\n});\n\r\n/**\n * Strips link definitions from text, stores the URLs and titles in\n * hash references.\n * Link defs are in the form: ^[id]: url \"optional title\"\n */\nshowdown.subParser('stripLinkDefinitions', function (text, options, globals) {\n  'use strict';\n\n  var regex = /^ {0,3}\\[(.+)]:[ \\t]*\\n?[ \\t]*<?(\\S+?)>?(?: =([*\\d]+[A-Za-z%]{0,4})x([*\\d]+[A-Za-z%]{0,4}))?[ \\t]*\\n?[ \\t]*(?:(\\n*)[\"|'(](.+?)[\"|')][ \\t]*)?(?:\\n+|(?=~0))/gm;\n\n  // attacklab: sentinel workarounds for lack of \\A and \\Z, safari\\khtml bug\n  text += '~0';\n\n  text = text.replace(regex, function (wholeMatch, linkId, url, width, height, blankLines, title) {\n    linkId = linkId.toLowerCase();\n    globals.gUrls[linkId] = showdown.subParser('encodeAmpsAndAngles')(url);  // Link IDs are case-insensitive\n\n    if (blankLines) {\n      // Oops, found blank lines, so it's not a title.\n      // Put back the parenthetical statement we stole.\n      return blankLines + title;\n\n    } else {\n      if (title) {\n        globals.gTitles[linkId] = title.replace(/\"|'/g, '&quot;');\n      }\n      if (options.parseImgDimensions && width && height) {\n        globals.gDimensions[linkId] = {\n          width:  width,\n          height: height\n        };\n      }\n    }\n    // Completely remove the definition from the text\n    return '';\n  });\n\n  // attacklab: strip sentinel\n  text = text.replace(/~0/, '');\n\n  return text;\n});\n\r\nshowdown.subParser('tables', function (text, options, globals) {\n  'use strict';\n\n  if (!options.tables) {\n    return text;\n  }\n\n  var tableRgx = /^ {0,3}\\|?.+\\|.+\\n[ \\t]{0,3}\\|?[ \\t]*:?[ \\t]*(?:-|=){2,}[ \\t]*:?[ \\t]*\\|[ \\t]*:?[ \\t]*(?:-|=){2,}[\\s\\S]+?(?:\\n\\n|~0)/gm;\n\n  function parseStyles(sLine) {\n    if (/^:[ \\t]*--*$/.test(sLine)) {\n      return ' style=\"text-align:left;\"';\n    } else if (/^--*[ \\t]*:[ \\t]*$/.test(sLine)) {\n      return ' style=\"text-align:right;\"';\n    } else if (/^:[ \\t]*--*[ \\t]*:$/.test(sLine)) {\n      return ' style=\"text-align:center;\"';\n    } else {\n      return '';\n    }\n  }\n\n  function parseHeaders(header, style) {\n    var id = '';\n    header = header.trim();\n    if (options.tableHeaderId) {\n      id = ' id=\"' + header.replace(/ /g, '_').toLowerCase() + '\"';\n    }\n    header = showdown.subParser('spanGamut')(header, options, globals);\n\n    return '<th' + id + style + '>' + header + '</th>\\n';\n  }\n\n  function parseCells(cell, style) {\n    var subText = showdown.subParser('spanGamut')(cell, options, globals);\n    return '<td' + style + '>' + subText + '</td>\\n';\n  }\n\n  function buildTable(headers, cells) {\n    var tb = '<table>\\n<thead>\\n<tr>\\n',\n        tblLgn = headers.length;\n\n    for (var i = 0; i < tblLgn; ++i) {\n      tb += headers[i];\n    }\n    tb += '</tr>\\n</thead>\\n<tbody>\\n';\n\n    for (i = 0; i < cells.length; ++i) {\n      tb += '<tr>\\n';\n      for (var ii = 0; ii < tblLgn; ++ii) {\n        tb += cells[i][ii];\n      }\n      tb += '</tr>\\n';\n    }\n    tb += '</tbody>\\n</table>\\n';\n    return tb;\n  }\n\n  text = globals.converter._dispatch('tables.before', text, options, globals);\n\n  text = text.replace(tableRgx, function (rawTable) {\n\n    var i, tableLines = rawTable.split('\\n');\n\n    // strip wrong first and last column if wrapped tables are used\n    for (i = 0; i < tableLines.length; ++i) {\n      if (/^ {0,3}\\|/.test(tableLines[i])) {\n        tableLines[i] = tableLines[i].replace(/^ {0,3}\\|/, '');\n      }\n      if (/\\|[ \\t]*$/.test(tableLines[i])) {\n        tableLines[i] = tableLines[i].replace(/\\|[ \\t]*$/, '');\n      }\n    }\n\n    var rawHeaders = tableLines[0].split('|').map(function (s) { return s.trim();}),\n        rawStyles = tableLines[1].split('|').map(function (s) { return s.trim();}),\n        rawCells = [],\n        headers = [],\n        styles = [],\n        cells = [];\n\n    tableLines.shift();\n    tableLines.shift();\n\n    for (i = 0; i < tableLines.length; ++i) {\n      if (tableLines[i].trim() === '') {\n        continue;\n      }\n      rawCells.push(\n        tableLines[i]\n          .split('|')\n          .map(function (s) {\n            return s.trim();\n          })\n      );\n    }\n\n    if (rawHeaders.length < rawStyles.length) {\n      return rawTable;\n    }\n\n    for (i = 0; i < rawStyles.length; ++i) {\n      styles.push(parseStyles(rawStyles[i]));\n    }\n\n    for (i = 0; i < rawHeaders.length; ++i) {\n      if (showdown.helper.isUndefined(styles[i])) {\n        styles[i] = '';\n      }\n      headers.push(parseHeaders(rawHeaders[i], styles[i]));\n    }\n\n    for (i = 0; i < rawCells.length; ++i) {\n      var row = [];\n      for (var ii = 0; ii < headers.length; ++ii) {\n        if (showdown.helper.isUndefined(rawCells[i][ii])) {\n\n        }\n        row.push(parseCells(rawCells[i][ii], styles[ii]));\n      }\n      cells.push(row);\n    }\n\n    return buildTable(headers, cells);\n  });\n\n  text = globals.converter._dispatch('tables.after', text, options, globals);\n\n  return text;\n});\n\r\n/**\n * Swap back in all the special characters we've hidden.\n */\nshowdown.subParser('unescapeSpecialChars', function (text) {\n  'use strict';\n\n  text = text.replace(/~E(\\d+)E/g, function (wholeMatch, m1) {\n    var charCodeToReplace = parseInt(m1);\n    return String.fromCharCode(charCodeToReplace);\n  });\n  return text;\n});\n\r\nvar root = this;\n\n// CommonJS/nodeJS Loader\nif (typeof module !== 'undefined' && module.exports) {\n  module.exports = showdown;\n\n// AMD Loader\n} else if (typeof define === 'function' && define.amd) {\n  define(function () {\n    'use strict';\n    return showdown;\n  });\n\n// Regular Browser loader\n} else {\n  root.showdown = showdown;\n}\n}).call(this);\r\n\n//# sourceMappingURL=showdown.js.map\r\n"]}